<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BytecodeApi</name>
    </assembly>
    <members>
        <member name="T:BytecodeApi.HttpClientException">
            <summary>
            The exception that is thrown when a <see cref="T:BytecodeApi.HttpClient" /> instance fails to process a request.
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="P:BytecodeApi.HttpClientException.Status">
            <summary>
            Gets the status of the response.
            </summary>
        </member>
        <member name="P:BytecodeApi.HttpClientException.Response">
            <summary>
            Gets the response that the remote host returned.
            </summary>
        </member>
        <member name="P:BytecodeApi.HttpClientException.ResponseBody">
            <summary>
            Gets the response body, typically an HTML error page.
            </summary>
        </member>
        <member name="M:BytecodeApi.HttpClientException.#ctor(System.Net.WebExceptionStatus,System.Net.WebResponse,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.HttpClientException" /> class.
            </summary>
            <param name="status">The status of the response.</param>
            <param name="response">The response that the remote host returned.</param>
            <param name="responseBody">The response body.</param>
            <param name="innerException">A nested <see cref="T:System.Exception" />.</param>
        </member>
        <member name="T:BytecodeApi.PostFile">
            <summary>
            Represents a file for HTTP multipart requests, used by the <see cref="T:BytecodeApi.HttpClient" /> class.
            </summary>
        </member>
        <member name="P:BytecodeApi.PostFile.FormName">
            <summary>
            Gets or sets the posted form name of the HTTP multipart entry.
            </summary>
        </member>
        <member name="P:BytecodeApi.PostFile.FileName">
            <summary>
            Gets or sets the uploaded filename of the HTTP multipart entry.
            </summary>
        </member>
        <member name="P:BytecodeApi.PostFile.Content">
            <summary>
            Gets or sets the binary content of the HTTP multipart entry.
            </summary>
        </member>
        <member name="M:BytecodeApi.PostFile.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.PostFile" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.PostFile.#ctor(System.String,System.String,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.PostFile" /> class with the specified name, filename and content.
            </summary>
            <param name="formName">The posted form name of the HTTP multipart entry.</param>
            <param name="fileName">The uploaded filename of the HTTP multipart entry.</param>
            <param name="content">The binary content of the HTTP multipart entry.</param>
        </member>
        <member name="M:BytecodeApi.PostFile.FromFile(System.String,System.String)">
            <summary>
            Creates a <see cref="T:BytecodeApi.PostFile" /> from the specified file with the specified form name. The name of the file will be assigned to <see cref="P:BytecodeApi.PostFile.FileName" />.
            </summary>
            <param name="formName">The posted form name of the HTTP multipart entry.</param>
            <param name="path">A <see cref="T:System.String" /> specifying the path of a file from which to create the <see cref="T:BytecodeApi.PostFile" />.</param>
            <returns>
            The <see cref="T:BytecodeApi.PostFile" /> this method creates.
            </returns>
        </member>
        <member name="T:BytecodeApi.ActionDelayer">
            <summary>
            Provoides a wrapper for <see cref="T:System.Action" /> and <see cref="T:System.Windows.RoutedEvent" /> actions to be postponed.
            <para />Example: A search text box, where the search is performed after 0.5 seconds without typing activity.
            </summary>
        </member>
        <member name="P:BytecodeApi.ActionDelayer.Delay">
            <summary>
            Gets or sets the amount of time that needs to pass between a consecutive call to <see cref="M:BytecodeApi.ActionDelayer.Execute(System.Action)" />, before the speficied <see cref="T:System.Action" /> or <see cref="T:System.Windows.RoutedEvent" /> is invoked.
            </summary>
        </member>
        <member name="M:BytecodeApi.ActionDelayer.#ctor(System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.ActionDelayer" /> class with the specified delay.
            </summary>
            <param name="delay">The amount of time that needs to pass between a consecutive call to <see cref="M:BytecodeApi.ActionDelayer.Execute(System.Action)" />, before the speficied <see cref="T:System.Action" /> or <see cref="T:System.Windows.RoutedEvent" /> is invoked.</param>
        </member>
        <member name="M:BytecodeApi.ActionDelayer.Dispose">
            <summary>
            Releases all resources used by the current instance of the <see cref="T:BytecodeApi.ActionDelayer" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.ActionDelayer.Execute(System.Action)">
            <summary>
            Invokes <paramref name="action" />, if the last call to <see cref="M:BytecodeApi.ActionDelayer.Execute(System.Action)" /> was longer ago than <see cref="P:BytecodeApi.ActionDelayer.Delay" />.
            </summary>
            <param name="action">The <see cref="T:System.Action" /> to be invoked.</param>
        </member>
        <member name="M:BytecodeApi.ActionDelayer.Execute(System.Action,System.Boolean)">
            <summary>
            Invokes <paramref name="action" />, if the last call to <see cref="M:BytecodeApi.ActionDelayer.Execute(System.Action)" /> was longer ago than <see cref="P:BytecodeApi.ActionDelayer.Delay" />.
            </summary>
            <param name="action">The <see cref="T:System.Action" /> to be invoked.</param>
            <param name="now"><see langword="true" /> to always invoke <paramref name="action" /> regardless of <see cref="P:BytecodeApi.ActionDelayer.Delay" />.</param>
        </member>
        <member name="M:BytecodeApi.ActionDelayer.Execute(System.Windows.Input.RoutedCommand,System.Object,System.Windows.IInputElement)">
            <summary>
            Executes <paramref name="command" />, if the last call to <see cref="M:BytecodeApi.ActionDelayer.Execute(System.Action)" /> was longer ago than <see cref="P:BytecodeApi.ActionDelayer.Delay" />.
            </summary>
            <param name="command">The <see cref="T:System.Windows.Input.RoutedCommand" /> to be executed.</param>
            <param name="parameter">The user defined parameter to be passed to <paramref name="command" />.</param>
            <param name="target">The element at which to begin looking for command handlers.</param>
        </member>
        <member name="M:BytecodeApi.ActionDelayer.Execute(System.Windows.Input.RoutedCommand,System.Object,System.Windows.IInputElement,System.Boolean)">
            <summary>
            Executes <paramref name="command" />, if the last call to <see cref="M:BytecodeApi.ActionDelayer.Execute(System.Action)" /> was longer ago than <see cref="P:BytecodeApi.ActionDelayer.Delay" />.
            </summary>
            <param name="command">The <see cref="T:System.Windows.Input.RoutedCommand" /> to be executed.</param>
            <param name="parameter">The user defined parameter to be passed to <paramref name="command" />.</param>
            <param name="target">The element at which to begin looking for command handlers.</param>
            <param name="now"><see langword="true" /> to always execute <paramref name="command" /> regardless of <see cref="P:BytecodeApi.ActionDelayer.Delay" />.</param>
        </member>
        <member name="T:BytecodeApi.ApplicationBase">
            <summary>
            Provides <see langword="static" /> methods that extend the <see cref="T:System.Windows.Application" /> and the <see cref="T:System.Windows.Forms.Application" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.ApplicationBase.DoEventsWhile(System.Func{System.Boolean})">
            <summary>
            Invokes an empty <see cref="T:System.Action" /> on the <see cref="T:System.Windows.Threading.Dispatcher" /> of <see cref="P:System.Windows.Application.Current" /> while <paramref name="condition" /> evaluates to <see langword="true" />, thereby refreshing the UI. This is the WPF equivalent to <see cref="M:System.Windows.Forms.Application.DoEvents" />.
            </summary>
            <param name="condition">The <see cref="T:System.Func`1" /> to be evaluated.</param>
        </member>
        <member name="M:BytecodeApi.ApplicationBase.DoEventsWhile(System.Func{System.Boolean},System.TimeSpan)">
            <summary>
            Invokes an empty <see cref="T:System.Action" /> on the <see cref="T:System.Windows.Threading.Dispatcher" /> of <see cref="P:System.Windows.Application.Current" /> while <paramref name="condition" /> evaluates to <see langword="true" />, thereby refreshing the UI. This is the WPF equivalent to <see cref="M:System.Windows.Forms.Application.DoEvents" />. The specified delay is waited between each call to <paramref name="condition" />.
            </summary>
            <param name="condition">The <see cref="T:System.Func`1" /> to be evaluated.</param>
            <param name="delay">A <see cref="T:System.TimeSpan" /> that specifies the delay between each call to <paramref name="condition" />.</param>
        </member>
        <member name="T:BytecodeApi.ApplicationBase.OperatingSystem">
            <summary>
            Provides information about the installed operating system.
            </summary>
        </member>
        <member name="P:BytecodeApi.ApplicationBase.OperatingSystem.Name">
            <summary>
            Gets the name of the operating system.
            <para />Examples: "Windows 7 Professional", "Windows 10 Pro"
            </summary>
        </member>
        <member name="P:BytecodeApi.ApplicationBase.OperatingSystem.InstallDate">
            <summary>
            Gets the installation date of the operating system.
            </summary>
        </member>
        <member name="P:BytecodeApi.ApplicationBase.OperatingSystem.InstalledAntiVirusSoftware">
            <summary>
            Gets an array containing a list of installed antivirus software.
            </summary>
        </member>
        <member name="P:BytecodeApi.ApplicationBase.OperatingSystem.FrameworkVersion">
            <summary>
            Gets the latest version of the .NET Framework and returns the version number as a fallback, if the version could not be looked up. Works only for .NET 4.0+.
            <para />Examples: 4.6, 4.7, 4.7.1
            <para />Example of a fallback version number: 461310
            </summary>
        </member>
        <member name="T:BytecodeApi.ApplicationBase.Hardware">
            <summary>
            Provides information about installed hardware.
            </summary>
        </member>
        <member name="P:BytecodeApi.ApplicationBase.Hardware.Processor">
            <summary>
            Gets the name of the processor. If multiple processors are installed, the name of the first processor is returned.
            </summary>
        </member>
        <member name="P:BytecodeApi.ApplicationBase.Hardware.Memory">
            <summary>
            Gets the total amount of installed physical memory.
            </summary>
        </member>
        <member name="P:BytecodeApi.ApplicationBase.Hardware.VideoController">
            <summary>
            Gets the name of the video controller. If multiple video controllers are installed, the name of the first video controller is returned.
            </summary>
        </member>
        <member name="T:BytecodeApi.ApplicationBase.Process">
            <summary>
            Provides information about the current process.
            </summary>
        </member>
        <member name="P:BytecodeApi.ApplicationBase.Process.Id">
            <summary>
            Gets the ProcessID of the current <see cref="T:BytecodeApi.ApplicationBase.Process" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.ApplicationBase.Process.SessionId">
            <summary>
            Gets the SessionID of the current <see cref="T:BytecodeApi.ApplicationBase.Process" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.ApplicationBase.Process.IntegrityLevel">
            <summary>
            Gets the mandatory integrity level for the current <see cref="T:BytecodeApi.ApplicationBase.Process" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.ApplicationBase.Process.IsElevated">
            <summary>
            Gets a <see cref="T:System.Boolean" /> value indicating whether the current <see cref="T:BytecodeApi.ApplicationBase.Process" /> is elevated or not.
            </summary>
        </member>
        <member name="P:BytecodeApi.ApplicationBase.Process.ElevationType">
            <summary>
            Gets the <see cref="P:BytecodeApi.ApplicationBase.Process.ElevationType" /> for the current <see cref="T:BytecodeApi.ApplicationBase.Process" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.ApplicationBase.Process.StartupPath">
            <summary>
            Gets the path for the executable file that started the application, not including the executable name.
            </summary>
        </member>
        <member name="P:BytecodeApi.ApplicationBase.Process.ExecutablePath">
            <summary>
            Gets the path for the executable file that started the application, including the executable name.
            </summary>
        </member>
        <member name="P:BytecodeApi.ApplicationBase.Process.Memory">
            <summary>
            Gets the amount of private memory, in bytes, allocated for the current <see cref="T:BytecodeApi.ApplicationBase.Process" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.ApplicationBase.Process.DebugMode">
            <summary>
            Gets a <see cref="T:System.Boolean" /> value indicating whether <see cref="P:System.Diagnostics.Debugger.IsAttached" /> was equal to <see langword="true" /> on application startup, or if this executable is located in a directory named like "\bin\Debug", "\bin\x86\Debug", or "\bin\x64\Debug".
            </summary>
        </member>
        <member name="T:BytecodeApi.ApplicationBase.Session">
            <summary>
            Provides information about the current logon session and related information.
            </summary>
        </member>
        <member name="P:BytecodeApi.ApplicationBase.Session.CurrentUser">
            <summary>
            Gets the name of the current <see cref="T:System.Security.Principal.WindowsIdentity" />, including the domain or workstation name.
            </summary>
        </member>
        <member name="P:BytecodeApi.ApplicationBase.Session.CurrentUserShort">
            <summary>
            Gets the name of the current <see cref="T:System.Security.Principal.WindowsIdentity" />, not including the domain or workstation name.
            </summary>
        </member>
        <member name="P:BytecodeApi.ApplicationBase.Session.DomainName">
            <summary>
            Gets the domain in which the local computer is registered.
            </summary>
        </member>
        <member name="P:BytecodeApi.ApplicationBase.Session.Workgroup">
            <summary>
            Gets the workgroup in which the local computer is registered.
            </summary>
        </member>
        <member name="P:BytecodeApi.ApplicationBase.Session.IsWorkstationLocked">
            <summary>
            Gets a <see cref="T:System.Boolean" /> value indicating whether the workstation is locked.
            </summary>
        </member>
        <member name="T:BytecodeApi.ConvertEx">
            <summary>
            Provides <see langword="static" /> methods that extend the <see cref="T:System.Convert" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.ConvertEx.ToExcelColumnIndex(System.String)">
            <summary>
            Converts an Excel column name (like A, B, ... AA, AB, ...) to a zero-based index.
            </summary>
            <param name="str">A <see cref="T:System.String" /> representing an Excel column name.</param>
            <returns>
            A <see cref="T:System.Int32" /> value with the zero-based index, converted from the Excel column name.
            </returns>
        </member>
        <member name="M:BytecodeApi.ConvertEx.ToExcelColumnIndex(System.String,System.Boolean)">
            <summary>
            Converts an Excel column name (like A, B, ... AA, AB, ...) to a zero-based or one-based index.
            </summary>
            <param name="str">A <see cref="T:System.String" /> representing an Excel column name.</param>
            <param name="oneBased"><see langword="true" /> to return a one-based index; otherwise, <see langword="false" />.</param>
            <returns>
            A <see cref="T:System.Int32" /> value with the zero-based or one-based index, converted from the Excel column name.
            </returns>
        </member>
        <member name="M:BytecodeApi.ConvertEx.To7BitEncodedInt(System.Int32)">
            <summary>
            Converts a 32-bit integer into a compressed format.
            </summary>
            <param name="value">The <see cref="T:System.Int32" /> value to convert.</param>
            <returns>
            A new <see cref="T:System.Byte" />[] that represents the specified 32-bit integer in compressed format.
            </returns>
        </member>
        <member name="M:BytecodeApi.ConvertEx.From7BitEncodedInt(System.Byte[])">
            <summary>
            Converts a compressed 32-bit integer into a <see cref="T:System.Int32" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Byte" />[] value to convert.</param>
            <returns>
            A <see cref="T:System.Int32" /> value that was converted from the specified 32-bit integer in binary format.
            </returns>
        </member>
        <member name="M:BytecodeApi.ConvertEx.FromUnixTimeStamp(System.Int32)">
            <summary>
            Converts a <see cref="T:System.Int32" /> value representing a unix time stamp to a <see cref="T:System.DateTime" /> object, using the <see cref="F:System.DateTimeKind.Unspecified" /> kind.
            </summary>
            <param name="seconds">The seconds starting from 01.01.1970 00:00:00.</param>
            <returns>
            A new <see cref="T:System.DateTime" /> object whose value is the sum of 01.01.1970 00:00:00 and <paramref name="seconds" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.ConvertEx.FromUnixTimeStamp(System.Int32,System.DateTimeKind)">
            <summary>
            Converts a <see cref="T:System.Int32" /> value representing a unix time stamp to a <see cref="T:System.DateTime" /> object, using the specified <see cref="T:System.DateTimeKind" />.
            </summary>
            <param name="seconds">The seconds starting from 01.01.1970 00:00:00.</param>
            <param name="kind">The <see cref="T:System.DateTimeKind" /> to be used for creation of the <see cref="T:System.DateTime" /> object.</param>
            <returns>
            A new <see cref="T:System.DateTime" /> object whose value is the sum of 01.01.1970 00:00:00 and <paramref name="seconds" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.ConvertEx.ToUnixTimeStamp(System.DateTime)">
            <summary>
            Converts a <see cref="T:System.DateTime" /> value to its equivalent unix time stamp represented as a <see cref="T:System.Int32" /> value, using the specified <see cref="T:System.DateTimeKind" />. If <paramref name="dateTime" /> is out of bounds of the unix epoch, <see langword="null" /> is returned.
            </summary>
            <param name="dateTime">The <see cref="T:System.DateTime" /> object which is converted to its equivalent unix time stamp representation.</param>
            <returns>
            If <paramref name="dateTime" /> is in bounds of the unix epoch, the amount of seconds between 01.01.1970 00:00:00 and <paramref name="dateTime" />;
            otherwise, <see langword="null" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.ConvertEx.ToUnixTimeStamp(System.DateTime,System.DateTimeKind)">
            <summary>
            Converts a <see cref="T:System.DateTime" /> value to its equivalent unix time stamp represented as a <see cref="T:System.Int32" /> value, using the <see cref="F:System.DateTimeKind.Unspecified" /> kind. If <paramref name="dateTime" /> is out of bounds of the unix epoch, <see langword="null" /> is returned.
            </summary>
            <param name="dateTime">The <see cref="T:System.DateTime" /> object which is converted to its equivalent unix time stamp representation.</param>
            <param name="kind">The <see cref="T:System.DateTimeKind" /> to be used for conversion of the <see cref="T:System.DateTime" /> object.</param>
            <returns>
            If <paramref name="dateTime" /> is in bounds of the unix epoch, the amount of seconds between 01.01.1970 00:00:00 and <paramref name="dateTime" />;
            otherwise, <see langword="null" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.ConvertEx.ToIcon(System.Byte[])">
            <summary>
            Converts a <see cref="T:System.Byte" />[] to an <see cref="T:System.Drawing.Icon" />. The <paramref name="array" /> object should represent the binary of a valid icon file.
            </summary>
            <param name="array">A <see cref="T:System.Byte" />[] that represents a valid icon file.</param>
            <returns>
            A new <see cref="T:System.Drawing.Icon" /> object, created from the contents of <paramref name="array" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.ConvertEx.ToBitmap(System.Byte[])">
            <summary>
            Converts a <see cref="T:System.Byte" />[] to an <see cref="T:System.Drawing.Bitmap" />. The <paramref name="array" /> object should represent the binary of a valid image file.
            </summary>
            <param name="array">A <see cref="T:System.Byte" />[] that represents a valid image file.</param>
            <returns>
            A new <see cref="T:System.Drawing.Bitmap" /> object, created from the contents of <paramref name="array" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.Escape">
            <summary>
            Provides support for <see cref="T:System.String" /> escape implemented for various algorithms.
            </summary>
        </member>
        <member name="M:BytecodeApi.Escape.SendKeys(System.String)">
            <summary>
            Escapes a SendKeys sequence. The characters +^%~(){}[] are encapsulated by braces. The returned <see cref="T:System.String" /> can be then passed to SendKeys.
            </summary>
            <param name="str">The <see cref="T:System.String" /> value to be escaped.</param>
            <returns>
            A <see cref="T:System.String" /> with the escaped representation of <paramref name="str" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.CSharp">
            <summary>
            Proides <see langword="static" /> methods and properties serving as a general object manipulation helper class.
            </summary>
        </member>
        <member name="F:BytecodeApi.CSharp.BuiltInTypes">
            <summary>
            Represents a <see cref="T:System.Collections.Generic.Dictionary`2" /> with all C# built-in types. The key contains the class name of the type. The value contains the equivalent <see cref="T:System.Type" /> representation of the type.
            <para />This <see cref="T:System.Collections.Generic.Dictionary`2" /> contains following keys: Void, Boolean, Byte, SByte, Char, Decimal, Double, Single, Int32, UInt32, Int64, UInt64, Object, Int16, UInt16, String
            </summary>
        </member>
        <member name="F:BytecodeApi.CSharp.BuiltInTypeNames">
            <summary>
            Represents a <see cref="T:System.Collections.Generic.Dictionary`2" /> with all C# built-in types. The key contains the class name of the type. The value contains the equivalent <see cref="T:System.String" /> representation of the type name (e.g. "Int32" and "int").
            <para />This <see cref="T:System.Collections.Generic.Dictionary`2" /> contains following keys: Void, Boolean, Byte, SByte, Char, Decimal, Double, Single, Int32, UInt32, Int64, UInt64, Object, Int16, UInt16, String
            </summary>
        </member>
        <member name="M:BytecodeApi.CSharp.Swap``1(``0@,``0@)">
            <summary>
            Exchanges the references of two <see cref="T:System.Object" /> instances.
            </summary>
            <typeparam name="T">The type of the <see cref="T:System.Object" /> instances to be exchanged.</typeparam>
            <param name="objA">The <see cref="T:System.Object" /> to be exchanged.</param>
            <param name="objB">The <see cref="T:System.Object" /> to be exchanged.</param>
        </member>
        <member name="M:BytecodeApi.CSharp.EqualsAny``1(``0,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Compares <paramref name="obj" /> with the objects in the specified collection and returns <see langword="true" />, if <paramref name="obj" /> is equal to any of the values.
            </summary>
            <typeparam name="T">The type of the <see cref="T:System.Object" /> and the value collection.</typeparam>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the objects in <paramref name="values" />.</param>
            <param name="values">The value collection to be compared to <paramref name="obj" />.</param>
            <returns>
            <see langword="true" />, if <paramref name="obj" /> is equal to any of the values in the specified collection;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.CSharp.EqualsAny``1(``0,``0[])">
            <summary>
            Compares <paramref name="obj" /> with the objects in the specified collection and returns <see langword="true" />, if <paramref name="obj" /> is equal to any of the values.
            </summary>
            <typeparam name="T">The type of the <see cref="T:System.Object" /> and the value collection.</typeparam>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the objects in <paramref name="values" />.</param>
            <param name="values">The value collection to be compared to <paramref name="obj" />.</param>
            <returns>
            <see langword="true" />, if <paramref name="obj" /> is equal to any of the values in the specified collection;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.CSharp.EqualsNone``1(``0,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Compares <paramref name="obj" /> with the objects in the specified collection and returns <see langword="true" />, if <paramref name="obj" /> is equal to none of the values.
            </summary>
            <typeparam name="T">The type of the <see cref="T:System.Object" /> and the value collection.</typeparam>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the objects in <paramref name="values" />.</param>
            <param name="values">The value collection to be compared to <paramref name="obj" />.</param>
            <returns>
            <see langword="true" />, if <paramref name="obj" /> is equal to none of the values in the specified collection;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.CSharp.EqualsNone``1(``0,``0[])">
            <summary>
            Compares <paramref name="obj" /> with the objects in the specified collection and returns <see langword="true" />, if <paramref name="obj" /> is equal to none of the values.
            </summary>
            <typeparam name="T">The type of the <see cref="T:System.Object" /> and the value collection.</typeparam>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the objects in <paramref name="values" />.</param>
            <param name="values">The value collection to be compared to <paramref name="obj" />.</param>
            <returns>
            <see langword="true" />, if <paramref name="obj" /> is equal to none of the values in the specified collection;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.CSharp.EqualsAll``1(``0,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Compares <paramref name="obj" /> with the objects in the specified collection and returns <see langword="true" />, if <paramref name="obj" /> is equal to all of the values.
            </summary>
            <typeparam name="T">The type of the <see cref="T:System.Object" /> and the value collection.</typeparam>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the objects in <paramref name="values" />.</param>
            <param name="values">The value collection to be compared to <paramref name="obj" />.</param>
            <returns>
            <see langword="true" />, if <paramref name="obj" /> is equal to all of the values in the specified collection;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.CSharp.EqualsAll``1(``0,``0[])">
            <summary>
            Compares <paramref name="obj" /> with the objects in the specified collection and returns <see langword="true" />, if <paramref name="obj" /> is equal to all of the values.
            </summary>
            <typeparam name="T">The type of the <see cref="T:System.Object" /> and the value collection.</typeparam>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the objects in <paramref name="values" />.</param>
            <param name="values">The value collection to be compared to <paramref name="obj" />.</param>
            <returns>
            <see langword="true" />, if <paramref name="obj" /> is equal to all of the values in the specified collection;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.CSharp.Try(System.Action)">
            <summary>
            Invokes an <see cref="T:System.Action" /> and handles any <see cref="T:System.Exception" />. Returns <see langword="true" /> on successful execution and <see langword="false" />, if an <see cref="T:System.Exception" /> was thrown.
            </summary>
            <param name="action">The <see cref="T:System.Action" /> to be invoked.</param>
            <returns>
            <see langword="true" />, on successful execution and
            <see langword="false" />, if an <see cref="T:System.Exception" /> was thrown.
            </returns>
        </member>
        <member name="M:BytecodeApi.CSharp.Try(System.Action,System.Boolean)">
            <summary>
            Invokes an <see cref="T:System.Action" /> and handles any <see cref="T:System.Exception" />. Returns <see langword="true" /> on successful execution and <see langword="false" />, if an <see cref="T:System.Exception" /> was thrown.
            </summary>
            <param name="action">The <see cref="T:System.Action" /> to be invoked.</param>
            <param name="throws"><see langword="true" /> to throw the <see cref="T:System.Exception" /> anyway, effectively bypassing the function logic and just executing <paramref name="action" /> without exception handling.</param>
            <returns>
            <see langword="true" />, on successful execution and
            <see langword="false" />, if an <see cref="T:System.Exception" /> was thrown and <paramref name="throws" /> equals to <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.CSharp.Try``1(System.Func{``0})">
            <summary>
            Invokes a <see cref="T:System.Func`1" /> and handles any <see cref="T:System.Exception" />. Returns the result of <see cref="T:System.Func`1" /> on successful execution and <see langword="default" />(<see cref="T:System.Func`1" />) if an <see cref="T:System.Exception" /> was thrown.
            </summary>
            <typeparam name="T">The return type of <paramref name="func" />.</typeparam>
            <param name="func">The <see cref="T:System.Func`1" /> to be invoked.</param>
            <returns>
            The result of <see cref="T:System.Func`1" />, on successful execution and
            <see langword="default" />(<see cref="T:System.Func`1" />), if an <see cref="T:System.Exception" /> was thrown.
            </returns>
        </member>
        <member name="M:BytecodeApi.CSharp.Try``1(System.Func{``0},``0)">
            <summary>
            Invokes a <see cref="T:System.Func`1" /> and handles any <see cref="T:System.Exception" />. Returns the result of <see cref="T:System.Func`1" /> on successful execution and <paramref name="defaultValue" />, if an <see cref="T:System.Exception" /> was thrown.
            </summary>
            <typeparam name="T">The return type of <paramref name="func" />.</typeparam>
            <param name="func">The <see cref="T:System.Func`1" /> to be invoked.</param>
            <param name="defaultValue">The default value that is returned if an <see cref="T:System.Exception" /> was thrown.</param>
            <returns>
            The result of <see cref="T:System.Func`1" />, on successful execution and
            <paramref name="defaultValue" />, if an <see cref="T:System.Exception" /> was thrown.
            </returns>
        </member>
        <member name="M:BytecodeApi.CSharp.Try``1(System.Func{``0},``0,System.Boolean)">
            <summary>
            Invokes a <see cref="T:System.Func`1" /> and handles any <see cref="T:System.Exception" />. Returns the result of <see cref="T:System.Func`1" /> on successful execution and <paramref name="defaultValue" />, if an <see cref="T:System.Exception" /> was thrown.
            </summary>
            <typeparam name="T">The return type of <paramref name="func" />.</typeparam>
            <param name="func">The <see cref="T:System.Func`1" /> to be invoked.</param>
            <param name="defaultValue">The default value that is returned if an <see cref="T:System.Exception" /> was thrown.</param>
            <param name="throws"><see langword="true" /> to throw the <see cref="T:System.Exception" /> anyway, effectively bypassing the function logic and just executing <paramref name="func" /> without exception handling.</param>
            <returns>
            The result of <see cref="T:System.Func`1" />, on successful execution and
            <paramref name="defaultValue" />, if an <see cref="T:System.Exception" /> was thrown and <paramref name="throws" /> equals to <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.CSharp.Retry(System.Action,System.Int32)">
            <summary>
            Attempts to invoke an <see cref="T:System.Action" /> up to a defined number of times until <paramref name="action" /> successfully returned without throwing an <see cref="T:System.Exception" />. If <paramref name="action" /> throws an <see cref="T:System.Exception" /> on the last time, the <see cref="T:System.Exception" /> is rethrown.
            </summary>
            <param name="action">The <see cref="T:System.Action" /> to be invoked.</param>
            <param name="attempts">A <see cref="T:System.Int32" /> value indicating how many times <paramref name="action" /> is attempted before the final <see cref="T:System.Exception" /> is rethrown.</param>
        </member>
        <member name="M:BytecodeApi.CSharp.Retry(System.Action,System.Int32,System.TimeSpan)">
            <summary>
            Attempts to invoke an <see cref="T:System.Action" /> up to a defined number of times until <paramref name="action" /> successfully returned without throwing an <see cref="T:System.Exception" />. If <paramref name="action" /> throws an <see cref="T:System.Exception" /> on the last time, the <see cref="T:System.Exception" /> is rethrown. Between each call of <paramref name="action" /> that throws an <see cref="T:System.Exception" />, a delay of <paramref name="delay" /> is waited.
            </summary>
            <param name="action">The <see cref="T:System.Action" /> to be invoked.</param>
            <param name="attempts">A <see cref="T:System.Int32" /> value indicating how many times <paramref name="action" /> is attempted before the final <see cref="T:System.Exception" /> is rethrown.</param>
            <param name="delay">A <see cref="T:System.TimeSpan" /> value representing the wait period between each call of <paramref name="action" /> that throws an <see cref="T:System.Exception" />.</param>
        </member>
        <member name="M:BytecodeApi.CSharp.Retry``1(System.Func{``0},System.Int32)">
            <summary>
            Attempts to invoke a <see cref="T:System.Func`1" /> up to a defined number of times until <paramref name="func" /> successfully returns a value without throwing an <see cref="T:System.Exception" />. If <paramref name="func" /> throws an <see cref="T:System.Exception" /> on the last time, the <see cref="T:System.Exception" /> is rethrown.
            </summary>
            <typeparam name="T">The return type of <paramref name="func" />.</typeparam>
            <param name="func">The <see cref="T:System.Func`1" /> to be invoked.</param>
            <param name="attempts">A <see cref="T:System.Int32" /> value indicating how many times <paramref name="func" /> is attempted before the final <see cref="T:System.Exception" /> is rethrown.</param>
            <returns>
            The result of <paramref name="func" />, if <paramref name="func" /> successfully returned a value in the given number of attempts without throwing an <see cref="T:System.Exception" />;
            otherwise, rethrows the <see cref="T:System.Exception" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.CSharp.Retry``1(System.Func{``0},System.Int32,System.TimeSpan)">
            <summary>
            Attempts to invoke a <see cref="T:System.Func`1" /> up to a defined number of times until <paramref name="func" /> successfully returns a value without throwing an <see cref="T:System.Exception" />. If <paramref name="func" /> throws an <see cref="T:System.Exception" /> on the last time, the <see cref="T:System.Exception" /> is rethrown. Between each call of <paramref name="func" /> that throws an <see cref="T:System.Exception" />, a delay of <paramref name="delay" /> is waited.
            </summary>
            <typeparam name="T">The return type of <paramref name="func" />.</typeparam>
            <param name="func">The <see cref="T:System.Func`1" /> to be invoked.</param>
            <param name="attempts">A <see cref="T:System.Int32" /> value indicating how many times <paramref name="func" /> is attempted before the final <see cref="T:System.Exception" /> is rethrown.</param>
            <param name="delay">A <see cref="T:System.TimeSpan" /> value representing the wait period between each call of <paramref name="func" /> that throws an <see cref="T:System.Exception" />.</param>
            <returns>
            The result of <paramref name="func" />, if <paramref name="func" /> successfully returned a value in the given number of attempts without throwing an <see cref="T:System.Exception" />;
            otherwise, rethrows the <see cref="T:System.Exception" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.CSharp.Timeout(System.Func{System.Boolean},System.TimeSpan,System.TimeSpan)">
            <summary>
            Invokes a <see cref="T:System.Func`1" /> until the result of <paramref name="func" /> is <see langword="true" /> or <paramref name="timeout" /> has been reached. Between each call of <paramref name="func" /> that returns <see langword="false" />, a delay of <paramref name="delay" /> is waited. If <paramref name="func" /> does not return <see langword="true" /> in this timeframe, <see langword="false" /> is returned, otherwuse <see langword="true" />.
            </summary>
            <param name="func">The <see cref="T:System.Func`1" /> to be tested.</param>
            <param name="timeout">A <see cref="T:System.TimeSpan" /> value representing the total time for <paramref name="func" /> to be tested.</param>
            <param name="delay">A <see cref="T:System.TimeSpan" /> value representing the wait period between each call of <paramref name="func" /> that returns <see langword="false" />.</param>
            <returns>
            <see langword="true" />, if <paramref name="func" /> returned <see langword="true" /> in the specified <paramref name="timeout" />;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.CSharp.FindDataContext``1(System.Object)">
            <summary>
            Returns the DataContext property, if the specified <see cref="T:System.Object" /> instance is either a <see cref="T:System.Windows.FrameworkElement" /> or a <see cref="T:System.Windows.FrameworkContentElement" />. If found and can be casted to the specified type, the DataContext is returned, otherwise, <see langword="null" />.
            </summary>
            <typeparam name="T">The return type to cast the DataContext property to.</typeparam>
            <param name="obj">The <see cref="T:System.Object" /> where the DataContext property looked for. This is typically a parameter from a WPF event hanlder.</param>
            <returns>
            <see cref="P:System.Windows.FrameworkElement.DataContext" />, if this <see cref="T:System.Object" /> instance is a <see cref="T:System.Windows.FrameworkElement" />;
            <see cref="P:System.Windows.FrameworkContentElement.DataContext" />, if this <see cref="T:System.Object" /> instance is a <see cref="T:System.Windows.FrameworkContentElement" />;
            otherwise, <see langword="null" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.Create">
            <summary>
            Provides support for creation and generation of generic objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.Create.Guid">
            <summary>
            Generates a new <see cref="T:System.Guid" /> using the <see cref="F:BytecodeApi.GuidFormat.Default" /> format.
            </summary>
            <returns>
            A new <see cref="T:System.Guid" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Create.Guid(BytecodeApi.GuidFormat)">
            <summary>
            Generates a new <see cref="T:System.Guid" /> using the specified format.
            </summary>
            <param name="format">The <see cref="T:BytecodeApi.GuidFormat" /> to be used for <see cref="T:System.String" /> formatting.</param>
            <returns>
            A new <see cref="T:System.Guid" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Create.HexadecimalString(System.Int32)">
            <summary>
            Generates a new <see cref="T:System.String" /> with random hexadecimal charaters. The value of <paramref name="size" /> specifies the amount of bytes to be generated. A <see cref="T:System.String" /> with a length of <paramref name="size" /> * 2 is returned.
            </summary>
            <param name="size">A <see cref="T:System.Int32" /> value specifying the amount of bytes to be generated.</param>
            <returns>
            A new <see cref="T:System.String" /> with random hexadecimal charaters, where the value of <paramref name="size" /> specifies the amount of bytes to be generated. The returned <see cref="T:System.String" /> has a length of <paramref name="size" /> * 2.
            </returns>
        </member>
        <member name="M:BytecodeApi.Create.SingletonArray``1(``0)">
            <summary>
            Creates an <see cref="T:System.Array" /> with <paramref name="obj" /> as the single element.
            </summary>
            <typeparam name="TSource">The type of the <see cref="T:System.Object" /> to create the <see cref="T:System.Array" /> from.</typeparam>
            <param name="obj">The <see cref="T:System.Object" /> to be inserted into the new <see cref="T:System.Array" />.</param>
            <returns>
            A new <see cref="T:System.Array" /> with <paramref name="obj" /> as the single element.
            </returns>
        </member>
        <member name="M:BytecodeApi.Create.SingletonList``1(``0)">
            <summary>
            Creates a <see cref="T:System.Collections.Generic.List`1" /> with <paramref name="obj" /> as the single element.
            </summary>
            <typeparam name="TSource">The type of the <see cref="T:System.Object" /> to create the <see cref="T:System.Collections.Generic.List`1" /> from.</typeparam>
            <param name="obj">The <see cref="T:System.Object" /> to be inserted into the new <see cref="T:System.Collections.Generic.List`1" />.</param>
            <returns>
            A new <see cref="T:System.Collections.Generic.List`1" /> with <paramref name="obj" /> as the single element.
            </returns>
        </member>
        <member name="M:BytecodeApi.Create.SingletonDictionary``2(System.Collections.Generic.KeyValuePair{``0,``1})">
            <summary>
            Creates a <see cref="T:System.Collections.Generic.Dictionary`2" /> with the specified <see cref="T:System.Collections.Generic.KeyValuePair`2" /> as the single element.
            </summary>
            <typeparam name="TKey">The type of the key of the specified <see cref="T:System.Collections.Generic.KeyValuePair`2" />.</typeparam>
            <typeparam name="TValue">The type of the value of the specified <see cref="T:System.Collections.Generic.KeyValuePair`2" />.</typeparam>
            <param name="keyValuePair">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> to be inserted into the new <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
            <returns>
            A new <see cref="T:System.Collections.Generic.Dictionary`2" /> with the specified <see cref="T:System.Collections.Generic.KeyValuePair`2" /> as the single element.
            </returns>
        </member>
        <member name="M:BytecodeApi.Create.SingletonDictionary``2(System.Collections.Generic.KeyValuePair{``0,``1},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Creates a <see cref="T:System.Collections.Generic.Dictionary`2" /> that uses the specified equality comparer for the set type with the specified <see cref="T:System.Collections.Generic.KeyValuePair`2" /> as the single element.
            </summary>
            <typeparam name="TKey">The type of the key of the specified <see cref="T:System.Collections.Generic.KeyValuePair`2" />.</typeparam>
            <typeparam name="TValue">The type of the value of the specified <see cref="T:System.Collections.Generic.KeyValuePair`2" />.</typeparam>
            <param name="keyValuePair">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> to be inserted into the new <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
            <param name="comparer">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation to use when comparing values in the set, or <see langword="null" /> to use the default <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation for the set type.</param>
            <returns>
            A new <see cref="T:System.Collections.Generic.Dictionary`2" /> with the specified <see cref="T:System.Collections.Generic.KeyValuePair`2" /> as the single element.
            </returns>
        </member>
        <member name="M:BytecodeApi.Create.SingletonDictionary``2(``0,``1)">
            <summary>
            Creates a <see cref="T:System.Collections.Generic.Dictionary`2" /> with the a <see cref="T:System.Collections.Generic.KeyValuePair`2" /> from the <paramref name="key" /> and <paramref name="value" /> parameters as the single element.
            </summary>
            <typeparam name="TKey">The type of the key of the specified <see cref="T:System.Collections.Generic.KeyValuePair`2" />.</typeparam>
            <typeparam name="TValue">The type of the value of the specified <see cref="T:System.Collections.Generic.KeyValuePair`2" />.</typeparam>
            <param name="key">The key for the <see cref="T:System.Collections.Generic.KeyValuePair`2" /> to be inserted into the new <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
            <param name="value">The value for the <see cref="T:System.Collections.Generic.KeyValuePair`2" /> to be inserted into the new <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
            <returns>
            A new <see cref="T:System.Collections.Generic.Dictionary`2" /> with the specified <see cref="T:System.Collections.Generic.KeyValuePair`2" /> as the single element.
            </returns>
        </member>
        <member name="M:BytecodeApi.Create.SingletonDictionary``2(``0,``1,System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Creates a <see cref="T:System.Collections.Generic.Dictionary`2" /> that uses the specified equality comparer for the set type with the a <see cref="T:System.Collections.Generic.KeyValuePair`2" /> from the <paramref name="key" /> and <paramref name="value" /> parameters as the single element.
            </summary>
            <typeparam name="TKey">The type of the key of the specified <see cref="T:System.Collections.Generic.KeyValuePair`2" />.</typeparam>
            <typeparam name="TValue">The type of the value of the specified <see cref="T:System.Collections.Generic.KeyValuePair`2" />.</typeparam>
            <param name="key">The key for the <see cref="T:System.Collections.Generic.KeyValuePair`2" /> to be inserted into the new <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
            <param name="value">The value for the <see cref="T:System.Collections.Generic.KeyValuePair`2" /> to be inserted into the new <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
            <param name="comparer">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation to use when comparing values in the set, or <see langword="null" /> to use the default <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation for the set type.</param>
            <returns>
            A new <see cref="T:System.Collections.Generic.Dictionary`2" /> with the specified <see cref="T:System.Collections.Generic.KeyValuePair`2" /> as the single element.
            </returns>
        </member>
        <member name="M:BytecodeApi.Create.SingletonHashSet``1(``0)">
            <summary>
            Creates a <see cref="T:System.Collections.Generic.HashSet`1" /> with <paramref name="obj" /> as the single element.
            </summary>
            <typeparam name="TSource">The type of the <see cref="T:System.Object" /> to create the <see cref="T:System.Collections.Generic.HashSet`1" /> from.</typeparam>
            <param name="obj">The <see cref="T:System.Object" /> to be inserted into the new <see cref="T:System.Collections.Generic.HashSet`1" />.</param>
            <returns>
            A new <see cref="T:System.Collections.Generic.HashSet`1" /> with <paramref name="obj" /> as the single element.
            </returns>
        </member>
        <member name="M:BytecodeApi.Create.SingletonHashSet``1(``0,System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Creates a <see cref="T:System.Collections.Generic.HashSet`1" /> that uses the specified equality comparer for the set type with <paramref name="obj" /> as the single element.
            </summary>
            <typeparam name="TSource">The type of the <see cref="T:System.Object" /> to create the <see cref="T:System.Collections.Generic.HashSet`1" /> from.</typeparam>
            <param name="obj">The <see cref="T:System.Object" /> to be inserted into the new <see cref="T:System.Collections.Generic.HashSet`1" />.</param>
            <param name="comparer">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation to use when comparing values in the set, or <see langword="null" /> to use the default <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation for the set type.</param>
            <returns>
            A new <see cref="T:System.Collections.Generic.HashSet`1" /> with <paramref name="obj" /> as the single element.
            </returns>
        </member>
        <member name="M:BytecodeApi.Create.SingletonObservableCollection``1(``0)">
            <summary>
            Creates an <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> with <paramref name="obj" /> as the single element.
            </summary>
            <typeparam name="TSource">The type of the <see cref="T:System.Object" /> to create the <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> from.</typeparam>
            <param name="obj">The <see cref="T:System.Object" /> to be inserted into the new <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" />.</param>
            <returns>
            A new <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> with <paramref name="obj" /> as the single element.
            </returns>
        </member>
        <member name="T:BytecodeApi.SpecialStringComparison">
            <summary>
            Specifies flags for a custom <see cref="T:System.String" /> comparison used in <see cref="M:BytecodeApi.StringExtensions.CompareTo(System.String,System.String,BytecodeApi.SpecialStringComparison)" />.
            </summary>
        </member>
        <member name="F:BytecodeApi.SpecialStringComparison.Default">
            <summary>
            Specifies the default <see cref="T:System.String" /> comparison as used in <see cref="M:System.String.Compare(System.String,System.String)" />.
            </summary>
        </member>
        <member name="F:BytecodeApi.SpecialStringComparison.NullAndEmptyEqual">
            <summary>
            Specifies that strings which are either <see langword="null" /> or <see cref="F:System.String.Empty" /> are treated equally.
            </summary>
        </member>
        <member name="F:BytecodeApi.SpecialStringComparison.Trim">
            <summary>
            Specifies that leading and trailing whitespaces are ignored during comparison.
            </summary>
        </member>
        <member name="F:BytecodeApi.SpecialStringComparison.IgnoreCase">
            <summary>
            Specifies that character casing is ignored during comparison.
            </summary>
        </member>
        <member name="F:BytecodeApi.SpecialStringComparison.IgnoreWhiteSpaces">
            <summary>
            Specifies that all whitespace characters are ignored during comparison.
            </summary>
        </member>
        <member name="F:BytecodeApi.SpecialStringComparison.IgnorePunctuation">
            <summary>
            Specifies that all punctuation characters are ignored during comparison.
            </summary>
        </member>
        <member name="F:BytecodeApi.SpecialStringComparison.IgnoreSymbols">
            <summary>
            Specifies that all symbol characters are ignored during comparison.
            </summary>
        </member>
        <member name="F:BytecodeApi.SpecialStringComparison.Natural">
            <summary>
            Specifies that a natural <see cref="T:System.String" /> comparison is used.
            </summary>
        </member>
        <member name="T:BytecodeApi.ProtocolMappingProtocol">
            <summary>
            Specifies the protocol of a <see cref="T:BytecodeApi.ProtocolMapping" /> object.
            </summary>
        </member>
        <member name="F:BytecodeApi.ProtocolMappingProtocol.Tcp">
            <summary>
            The TCP protocol is used.
            </summary>
        </member>
        <member name="F:BytecodeApi.ProtocolMappingProtocol.Udp">
            <summary>
            The UDP protocol is used.
            </summary>
        </member>
        <member name="T:BytecodeApi.TcpViewEntryProtocol">
            <summary>
            Specifies the connection type of a <see cref="T:BytecodeApi.TcpViewEntry" /> object.
            </summary>
        </member>
        <member name="F:BytecodeApi.TcpViewEntryProtocol.Tcp4">
            <summary>
            The TCPv4 protocol is used.
            </summary>
        </member>
        <member name="F:BytecodeApi.TcpViewEntryProtocol.Tcp6">
            <summary>
            The TCPv6 protocol is used.
            </summary>
        </member>
        <member name="F:BytecodeApi.TcpViewEntryProtocol.Udp4">
            <summary>
            The UDPv4 protocol is used.
            </summary>
        </member>
        <member name="F:BytecodeApi.TcpViewEntryProtocol.Udp6">
            <summary>
            The UDPv6 protocol is used.
            </summary>
        </member>
        <member name="T:BytecodeApi.IEnumerableConvertExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for conversion of <see cref="T:System.Collections.IEnumerable" /> objects to different collection types.
            </summary>
        </member>
        <member name="M:BytecodeApi.IEnumerableConvertExtensions.ToArray``1(System.Collections.IEnumerable)">
            <summary>
            Converts this <see cref="T:System.Collections.IEnumerable" /> to an <see cref="T:System.Array" /> of the specified type.
            </summary>
            <typeparam name="TSource">The type of the returned <see cref="T:System.Array" />.</typeparam>
            <param name="source">The <see cref="T:System.Collections.IEnumerable" /> to convert.</param>
            <returns>
            A new <see cref="T:System.Array" /> that contains all values in this <see cref="T:System.Collections.IEnumerable" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IEnumerableConvertExtensions.ToList``1(System.Collections.IEnumerable)">
            <summary>
            Converts this <see cref="T:System.Collections.IEnumerable" /> to a <see cref="T:System.Collections.Generic.List`1" /> of the specified type.
            </summary>
            <typeparam name="TSource">The type of the returned a <see cref="T:System.Collections.Generic.List`1" />.</typeparam>
            <param name="source">The <see cref="T:System.Collections.IEnumerable" /> to convert.</param>
            <returns>
            A new <see cref="T:System.Collections.Generic.List`1" /> that contains all values in this <see cref="T:System.Collections.IEnumerable" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IEnumerableConvertExtensions.ToDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``1,``0}})">
            <summary>
            Converts this <see cref="T:System.Collections.Generic.IEnumerable`1" /> to a <see cref="T:System.Collections.Generic.Dictionary`2" />.
            </summary>
            <typeparam name="TKey">The type of the key of the returned <see cref="T:System.Collections.Generic.Dictionary`2" />.</typeparam>
            <typeparam name="TValue">The type of the value of the returned <see cref="T:System.Collections.Generic.Dictionary`2" />.</typeparam>
            <param name="source">The collection of <see cref="T:System.Collections.Generic.KeyValuePair`2" /> objects to convert.</param>
            <returns>
            A new <see cref="T:System.Collections.Generic.Dictionary`2" /> that contains all <see cref="T:System.Collections.Generic.KeyValuePair`2" /> objects in this <see cref="T:System.Collections.IEnumerable" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IEnumerableConvertExtensions.ToDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``1,``0}},System.Collections.Generic.IEqualityComparer{``1})">
            <summary>
            Converts this <see cref="T:System.Collections.Generic.IEnumerable`1" /> to a <see cref="T:System.Collections.Generic.Dictionary`2" /> using the specified equality comparer.
            </summary>
            <typeparam name="TKey">The type of the key of the returned <see cref="T:System.Collections.Generic.Dictionary`2" />.</typeparam>
            <typeparam name="TValue">The type of the value of the returned <see cref="T:System.Collections.Generic.Dictionary`2" />.</typeparam>
            <param name="source">The collection of <see cref="T:System.Collections.Generic.KeyValuePair`2" /> objects to convert.</param>
            <param name="comparer">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation to use when creating the new <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
            <returns>
            A new <see cref="T:System.Collections.Generic.Dictionary`2" /> that contains all <see cref="T:System.Collections.Generic.KeyValuePair`2" /> objects in this <see cref="T:System.Collections.IEnumerable" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IEnumerableConvertExtensions.ToDictionary``2(System.Collections.Generic.IEnumerable{System.Tuple{``1,``0}})">
            <summary>
            Converts this <see cref="T:System.Collections.Generic.IEnumerable`1" /> to a <see cref="T:System.Collections.Generic.Dictionary`2" />, where Item1 of the <see cref="T:System.Tuple`2" /> is representing the key and Item2 is representing the value.
            </summary>
            <typeparam name="TKey">The type of the key of the returned <see cref="T:System.Collections.Generic.Dictionary`2" />.</typeparam>
            <typeparam name="TValue">The type of the value of the returned <see cref="T:System.Collections.Generic.Dictionary`2" />.</typeparam>
            <param name="source">The collection of <see cref="T:System.Tuple`2" /> objects to convert, where Item1 is representing the key and Item2 is representing the value.</param>
            <returns>
            A new <see cref="T:System.Collections.Generic.Dictionary`2" /> that contains all converted <see cref="T:System.Tuple`2" /> objects in this <see cref="T:System.Collections.IEnumerable" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IEnumerableConvertExtensions.ToDictionary``2(System.Collections.Generic.IEnumerable{System.Tuple{``1,``0}},System.Collections.Generic.IEqualityComparer{``1})">
            <summary>
            Converts this <see cref="T:System.Collections.Generic.IEnumerable`1" /> to a <see cref="T:System.Collections.Generic.Dictionary`2" />using the specified equality comparer, where Item1 of the <see cref="T:System.Tuple`2" /> is representing the key and Item2 is representing the value.
            </summary>
            <typeparam name="TKey">The type of the key of the returned <see cref="T:System.Collections.Generic.Dictionary`2" />.</typeparam>
            <typeparam name="TValue">The type of the value of the returned <see cref="T:System.Collections.Generic.Dictionary`2" />.</typeparam>
            <param name="source">The collection of <see cref="T:System.Tuple`2" /> objects to convert, where Item1 is representing the key and Item2 is representing the value.</param>
            <param name="comparer">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation to use when creating the new <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
            <returns>
            A new <see cref="T:System.Collections.Generic.Dictionary`2" /> that contains all converted <see cref="T:System.Tuple`2" /> objects in this <see cref="T:System.Collections.IEnumerable" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IEnumerableConvertExtensions.ToHashSet``1(System.Collections.IEnumerable)">
            <summary>
            Converts this <see cref="T:System.Collections.IEnumerable" /> to a <see cref="T:System.Collections.Generic.HashSet`1" /> of the specified type.
            </summary>
            <typeparam name="TSource">The type of the returned <see cref="T:System.Collections.Generic.HashSet`1" />.</typeparam>
            <param name="source">The <see cref="T:System.Collections.IEnumerable" /> to convert.</param>
            <returns>
            A new <see cref="T:System.Collections.Generic.HashSet`1" /> that contains all values in this <see cref="T:System.Collections.IEnumerable" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IEnumerableConvertExtensions.ToHashSet``1(System.Collections.IEnumerable,System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Converts this <see cref="T:System.Collections.IEnumerable" /> to a <see cref="T:System.Collections.Generic.HashSet`1" /> of the specified type using the specified equality comparer.
            </summary>
            <typeparam name="TSource">The type of the returned <see cref="T:System.Collections.Generic.HashSet`1" />.</typeparam>
            <param name="source">The <see cref="T:System.Collections.IEnumerable" /> to convert.</param>
            <param name="comparer">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation to use when creating the new <see cref="T:System.Collections.Generic.HashSet`1" />.</param>
            <returns>
            A new <see cref="T:System.Collections.Generic.HashSet`1" /> that contains all values in this <see cref="T:System.Collections.IEnumerable" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IEnumerableConvertExtensions.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Converts this <see cref="T:System.Collections.Generic.IEnumerable`1" /> to a <see cref="T:System.Collections.Generic.HashSet`1" />.
            </summary>
            <typeparam name="TSource">The type of the <see cref="T:System.Collections.Generic.IEnumerable`1" />.</typeparam>
            <param name="source">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> to convert.</param>
            <returns>
            A new <see cref="T:System.Collections.Generic.HashSet`1" /> that contains all values in this <see cref="T:System.Collections.IEnumerable" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IEnumerableConvertExtensions.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Converts this <see cref="T:System.Collections.Generic.IEnumerable`1" /> to a <see cref="T:System.Collections.Generic.HashSet`1" /> using the specified equality comparer.
            </summary>
            <typeparam name="TSource">The type of the <see cref="T:System.Collections.Generic.IEnumerable`1" />.</typeparam>
            <param name="source">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> to convert.</param>
            <param name="comparer">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation to use when creating the new <see cref="T:System.Collections.Generic.HashSet`1" />.</param>
            <returns>
            A new <see cref="T:System.Collections.Generic.HashSet`1" /> that contains all values in this <see cref="T:System.Collections.IEnumerable" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IEnumerableConvertExtensions.ToObservableCollection``1(System.Collections.IEnumerable)">
            <summary>
            Converts this <see cref="T:System.Collections.IEnumerable" /> to an <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> of the specified type.
            </summary>
            <typeparam name="TSource">The type of the returned <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" />.</typeparam>
            <param name="source">The <see cref="T:System.Collections.IEnumerable" /> to convert.</param>
            <returns>
            A new <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> that contains all values in this <see cref="T:System.Collections.IEnumerable" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IEnumerableConvertExtensions.ToObservableCollection``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Converts this <see cref="T:System.Collections.Generic.IEnumerable`1" /> to an <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" />.
            </summary>
            <typeparam name="TSource">The type of the <see cref="T:System.Collections.Generic.IEnumerable`1" />.</typeparam>
            <param name="source">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> to convert.</param>
            <returns>
            A new <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> that contains all values in this <see cref="T:System.Collections.Generic.IEnumerable`1" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.TcpConnection">
            <summary>
            Represents a TCP connection that implements a <see cref="T:System.Net.Sockets.TcpClient" /> with a <see cref="T:System.IO.BinaryReader" /> and a <see cref="T:System.IO.BinaryWriter" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.TcpConnection.Client">
            <summary>
            Gets the underlying <see cref="T:System.Net.Sockets.TcpClient" /> as specified in the constructor of <see cref="T:BytecodeApi.TcpConnection" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.TcpConnection.BytesRead">
            <summary>
            Gets the total amount of bytes read from the underlying <see cref="T:System.Net.Sockets.NetworkStream" /> of this instance.
            </summary>
        </member>
        <member name="P:BytecodeApi.TcpConnection.BytesWritten">
            <summary>
            Gets the total amount of bytes written to the underlying <see cref="T:System.Net.Sockets.NetworkStream" /> of this instance.
            </summary>
        </member>
        <member name="M:BytecodeApi.TcpConnection.#ctor(System.Net.Sockets.TcpClient)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.TcpConnection" /> class with the specified <see cref="T:System.Net.Sockets.TcpClient" />.
            </summary>
            <param name="client">The <see cref="T:System.Net.Sockets.TcpClient" /> to use in this instance of <see cref="T:BytecodeApi.TcpConnection" />.</param>
        </member>
        <member name="M:BytecodeApi.TcpConnection.Dispose">
            <summary>
            Releases all resources used by the underlying instance of the <see cref="T:System.Net.Sockets.TcpClient" />, the <see cref="T:System.IO.BinaryReader" /> and the <see cref="T:System.IO.BinaryWriter" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.TcpConnection.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads the specified number of bytes from the stream, starting from a specified point in the <see cref="T:System.Byte" />[].
            </summary>
            <param name="buffer">The buffer to read data into.</param>
            <param name="index">The starting point in the buffer at which to begin reading into the buffer.</param>
            <param name="count">The number of bytes to read.</param>
            <returns>
            The number of bytes read into <paramref name="buffer" />. This might be less than the number of bytes requested if that many bytes are not available, or it might be zero if the end of the stream is reached.
            </returns>
        </member>
        <member name="M:BytecodeApi.TcpConnection.Read(System.Char[],System.Int32,System.Int32)">
            <summary>
            Reads the specified number of characters from the stream, starting from a specified point in the <see cref="T:System.Char" />[].
            </summary>
            <param name="buffer">The buffer to read data into.</param>
            <param name="index">The starting point in the buffer at which to begin reading into the buffer.</param>
            <param name="count">The number of characters to read.</param>
            <returns>
            The number of characters read into <paramref name="buffer" />. This might be less than the number of characters requested if that many characters are not available, or it might be zero if the end of the stream is reached.
            </returns>
        </member>
        <member name="M:BytecodeApi.TcpConnection.ReadBoolean">
            <summary>
            Reads a <see cref="T:System.Boolean" /> value from underlying <see cref="T:System.Net.Sockets.NetworkStream" />.
            </summary>
            <returns>
            <see langword="true" />, if the byte that has been read is nonzero;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.TcpConnection.ReadByte">
            <summary>
            Reads a <see cref="T:System.Byte" /> value from underlying <see cref="T:System.Net.Sockets.NetworkStream" />.
            </summary>
            <returns>
            The next <see cref="T:System.Byte" /> read from the underlying <see cref="T:System.Net.Sockets.NetworkStream" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.TcpConnection.ReadSByte">
            <summary>
            Reads a <see cref="T:System.SByte" /> value from underlying <see cref="T:System.Net.Sockets.NetworkStream" />.
            </summary>
            <returns>
            The next <see cref="T:System.SByte" /> read from the underlying <see cref="T:System.Net.Sockets.NetworkStream" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.TcpConnection.ReadChar">
            <summary>
            Reads a <see cref="T:System.Char" /> value from underlying <see cref="T:System.Net.Sockets.NetworkStream" />.
            </summary>
            <returns>
            The next <see cref="T:System.Char" /> read from the underlying <see cref="T:System.Net.Sockets.NetworkStream" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.TcpConnection.ReadDecimal">
            <summary>
            Reads a <see cref="T:System.Decimal" /> value from underlying <see cref="T:System.Net.Sockets.NetworkStream" />.
            </summary>
            <returns>
            The next <see cref="T:System.Decimal" /> read from the underlying <see cref="T:System.Net.Sockets.NetworkStream" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.TcpConnection.ReadDouble">
            <summary>
            Reads a <see cref="T:System.Double" /> value from underlying <see cref="T:System.Net.Sockets.NetworkStream" />.
            </summary>
            <returns>
            The next <see cref="T:System.Double" /> read from the underlying <see cref="T:System.Net.Sockets.NetworkStream" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.TcpConnection.ReadSingle">
            <summary>
            Reads a <see cref="T:System.Single" /> value from underlying <see cref="T:System.Net.Sockets.NetworkStream" />.
            </summary>
            <returns>
            The next <see cref="T:System.Single" /> read from the underlying <see cref="T:System.Net.Sockets.NetworkStream" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.TcpConnection.ReadInt32">
            <summary>
            Reads a <see cref="T:System.Int32" /> value from underlying <see cref="T:System.Net.Sockets.NetworkStream" />.
            </summary>
            <returns>
            The next <see cref="T:System.Int32" /> read from the underlying <see cref="T:System.Net.Sockets.NetworkStream" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.TcpConnection.ReadUInt32">
            <summary>
            Reads a <see cref="T:System.UInt32" /> value from underlying <see cref="T:System.Net.Sockets.NetworkStream" />.
            </summary>
            <returns>
            The next <see cref="T:System.UInt32" /> read from the underlying <see cref="T:System.Net.Sockets.NetworkStream" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.TcpConnection.ReadInt64">
            <summary>
            Reads a <see cref="T:System.Int64" /> value from underlying <see cref="T:System.Net.Sockets.NetworkStream" />.
            </summary>
            <returns>
            The next <see cref="T:System.Int64" /> read from the underlying <see cref="T:System.Net.Sockets.NetworkStream" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.TcpConnection.ReadUInt64">
            <summary>
            Reads a <see cref="T:System.UInt64" /> value from underlying <see cref="T:System.Net.Sockets.NetworkStream" />.
            </summary>
            <returns>
            The next <see cref="T:System.UInt64" /> read from the underlying <see cref="T:System.Net.Sockets.NetworkStream" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.TcpConnection.ReadInt16">
            <summary>
            Reads a <see cref="T:System.Int16" /> value from underlying <see cref="T:System.Net.Sockets.NetworkStream" />.
            </summary>
            <returns>
            The next <see cref="T:System.Int16" /> read from the underlying <see cref="T:System.Net.Sockets.NetworkStream" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.TcpConnection.ReadUInt16">
            <summary>
            Reads a <see cref="T:System.UInt16" /> value from underlying <see cref="T:System.Net.Sockets.NetworkStream" />.
            </summary>
            <returns>
            The next <see cref="T:System.UInt16" /> read from the underlying <see cref="T:System.Net.Sockets.NetworkStream" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.TcpConnection.ReadString">
            <summary>
            Reads a <see cref="T:System.String" /> value from underlying <see cref="T:System.Net.Sockets.NetworkStream" />. The <see cref="T:System.String" /> is prefixed with the length, encoded as an integer seven bits at a time.
            </summary>
            <returns>
            The next <see cref="T:System.String" /> read from the underlying <see cref="T:System.Net.Sockets.NetworkStream" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.TcpConnection.ReadBytes(System.Int32)">
            <summary>
            Reads the specified number of bytes from the underlying <see cref="T:System.Net.Sockets.NetworkStream" /> into a <see cref="T:System.Byte" />[].
            </summary>
            <param name="count">A <see cref="T:System.Int32" /> value specifying the number of bytes to read.</param>
            <returns>
            The <see cref="T:System.Byte" />[] read from the underlying <see cref="T:System.Net.Sockets.NetworkStream" />. This might be less than the number of bytes requested if the end of the stream is reached.
            </returns>
        </member>
        <member name="M:BytecodeApi.TcpConnection.ReadChars(System.Int32)">
            <summary>
            Reads the specified number of characters from the underlying <see cref="T:System.Net.Sockets.NetworkStream" /> into a <see cref="T:System.Char" />[].
            </summary>
            <param name="count">A <see cref="T:System.Int32" /> value specifying the number of characters to read.</param>
            <returns>
            The <see cref="T:System.Char" />[] read from the underlying <see cref="T:System.Net.Sockets.NetworkStream" />. This might be less than the number of characters requested if the end of the stream is reached.
            </returns>
        </member>
        <member name="M:BytecodeApi.TcpConnection.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a region of a <see cref="T:System.Byte" />[] to the underlying <see cref="T:System.Net.Sockets.NetworkStream" />.
            </summary>
            <param name="buffer">The <see cref="T:System.Byte" />[] containing the data to write.</param>
            <param name="index">The starting point in buffer at which to begin writing.</param>
            <param name="count">The number of bytes to write.</param>
        </member>
        <member name="M:BytecodeApi.TcpConnection.Write(System.Char[],System.Int32,System.Int32)">
            <summary>
            Writes a region of a <see cref="T:System.Char" />[] to the underlying <see cref="T:System.Net.Sockets.NetworkStream" />.
            </summary>
            <param name="buffer">The <see cref="T:System.Char" />[] containing the data to write.</param>
            <param name="index">The starting point in buffer at which to begin writing.</param>
            <param name="count">The number of characters to write.</param>
        </member>
        <member name="M:BytecodeApi.TcpConnection.Write(System.Boolean)">
            <summary>
            Writes a one-byte <see cref="T:System.Boolean" /> value to the underlying <see cref="T:System.Net.Sockets.NetworkStream" />, with 0 representing <see langword="false" /> and 1 representing <see langword="true" />.
            </summary>
            <param name="value">The <see cref="T:System.Boolean" /> value to write (0 or 1).</param>
        </member>
        <member name="M:BytecodeApi.TcpConnection.Write(System.Byte)">
            <summary>
            Writes a <see cref="T:System.Byte" /> value to the underlying <see cref="T:System.Net.Sockets.NetworkStream" />.
            </summary>
            <param name="value">The <see cref="T:System.Byte" /> value to write.</param>
        </member>
        <member name="M:BytecodeApi.TcpConnection.Write(System.SByte)">
            <summary>
            Writes a <see cref="T:System.SByte" /> value to the underlying <see cref="T:System.Net.Sockets.NetworkStream" />.
            </summary>
            <param name="value">The <see cref="T:System.SByte" /> value to write.</param>
        </member>
        <member name="M:BytecodeApi.TcpConnection.Write(System.Char)">
            <summary>
            Writes a <see cref="T:System.Char" /> value to the underlying <see cref="T:System.Net.Sockets.NetworkStream" />.
            </summary>
            <param name="value">The non-surrogate <see cref="T:System.Char" /> value to write.</param>
        </member>
        <member name="M:BytecodeApi.TcpConnection.Write(System.Decimal)">
            <summary>
            Writes a <see cref="T:System.Decimal" /> value to the underlying <see cref="T:System.Net.Sockets.NetworkStream" />.
            </summary>
            <param name="value">The <see cref="T:System.Decimal" /> value to write.</param>
        </member>
        <member name="M:BytecodeApi.TcpConnection.Write(System.Double)">
            <summary>
            Writes a <see cref="T:System.Double" /> value to the underlying <see cref="T:System.Net.Sockets.NetworkStream" />.
            </summary>
            <param name="value">The <see cref="T:System.Double" /> value to write.</param>
        </member>
        <member name="M:BytecodeApi.TcpConnection.Write(System.Single)">
            <summary>
            Writes a <see cref="T:System.Single" /> value to the underlying <see cref="T:System.Net.Sockets.NetworkStream" />.
            </summary>
            <param name="value">The <see cref="T:System.Single" /> value to write.</param>
        </member>
        <member name="M:BytecodeApi.TcpConnection.Write(System.Int32)">
            <summary>
            Writes a <see cref="T:System.Int32" /> value to the underlying <see cref="T:System.Net.Sockets.NetworkStream" />.
            </summary>
            <param name="value">The <see cref="T:System.Int32" /> value to write.</param>
        </member>
        <member name="M:BytecodeApi.TcpConnection.Write(System.UInt32)">
            <summary>
            Writes a <see cref="T:System.UInt32" /> value to the underlying <see cref="T:System.Net.Sockets.NetworkStream" />.
            </summary>
            <param name="value">The <see cref="T:System.UInt32" /> value to write.</param>
        </member>
        <member name="M:BytecodeApi.TcpConnection.Write(System.Int64)">
            <summary>
            Writes a <see cref="T:System.Int64" /> value to the underlying <see cref="T:System.Net.Sockets.NetworkStream" />.
            </summary>
            <param name="value">The <see cref="T:System.Int64" /> value to write.</param>
        </member>
        <member name="M:BytecodeApi.TcpConnection.Write(System.UInt64)">
            <summary>
            Writes a <see cref="T:System.UInt64" /> value to the underlying <see cref="T:System.Net.Sockets.NetworkStream" />.
            </summary>
            <param name="value">The <see cref="T:System.UInt64" /> value to write.</param>
        </member>
        <member name="M:BytecodeApi.TcpConnection.Write(System.Int16)">
            <summary>
            Writes a <see cref="T:System.Int16" /> value to the underlying <see cref="T:System.Net.Sockets.NetworkStream" />.
            </summary>
            <param name="value">The <see cref="T:System.Int16" /> value to write.</param>
        </member>
        <member name="M:BytecodeApi.TcpConnection.Write(System.UInt16)">
            <summary>
            Writes a <see cref="T:System.UInt16" /> value to the underlying <see cref="T:System.Net.Sockets.NetworkStream" />.
            </summary>
            <param name="value">The <see cref="T:System.UInt16" /> value to write.</param>
        </member>
        <member name="M:BytecodeApi.TcpConnection.Write(System.String)">
            <summary>
            Writes a length-prefixed <see cref="T:System.String" /> value to the underlying <see cref="T:System.Net.Sockets.NetworkStream" />.
            </summary>
            <param name="value">The <see cref="T:System.String" /> value to write.</param>
        </member>
        <member name="M:BytecodeApi.TcpConnection.Write(System.Byte[])">
            <summary>
            Writes a <see cref="T:System.Byte" />[] value to the underlying <see cref="T:System.Net.Sockets.NetworkStream" />.
            </summary>
            <param name="buffer">The <see cref="T:System.Byte" />[] containing the data to write.</param>
        </member>
        <member name="M:BytecodeApi.TcpConnection.Write(System.Char[])">
            <summary>
            Writes a <see cref="T:System.Char" />[] value to the underlying <see cref="T:System.Net.Sockets.NetworkStream" />.
            </summary>
            <param name="chars">The <see cref="T:System.Char" />[] containing the data to write.</param>
        </member>
        <member name="M:BytecodeApi.TcpConnection.Flush">
            <summary>
            Clears all buffers for the current <see cref="T:BytecodeApi.TcpConnection" /> and causes any buffered data to be written to the underlying <see cref="T:System.Net.Sockets.NetworkStream" />.
            </summary>
        </member>
        <member name="T:BytecodeApi.ProtocolMapping">
            <summary>
            Provides a snapshot from the services file in %systemroot%\drivers\etc\services.
            </summary>
        </member>
        <member name="P:BytecodeApi.ProtocolMapping.Protocol">
            <summary>
            Gets the protocol that is associated with this instance.
            </summary>
        </member>
        <member name="P:BytecodeApi.ProtocolMapping.Port">
            <summary>
            Gets the port that is associated with this instance.
            </summary>
        </member>
        <member name="P:BytecodeApi.ProtocolMapping.Name">
            <summary>
            Gets the service or protocol name that is associated with this instance.
            </summary>
        </member>
        <member name="M:BytecodeApi.ProtocolMapping.GetProtocolMapping">
            <summary>
            Reads the services file in %systemroot%\drivers\etc\services and returns a <see cref="T:BytecodeApi.ProtocolMapping" />[] object with information about all protocols found in this file.
            </summary>
            <returns>
            A <see cref="T:BytecodeApi.ProtocolMapping" />[] object with information about all protocols found in the services file.
            </returns>
        </member>
        <member name="M:BytecodeApi.ProtocolMapping.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:BytecodeApi.TcpViewEntry">
            <summary>
            Provides information from the TCPView table for both TCP and UDP protocols in both IPv4 and IPv6. <see cref="M:BytecodeApi.TcpViewEntry.GetEntries" /> provides a snapshot of the current TCP and UDP connections.
            </summary>
        </member>
        <member name="P:BytecodeApi.TcpViewEntry.Protocol">
            <summary>
            Gets the protocol that is associated with this instance.
            </summary>
        </member>
        <member name="P:BytecodeApi.TcpViewEntry.LocalAddress">
            <summary>
            Gets the local IP address that is associated with this instance.
            </summary>
        </member>
        <member name="P:BytecodeApi.TcpViewEntry.LocalPort">
            <summary>
            Gets the local port that is associated with this instance.
            </summary>
        </member>
        <member name="P:BytecodeApi.TcpViewEntry.LocalProtocolName">
            <summary>
            Gets the name of the protocol of the local port that is associated with this instance, if the resolveProtocolNames parameter was set to <see langword="true" /> in <see cref="M:BytecodeApi.TcpViewEntry.GetEntries" />. Protocol names are resolved according to the services file in %systemroot%\drivers\etc\services.
            </summary>
        </member>
        <member name="P:BytecodeApi.TcpViewEntry.RemoteAddress">
            <summary>
            Gets the remote IP address that is associated with this instance.
            </summary>
        </member>
        <member name="P:BytecodeApi.TcpViewEntry.RemotePort">
            <summary>
            Gets the remote port that is associated with this instance.
            </summary>
        </member>
        <member name="P:BytecodeApi.TcpViewEntry.RemoteProtocolName">
            <summary>
            Gets the name of the protocol of the remote port that is associated with this instance, if the resolveProtocolNames parameter was set to <see langword="true" /> in <see cref="M:BytecodeApi.TcpViewEntry.GetEntries" />. Protocol names are resolved according to the services file in %systemroot%\drivers\etc\services.
            </summary>
        </member>
        <member name="P:BytecodeApi.TcpViewEntry.TcpState">
            <summary>
            Gets the TCP state that is associated with this instance and returns <see langword="null" />, if this <see cref="T:BytecodeApi.TcpViewEntry" /> is a UDP connection.
            </summary>
        </member>
        <member name="P:BytecodeApi.TcpViewEntry.ProcessID">
            <summary>
            Gets the PID of the process that is associated with this instance.
            </summary>
        </member>
        <member name="M:BytecodeApi.TcpViewEntry.GetEntries">
            <summary>
            Gets the entire table of <see cref="T:BytecodeApi.TcpViewEntry" /> objects that represent a snapshot of the current TCP and UDP connections in both IPv4 and IPv6. Protocol names are resolved according to the services file in %systemroot%\drivers\etc\services.
            </summary>
            <returns>
            A new <see cref="T:BytecodeApi.TcpViewEntry" />[] object with the TCP and UDP table in both IPv4 and IPv6. Protocol names are resolved according to the services file in %systemroot%\drivers\etc\services.
            </returns>
        </member>
        <member name="M:BytecodeApi.TcpViewEntry.GetEntries(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Gets a specified portion of the table of <see cref="T:BytecodeApi.TcpViewEntry" /> objects that represent a snapshot of the current TCP and/or UDP connections in either IPv4, IPv6 or both. Protocol names are resolved according to the services file in %systemroot%\drivers\etc\services.
            </summary>
            <param name="tcp4"><see langword="true" /> to include TCPv4 entries.</param>
            <param name="tcp6"><see langword="true" /> to include TCPv6 entries.</param>
            <param name="udp4"><see langword="true" /> to include UDPv4 entries.</param>
            <param name="udp6"><see langword="true" /> to include UDPv6 entries.</param>
            <returns>
            A new <see cref="T:BytecodeApi.TcpViewEntry" />[] object with the TCP and/or UDP table in either IPv4, IPv6 or both. Protocol names are resolved according to the services file in %systemroot%\drivers\etc\services.
            </returns>
        </member>
        <member name="M:BytecodeApi.TcpViewEntry.GetEntries(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Gets a specified portion of the table of <see cref="T:BytecodeApi.TcpViewEntry" /> objects that represent a snapshot of the current TCP and/or UDP connections in either IPv4, IPv6 or both. If <paramref name="resolveProtocolNames" /> is set to <see langword="true" />, Protocol names are resolved according to the services file in %systemroot%\drivers\etc\services.
            </summary>
            <param name="tcp4"><see langword="true" /> to include TCPv4 entries.</param>
            <param name="tcp6"><see langword="true" /> to include TCPv6 entries.</param>
            <param name="udp4"><see langword="true" /> to include UDPv4 entries.</param>
            <param name="udp6"><see langword="true" /> to include UDPv6 entries.</param>
            <param name="resolveProtocolNames"><see langword="true" /> to resolve Protocol names according to the services file in %systemroot%\drivers\etc\services.</param>
            <returns>
            A new <see cref="T:BytecodeApi.TcpViewEntry" />[] object with the TCP and/or UDP table in either IPv4, IPv6 or both. If <paramref name="resolveProtocolNames" /> is set to <see langword="true" />, Protocol names are resolved according to the services file in %systemroot%\drivers\etc\services.
            </returns>
        </member>
        <member name="M:BytecodeApi.TcpViewEntry.InvalidateProtocolMapping">
            <summary>
            Invalidates the internal protocol map that is retrieved using the <see cref="T:BytecodeApi.ProtocolMapping" /> class and causes it to be reloaded when <see cref="M:BytecodeApi.TcpViewEntry.GetEntries" /> is called.
            </summary>
        </member>
        <member name="M:BytecodeApi.TcpViewEntry.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:BytecodeApi.CsvErrorRow">
            <summary>
            Represents a row of a <see cref="T:BytecodeApi.CsvFile" /> flat file database that could not be parsed.
            </summary>
        </member>
        <member name="P:BytecodeApi.CsvErrorRow.Line">
            <summary>
            Gets the <see cref="T:System.String" /> representing the original line that could not be parsed.
            </summary>
        </member>
        <member name="M:BytecodeApi.CsvErrorRow.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.CsvErrorRow" /> class with the specified line.
            </summary>
            <param name="line">The unchanged <see cref="T:System.String" /> that represents the line that could not be parsed from the flat file database.</param>
        </member>
        <member name="T:BytecodeApi.CsvRowBase">
            <summary>
            Provides the base class for both <see cref="T:BytecodeApi.CsvRow" /> and <see cref="T:BytecodeApi.CsvErrorRow" /> objects.
            </summary>
        </member>
        <member name="P:BytecodeApi.CsvRowBase.LineNumber">
            <summary>
            Gets the one-based line number of this <see cref="T:BytecodeApi.CsvRowBase" /> object, if it was loaded from an existing flat file database source. Returns <see langword="null" />, if the row has been manually initialized.
            </summary>
        </member>
        <member name="T:BytecodeApi.ResourceFile">
            <summary>
            Proides <see langword="static" /> methods for interoperability with files containing resources, typically EXE and DLL files.
            </summary>
        </member>
        <member name="M:BytecodeApi.ResourceFile.GetIcons(System.String)">
            <summary>
            Extracts all icons from the resources of the specified file. The file must support resources and is typically an EXE or DLL file.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a file.</param>
            <returns>
            A new <see cref="T:System.Drawing.Icon" />[] with all icon resources from the specified file.
            </returns>
        </member>
        <member name="M:BytecodeApi.ResourceFile.ChangeIcon(System.String,System.String)">
            <summary>
            Changes the icon of the specified file, typically an executable, to the specified icon file that is a valid ICO file.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a file.</param>
            <param name="iconPath">A <see cref="T:System.String" /> specifying the path of a valid ICO file.</param>
        </member>
        <member name="M:BytecodeApi.ResourceFile.ChangeIcon(System.String,System.Drawing.Icon)">
            <summary>
            Changes the icon of the specified file, typically an executable, to the specified icon.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a file.</param>
            <param name="icon">The <see cref="T:System.Drawing.Icon" /> to be applied to the file.</param>
        </member>
        <member name="M:BytecodeApi.ResourceFile.DeleteResources(System.String)">
            <summary>
            Strips all resources from the specified file. The file must support resources and is typically an EXE or DLL file.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a file.</param>
        </member>
        <member name="T:BytecodeApi.Executable">
            <summary>
            Proides <see langword="static" /> methods for interoperability with executable files, typically EXE and DLL files.
            </summary>
        </member>
        <member name="M:BytecodeApi.Executable.CreateProcessWithIntegrity(System.String,BytecodeApi.ProcessIntegrityLevel)">
            <summary>
            Creates a <see cref="T:System.Diagnostics.Process" /> with the specified commandline and the specified <see cref="T:BytecodeApi.ProcessIntegrityLevel" />. If process creation fails, a <see cref="T:System.ComponentModel.Win32Exception" /> is thrown. This is typically used to create processes with lower integrity.
            </summary>
            <param name="commandLine">A <see cref="T:System.String" /> specifying the commandline to create the <see cref="T:System.Diagnostics.Process" /> with.</param>
            <param name="integrityLevel">The <see cref="T:BytecodeApi.ProcessIntegrityLevel" /> to create the <see cref="T:System.Diagnostics.Process" /> with. This is usually lower than the <see cref="T:BytecodeApi.ProcessIntegrityLevel" /> of the current <see cref="T:System.Diagnostics.Process" />.</param>
            <returns>
            The <see cref="T:System.Diagnostics.Process" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.Executable.ExecuteDotNetAssembly(System.Byte[])">
            <summary>
            Executes a .NET executable from a <see cref="T:System.Byte" />[] by invoking the main entry point. The Main method must either have no parameters or one <see cref="T:System.String" />[] parameter. If it has a parameter, <see langword="new" /> <see cref="T:System.String" />[0] is passed.
            </summary>
            <param name="executable">A <see cref="T:System.Byte" />[] that represents a .NET executable.</param>
        </member>
        <member name="M:BytecodeApi.Executable.ExecuteDotNetAssembly(System.Byte[],System.String[])">
            <summary>
            Executes a .NET executable from a <see cref="T:System.Byte" />[] by invoking the main entry point. The Main method must either have no parameters or one <see cref="T:System.String" />[] parameter. If it has a parameter, <paramref name="args" /> is passed, otherwise <paramref name="args" /> is ignored.
            </summary>
            <param name="executable">A <see cref="T:System.Byte" />[] that represents a .NET executable.</param>
            <param name="args">A <see cref="T:System.String" />[] representing the arguments that is passed to the main entry point, if the Main method has a <see cref="T:System.String" />[] parameter.</param>
        </member>
        <member name="M:BytecodeApi.Executable.ExitProcess(BytecodeApi.ExitProcessMethod)">
            <summary>
            Exits the current <see cref="T:System.Diagnostics.Process" /> using the specified <see cref="T:BytecodeApi.ExitProcessMethod" />.
            </summary>
            <param name="method">The <see cref="T:BytecodeApi.ExitProcessMethod" /> to be applied when exiting the current <see cref="T:System.Diagnostics.Process" />.</param>
        </member>
        <member name="M:BytecodeApi.Executable.BlueScreen">
            <summary>
            If the current <see cref="T:System.Diagnostics.Process" /> is running with elevated privileges, a blue screen is triggered. The result is <see langword="true" /> on success, however, only in theory, because the operating system will have terminated prior to function return. If elevated privileges are not granted or if an error occurred, <see langword="false" /> is returned.
            </summary>
            <returns>
            <see langword="true" />, on success, however, only in theory, because the operating system will have terminated prior to function return;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Executable.DetectProcessAnalyzer(BytecodeApi.ProcessAnalyzer)">
            <summary>
            Detects process analyzers, such as sandboxes, virtual environments, or running programs.
            </summary>
            <param name="processAnalyzer">The <see cref="T:BytecodeApi.ProcessAnalyzer" /> to test.</param>
            <returns>
            <see langword="true" />, if the specified process analyzer has been detected;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.ThreadFactory">
            <summary>
            Provides support for creating <see cref="T:System.Threading.Thread" /> and other multithreading related objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.ThreadFactory.StartThread(System.Action)">
            <summary>
            Creates a new <see cref="T:System.Threading.Thread" /> with the STA apartment state and starts it. All <see cref="T:System.Threading.ThreadAbortException" /> exceptions are caught.
            </summary>
            <param name="action">The <see cref="T:System.Action" /> to be invoked from the new <see cref="T:System.Threading.Thread" />.</param>
            <returns>
            The <see cref="T:System.Threading.Thread" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.ThreadFactory.StartThread(System.Action,System.Boolean)">
            <summary>
            Creates a new <see cref="T:System.Threading.Thread" /> with the STA apartment state and starts it. All <see cref="T:System.Threading.ThreadAbortException" /> exceptions are caught.
            </summary>
            <param name="action">The <see cref="T:System.Action" /> to be invoked from the new <see cref="T:System.Threading.Thread" />.</param>
            <param name="ignoreExceptions"><see langword="true" /> to ignore all exceptions; <see langword="false" /> to just ignore <see cref="T:System.Threading.ThreadAbortException" /> exceptions.</param>
            <returns>
            The <see cref="T:System.Threading.Thread" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.ThreadFactory.StartThread(System.Action,System.Boolean,System.Action{System.Exception})">
            <summary>
            Creates a new <see cref="T:System.Threading.Thread" /> with the STA apartment state and starts it. All <see cref="T:System.Threading.ThreadAbortException" /> exceptions are caught.
            </summary>
            <param name="action">The <see cref="T:System.Action" /> to be invoked from the new <see cref="T:System.Threading.Thread" />.</param>
            <param name="ignoreExceptions"><see langword="true" /> to ignore all exceptions; <see langword="false" /> to just ignore <see cref="T:System.Threading.ThreadAbortException" /> exceptions.</param>
            <param name="exceptionHandler">An <see cref="T:System.Action`1" /> that is called by the exception handler. If <see langword="null" />, the <see cref="T:System.Exception" /> is thrown. The stack trace prior to thread creation will be appended.</param>
            <returns>
            The <see cref="T:System.Threading.Thread" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.ThreadFactory.StartDispatcherTimer(System.Action,System.TimeSpan)">
            <summary>
            Creates and starts a new <see cref="T:System.Windows.Threading.DispatcherTimer" /> with the specified <see cref="T:System.Action" /> and interval.
            </summary>
            <param name="action">The <see cref="T:System.Action" /> to be invoked by the new <see cref="T:System.Windows.Threading.DispatcherTimer" />.</param>
            <param name="interval">The interval in which <paramref name="action" /> is invoked.</param>
            <returns>
            The <see cref="T:System.Windows.Threading.DispatcherTimer" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.ThreadFactory.StartDispatcherTimer(System.Action,System.TimeSpan,System.Boolean)">
            <summary>
            Creates and starts a new <see cref="T:System.Windows.Threading.DispatcherTimer" /> with the specified <see cref="T:System.Action" /> and interval.
            </summary>
            <param name="action">The <see cref="T:System.Action" /> to be invoked by the new <see cref="T:System.Windows.Threading.DispatcherTimer" />.</param>
            <param name="interval">The interval in which <paramref name="action" /> is invoked.</param>
            <param name="executeNow"><see langword="true" /> to execute <paramref name="action" /> immediately; <see langword="false" /> to execute it on the first interval.</param>
            <returns>
            The <see cref="T:System.Windows.Threading.DispatcherTimer" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.ThreadFactory.StartDispatcherTimer(System.Action,System.TimeSpan,System.Boolean,System.Boolean)">
            <summary>
            Creates and starts a new <see cref="T:System.Windows.Threading.DispatcherTimer" /> with the specified <see cref="T:System.Action" /> and interval.
            </summary>
            <param name="action">The <see cref="T:System.Action" /> to be invoked by the new <see cref="T:System.Windows.Threading.DispatcherTimer" />.</param>
            <param name="interval">The interval in which <paramref name="action" /> is invoked.</param>
            <param name="executeNow"><see langword="true" /> to execute <paramref name="action" /> immediately; <see langword="false" /> to execute it on the first interval.</param>
            <param name="ignoreExceptions"><see langword="true" /> to ignore all exceptions.</param>
            <returns>
            The <see cref="T:System.Windows.Threading.DispatcherTimer" /> this method creates.
            </returns>
        </member>
        <member name="T:BytecodeApi.Validate">
            <summary>
            Validates <see cref="T:System.String" /> objects against specific data type representations.
            </summary>
        </member>
        <member name="M:BytecodeApi.Validate.OnlyLetters(System.String)">
            <summary>
            Validates a <see cref="T:System.String" /> object that only contains upper and lowercase letters.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be validated.</param>
            <returns>
            <see langword="true" />, if validation of <paramref name="str" /> succeeded;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Validate.OnlyDigits(System.String)">
            <summary>
            Validates a <see cref="T:System.String" /> object that only contains numeric digits.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be validated.</param>
            <returns>
            <see langword="true" />, if validation of <paramref name="str" /> succeeded;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Validate.AlphaNumeric(System.String)">
            <summary>
            Validates a <see cref="T:System.String" /> object that only contains upper and lowercase letters as well as numeric digits.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be validated.</param>
            <returns>
            <see langword="true" />, if validation of <paramref name="str" /> succeeded;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Validate.Hexadecimal(System.String)">
            <summary>
            Validates a <see cref="T:System.String" /> object that only contains upper and lowercase hexadecimal digits.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be validated.</param>
            <returns>
            <see langword="true" />, if validation of <paramref name="str" /> succeeded;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Validate.FileName(System.String)">
            <summary>
            Validates a <see cref="T:System.String" /> object that is a filename.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be validated.</param>
            <returns>
            <see langword="true" />, if validation of <paramref name="str" /> succeeded;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Validate.Uri(System.String)">
            <summary>
            Validates a <see cref="T:System.String" /> object that is an absolute <see cref="T:System.Uri" /> (<see cref="F:System.UriKind.Absolute" />).
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be validated.</param>
            <returns>
            <see langword="true" />, if validation of <paramref name="str" /> succeeded;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Validate.EmailAddress(System.String)">
            <summary>
            Validates a <see cref="T:System.String" /> object that is an email address.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be validated.</param>
            <returns>
            <see langword="true" />, if validation of <paramref name="str" /> succeeded;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Validate.IPAddress(System.String)">
            <summary>
            Validates a <see cref="T:System.String" /> object that is an <see cref="T:System.Net.IPAddress" />. Both IPv4 and IPv6 values are validated.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be validated.</param>
            <returns>
            <see langword="true" />, if validation of <paramref name="str" /> succeeded;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Validate.MacAddress(System.String,System.Byte[]@)">
            <summary>
            Validates a <see cref="T:System.String" /> object that is a MAC address in EUI-48 format.
            <para />Allowed formats are: 000000000000, 00:00:00:00:00:00, 00-00-00-00-00-00 and 0000.0000.0000
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be validated.</param>
            <param name="result">When this method returns, contains the address bytes as a <see cref="T:System.Byte" />[].</param>
            <returns>
            <see langword="true" />, if validation of <paramref name="str" /> succeeded;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Validate.PhoneNumber(System.String)">
            <summary>
            Validates a <see cref="T:System.String" /> object that is a phone number.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be validated.</param>
            <returns>
            <see langword="true" />, if validation of <paramref name="str" /> succeeded;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Validate.CreditCardNumber(System.String)">
            <summary>
            Validates a <see cref="T:System.String" /> object that is a credit card number.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be validated.</param>
            <returns>
            <see langword="true" />, if validation of <paramref name="str" /> succeeded;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.AlwaysEqualComparer">
            <summary>
            Represents an <see cref="T:System.Object" /> comparison operation that always returns 0.
            </summary>
        </member>
        <member name="M:BytecodeApi.AlwaysEqualComparer.Compare(System.Object,System.Object)">
            <summary>
            Takes two <see cref="T:System.Object" /> parameters, but always returns 0;
            </summary>
            <param name="x">An <see cref="T:System.Object" /> to compare to <paramref name="y" />.</param>
            <param name="y">An <see cref="T:System.Object" /> to compare to <paramref name="x" />.</param>
            <returns>
            This method always returns 0.
            </returns>
        </member>
        <member name="T:BytecodeApi.CustomComparer`2">
            <summary>
            Represents a custom comparison operation that uses an <see cref="T:System.Collections.Generic.EqualityComparer`1" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.CustomComparer`2.#ctor(System.Func{`0,`1})">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.CustomComparer`2" /> class with the specified comparing function.
            </summary>
            <param name="compareFunc">The <see cref="T:System.Func`2" /> to be used by the <see cref="M:BytecodeApi.CustomComparer`2.Equals(`0,`0)" /> method.</param>
        </member>
        <member name="M:BytecodeApi.CustomComparer`2.Equals(`0,`0)">
            <summary>
            Determines whether the specified objects are equal.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>
            <see langword="true" />, if the specified objects are equal; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.CustomComparer`2.GetHashCode(`0)">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <param name="obj">The object for which a hash code is to be returned.</param>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
            </returns>
        </member>
        <member name="T:BytecodeApi.IEnumerableCountComparer`1">
            <summary>
            Represents a comparison operation that compares the result of the Count() method of <see cref="T:System.Collections.Generic.IEnumerable`1" /> objects. Each call of <see cref="M:BytecodeApi.IEnumerableCountComparer`1.Compare(System.Object,System.Object)" /> invokes the Count() method on the <see cref="T:System.Collections.Generic.IEnumerable`1" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.IEnumerableCountComparer`1.Compare(System.Object,System.Object)">
            <summary>
            Compares the result of the Count() method of two <see cref="T:System.Collections.Generic.IEnumerable`1" /> objects and returns an indication of their relative sort order. Specified <see cref="T:System.Object" /> parameters that are not <see cref="T:System.Collections.Generic.IEnumerable`1" /> objects are treated as <see langword="null" />.
            </summary>
            <param name="x">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> to compare the result of the Count() method to the result of the Count() method of <paramref name="y" />.</param>
            <param name="y">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> to compare the result of the Count() method to the result of the Count() method of <paramref name="x" />.</param>
            <returns>
            A signed integer that indicates the relative values of the result of the Count() method of <paramref name="x" /> and the result of the Count() method of <paramref name="y" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IEnumerableCountComparer`1.Compare(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Compares the result of the Count() method of two <see cref="T:System.Collections.Generic.IEnumerable`1" /> objects and returns an indication of their relative sort order.
            </summary>
            <param name="x">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> to compare the result of the Count() method to the result of the Count() method of <paramref name="y" />.</param>
            <param name="y">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> to compare the result of the Count() method to the result of the Count() method of <paramref name="x" />.</param>
            <returns>
            A signed integer that indicates the relative values of the result of the Count() method of <paramref name="x" /> and the result of the Count() method of <paramref name="y" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.StringLengthTrimmedComparer">
            <summary>
            Represents a comparison operation that compares the <see cref="P:System.String.Length" /> property of <see cref="T:System.String" /> objects, where trailing and leading whitespaces are ignored.
            </summary>
        </member>
        <member name="M:BytecodeApi.StringLengthTrimmedComparer.Compare(System.Object,System.Object)">
            <summary>
            Compares the <see cref="P:System.String.Length" /> property of two <see cref="T:System.String" /> objects, ignoring trailing and leading whitespaces, and returns an indication of their relative sort order. Specified <see cref="T:System.Object" /> parameters that are not <see cref="T:System.String" /> objects are treated as <see langword="null" />.
            </summary>
            <param name="x">A <see cref="T:System.String" /> to compare its <see cref="P:System.String.Length" /> property to <paramref name="y" />.</param>
            <param name="y">A <see cref="T:System.String" /> to compare its <see cref="P:System.String.Length" /> property to <paramref name="x" />.</param>
            <returns>
            A signed integer that indicates the relative values of the <see cref="P:System.String.Length" /> property of <paramref name="x" /> and <paramref name="y" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringLengthTrimmedComparer.Compare(System.String,System.String)">
            <summary>
            Compares the <see cref="P:System.String.Length" /> property of two <see cref="T:System.String" /> objects, ignoring trailing and leading whitespaces, and returns an indication of their relative sort order.
            </summary>
            <param name="x">A <see cref="T:System.String" /> to compare its <see cref="P:System.String.Length" /> property to <paramref name="y" />.</param>
            <param name="y">A <see cref="T:System.String" /> to compare its <see cref="P:System.String.Length" /> property to <paramref name="x" />.</param>
            <returns>
            A signed integer that indicates the relative values of the <see cref="P:System.String.Length" /> property of <paramref name="x" /> and <paramref name="y" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.StringLengthComparer">
            <summary>
            Represents a comparison operation that compares the <see cref="P:System.String.Length" /> property of <see cref="T:System.String" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.StringLengthComparer.Compare(System.Object,System.Object)">
            <summary>
            Compares the <see cref="P:System.String.Length" /> property of two <see cref="T:System.String" /> objects and returns an indication of their relative sort order. Specified <see cref="T:System.Object" /> parameters that are not <see cref="T:System.String" /> objects are treated as <see langword="null" />.
            </summary>
            <param name="x">A <see cref="T:System.String" /> to compare its <see cref="P:System.String.Length" /> property to <paramref name="y" />.</param>
            <param name="y">A <see cref="T:System.String" /> to compare its <see cref="P:System.String.Length" /> property to <paramref name="x" />.</param>
            <returns>
            A signed integer that indicates the relative values of the <see cref="P:System.String.Length" /> property of <paramref name="x" /> and <paramref name="y" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringLengthComparer.Compare(System.String,System.String)">
            <summary>
            Compares the <see cref="P:System.String.Length" /> property of two <see cref="T:System.String" /> objects and returns an indication of their relative sort order.
            </summary>
            <param name="x">A <see cref="T:System.String" /> to compare its <see cref="P:System.String.Length" /> property to <paramref name="y" />.</param>
            <param name="y">A <see cref="T:System.String" /> to compare its <see cref="P:System.String.Length" /> property to <paramref name="x" />.</param>
            <returns>
            A signed integer that indicates the relative values of the <see cref="P:System.String.Length" /> property of <paramref name="x" /> and <paramref name="y" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.NaturalStringComparer">
            <summary>
            Represents a <see cref="T:System.String" /> comparison operation that uses natural <see cref="T:System.String" /> comparison.
            </summary>
        </member>
        <member name="M:BytecodeApi.NaturalStringComparer.Compare(System.Object,System.Object)">
            <summary>
            Compares two <see cref="T:System.String" /> objects and returns an indication of their relative sort order. Specified <see cref="T:System.Object" /> parameters that are not <see cref="T:System.String" /> objects are treated as <see langword="null" />.
            </summary>
            <param name="x">A <see cref="T:System.String" /> to compare to <paramref name="y" />.</param>
            <param name="y">A <see cref="T:System.String" /> to compare to <paramref name="x" />.</param>
            <returns>
            A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.NaturalStringComparer.Compare(System.String,System.String)">
            <summary>
            Compares two <see cref="T:System.String" /> objects and returns an indication of their relative sort order.
            </summary>
            <param name="x">A <see cref="T:System.String" /> to compare to <paramref name="y" />.</param>
            <param name="y">A <see cref="T:System.String" /> to compare to <paramref name="x" />.</param>
            <returns>
            A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.UITreeType">
            <summary>
            Specifies the type of the WPF tree.
            </summary>
        </member>
        <member name="F:BytecodeApi.UITreeType.Logical">
            <summary>
            Specifies the WPF logical tree. For traversing operations, <see cref="T:System.Windows.LogicalTreeHelper" /> is used.
            </summary>
        </member>
        <member name="F:BytecodeApi.UITreeType.Visual">
            <summary>
            Specifies the WPF visual tree. For traversing operations, <see cref="T:System.Windows.Media.VisualTreeHelper" /> is used.
            </summary>
        </member>
        <member name="T:BytecodeApi.ElevationType">
            <summary>
            Specifies the elevation type for a Windows user.
            </summary>
        </member>
        <member name="F:BytecodeApi.ElevationType.Default">
            <summary>
            The token does not have a linked token (standard user, elevation requires credentials from an administrative user account).
            </summary>
        </member>
        <member name="F:BytecodeApi.ElevationType.Full">
            <summary>
            The token is an elevated token (integrity level is high or above).
            </summary>
        </member>
        <member name="F:BytecodeApi.ElevationType.Limited">
            <summary>
            The token is a limited token (integrity level is medium, but the user is a local administrator and can elevate with consent).
            </summary>
        </member>
        <member name="T:BytecodeApi.ByteSizeFormat">
            <summary>
            Specifies the display format for byte size values to be used in <see cref="T:System.String" /> formatting logic.
            </summary>
        </member>
        <member name="F:BytecodeApi.ByteSizeFormat.ByteSize">
            <summary>
            Specifies that the closest unit (Bytes, KB, MB, GB, TB, ...) is displayed. The result is rounded with no decimal places.
            <para />Example: 12345 is converted to "12 KB"
            </summary>
        </member>
        <member name="F:BytecodeApi.ByteSizeFormat.ByteSizeTwoDigits">
            <summary>
            Specifies that the closest unit (Bytes, KB, MB, GB, TB, ...) is displayed. The result is rounded with two decimal places.
            <para />Example: 12345 is converted to "12,06 KB"
            </summary>
        </member>
        <member name="F:BytecodeApi.ByteSizeFormat.Bytes">
            <summary>
            Specifies that the exact amount of bytes is displayed. A thousands separator is displayed as a dot.
            <para />Example: 12345 is converted to "12.345 bytes"
            </summary>
        </member>
        <member name="F:BytecodeApi.ByteSizeFormat.KiloBytes">
            <summary>
            Specifies that the value is displayed as kilobytes. The result is rounded up. A thousands separator is displayed as a dot.
            <para />Example: 12345 is converted to "13 KB"
            </summary>
        </member>
        <member name="F:BytecodeApi.ByteSizeFormat.KiloBytesTwoDigits">
            <summary>
            Specifies that the value is displayed as kilobytes. The result is rounded with two decimal places. A thousands separator is displayed as a dot.
            <para />Example: 12345 is converted to "13 KB"
            </summary>
        </member>
        <member name="T:BytecodeApi.TypeNaming">
            <summary>
            Specifies the naming convention of a <see langword="type" />.
            </summary>
        </member>
        <member name="F:BytecodeApi.TypeNaming.CSharp">
            <summary>
            The namespace is omitted and the C# type name is used for built-in types.
            <para />Examples: int, DateTime
            </summary>
        </member>
        <member name="F:BytecodeApi.TypeNaming.TypeName">
            <summary>
            The namespace is omitted and the .NET Framework type name is used.
            <para />Examples: Int32, DateTime
            </summary>
        </member>
        <member name="F:BytecodeApi.TypeNaming.FullName">
            <summary>
            The full type name including namespace is used.
            <para />Examples: System.Int32, System.DateTime
            </summary>
        </member>
        <member name="T:BytecodeApi.AngleType">
            <summary>
            Specifies the unit in which an angle is measured.
            </summary>
        </member>
        <member name="F:BytecodeApi.AngleType.Radians">
            <summary>
            The angle is measured in radians.
            </summary>
        </member>
        <member name="F:BytecodeApi.AngleType.Degrees">
            <summary>
            The angle is measured in degrees.
            </summary>
        </member>
        <member name="F:BytecodeApi.AngleType.Gradians">
            <summary>
            The angle is measured in gradians.
            </summary>
        </member>
        <member name="T:BytecodeApi.DateTimePart">
            <summary>
            Specifies the subset of a <see cref="T:System.DateTime" /> representation.
            </summary>
        </member>
        <member name="F:BytecodeApi.DateTimePart.Full">
            <summary>
            The full <see cref="T:System.DateTime" /> is used.
            </summary>
        </member>
        <member name="F:BytecodeApi.DateTimePart.DateTimeWithSeconds">
            <summary>
            The date and time including seconds of the <see cref="T:System.DateTime" /> object is used.
            </summary>
        </member>
        <member name="F:BytecodeApi.DateTimePart.DateTime">
            <summary>
            The date and time excluding seconds of the <see cref="T:System.DateTime" /> object is used.
            </summary>
        </member>
        <member name="F:BytecodeApi.DateTimePart.Date">
            <summary>
            The date part excluding time information of the <see cref="T:System.DateTime" /> object is used. This is equal to the <see cref="P:System.DateTime.Date" /> property.
            </summary>
        </member>
        <member name="F:BytecodeApi.DateTimePart.YearMonth">
            <summary>
            The year and month of the <see cref="T:System.DateTime" /> object is used. <see cref="P:System.DateTime.Day" /> is set to 1.
            </summary>
        </member>
        <member name="F:BytecodeApi.DateTimePart.Year">
            <summary>
            The year is used. <see cref="P:System.DateTime.Month" /> and <see cref="P:System.DateTime.Day" /> are both set to 1.
            </summary>
        </member>
        <member name="T:BytecodeApi.ExitProcessMethod">
            <summary>
            Specifies the method in which the current <see cref="T:System.Diagnostics.Process" /> is terminated.
            </summary>
        </member>
        <member name="F:BytecodeApi.ExitProcessMethod.ExitProcess">
            <summary>
            Specifies termination using <see cref="M:System.Environment.Exit(System.Int32)" />, passing 0 as exit code.
            </summary>
        </member>
        <member name="F:BytecodeApi.ExitProcessMethod.KillProcess">
            <summary>
            Specifies termination using <see cref="M:System.Diagnostics.Process.Kill" />.
            </summary>
        </member>
        <member name="F:BytecodeApi.ExitProcessMethod.StackOverflow">
            <summary>
            Specifies termination by causing a stack overflow. The current <see cref="T:System.Diagnostics.Process" /> will crash, exceptions cannot be handled.
            </summary>
        </member>
        <member name="T:BytecodeApi.GuidFormat">
            <summary>
            Specifies the format for a <see cref="T:System.Guid" />.
            </summary>
        </member>
        <member name="F:BytecodeApi.GuidFormat.Default">
            <summary>
            The <see cref="T:System.Guid" /> is displayed using 32 hexadecimal digits.
            <para />Example: 00000000000000000000000000000000
            </summary>
        </member>
        <member name="F:BytecodeApi.GuidFormat.Hyphens">
            <summary>
            The <see cref="T:System.Guid" /> is displayed using 32 hexadecimal digits separated by hyphens.
            <para />Example: 00000000-0000-0000-0000-000000000000
            </summary>
        </member>
        <member name="F:BytecodeApi.GuidFormat.Braces">
            <summary>
            The <see cref="T:System.Guid" /> is displayed using 32 hexadecimal digits separated by hyphens, enclosed in braces.
            <para />Example: {00000000-0000-0000-0000-000000000000}
            </summary>
        </member>
        <member name="F:BytecodeApi.GuidFormat.Parentheses">
            <summary>
            The <see cref="T:System.Guid" /> is displayed using 32 hexadecimal digits separated by hyphens, enclosed in parentheses.
            <para />Example: (00000000-0000-0000-0000-000000000000)
            </summary>
        </member>
        <member name="F:BytecodeApi.GuidFormat.Hexadecimal">
            <summary>
            The <see cref="T:System.Guid" /> is displayed with four hexadecimal values enclosed in braces, where the fourth value is a subset of eight hexadecimal values that is also enclosed in braces.
            <para />Example: {0x00000000,0x0000,0x0000,{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}
            </summary>
        </member>
        <member name="T:BytecodeApi.HashType">
            <summary>
            Specifies a hash algorithm.
            </summary>
        </member>
        <member name="F:BytecodeApi.HashType.Adler32">
            <summary>
            The Adler-32 algorithm is used.
            <para />A <see cref="F:System.String.Empty" /> hashed by this algorithm will return "00000001".
            </summary>
        </member>
        <member name="F:BytecodeApi.HashType.CRC32">
            <summary>
            The CRC32 algorithm is used.
            <para />A <see cref="F:System.String.Empty" /> hashed by this algorithm will return "00000000".
            </summary>
        </member>
        <member name="F:BytecodeApi.HashType.CRC64">
            <summary>
            The CRC64 algorithm is used.
            <para />A <see cref="F:System.String.Empty" /> hashed by this algorithm will return "0000000000000000".
            </summary>
        </member>
        <member name="F:BytecodeApi.HashType.MD5">
            <summary>
            The MD5 algorithm is used.
            <para />A <see cref="F:System.String.Empty" /> hashed by this algorithm will return "d41d8cd98f00b204e9800998ecf8427e".
            </summary>
        </member>
        <member name="F:BytecodeApi.HashType.RIPEMD160">
            <summary>
            The RIPEMD-160 algorithm is used.
            <para />A <see cref="F:System.String.Empty" /> hashed by this algorithm will return "9c1185a5c5e9fc54612808977ee8f548b2258d31".
            </summary>
        </member>
        <member name="F:BytecodeApi.HashType.SHA1">
            <summary>
            The SHA-1 algorithm is used.
            <para />A <see cref="F:System.String.Empty" /> hashed by this algorithm will return "da39a3ee5e6b4b0d3255bfef95601890afd80709".
            </summary>
        </member>
        <member name="F:BytecodeApi.HashType.SHA256">
            <summary>
            The SHA-256 algorithm is used.
            <para />A <see cref="F:System.String.Empty" /> hashed by this algorithm will return "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855".
            </summary>
        </member>
        <member name="F:BytecodeApi.HashType.SHA384">
            <summary>
            The SHA-384 algorithm is used.
            <para />A <see cref="F:System.String.Empty" /> hashed by this algorithm will return "38b060a751ac96384cd9327eb1b1e36a21fdb71114be07434c0cc7bf63f6e1da274edebfe76f65fbd51ad2f14898b95b".
            </summary>
        </member>
        <member name="F:BytecodeApi.HashType.SHA512">
            <summary>
            The SHA-512 algorithm is used.
            <para />A <see cref="F:System.String.Empty" /> hashed by this algorithm will return "cf83e1357eefb8bdf1542850d66d8007d620e4050b5715dc83f4a921d36ce9ce47d0d13c5d85f2b0ff8318d2877eec2f63b931bd47417a81a538327af927da3e".
            </summary>
        </member>
        <member name="T:BytecodeApi.ProcessAnalyzer">
            <summary>
            Specifies a process analyzer, such as a sandbox, a virtual environment, or a running program.
            </summary>
        </member>
        <member name="F:BytecodeApi.ProcessAnalyzer.Sandboxie">
            <summary>
            Specifies Sandboxie
            <para />Detection: The module 'SbieDll.dll' is loaded.
            </summary>
        </member>
        <member name="F:BytecodeApi.ProcessAnalyzer.Emulator">
            <summary>
            Specifies a generic emulator
            <para />Detection: A sleep of 500 milliseconds is measured. If it is below 450 milliseconds, an emulator is detected.
            </summary>
        </member>
        <member name="F:BytecodeApi.ProcessAnalyzer.Wireshark">
            <summary>
            Specifies that Wireshark is currently running.
            <para />Detection: Either 'Wireshark.exe' is running in any active user session, or a window with the title 'The Wireshark Network Analyzer' is opened.
            </summary>
        </member>
        <member name="F:BytecodeApi.ProcessAnalyzer.ProcessMonitor">
            <summary>
            Specifies that Process Monitor is currently running.
            <para />Detection: A window with a title that starts with 'Process Monitor -' is opened.
            </summary>
        </member>
        <member name="T:BytecodeApi.ProcessIntegrityLevel">
            <summary>
            Specifies the mandatory integrity level for a <see cref="T:System.Diagnostics.Process" />.
            </summary>
        </member>
        <member name="F:BytecodeApi.ProcessIntegrityLevel.Untrusted">
            <summary>
            The <see cref="T:System.Diagnostics.Process" /> is running with untrusted integrity (SECURITY_MANDATORY_UNTRUSTED_RID).
            </summary>
        </member>
        <member name="F:BytecodeApi.ProcessIntegrityLevel.Low">
            <summary>
            The <see cref="T:System.Diagnostics.Process" /> is running with low integrity (SECURITY_MANDATORY_LOW_RID).
            </summary>
        </member>
        <member name="F:BytecodeApi.ProcessIntegrityLevel.Medium">
            <summary>
            The <see cref="T:System.Diagnostics.Process" /> is running with medium integrity (SECURITY_MANDATORY_MEDIUM_RID or SECURITY_MANDATORY_MEDIUM_PLUS_RID).
            </summary>
        </member>
        <member name="F:BytecodeApi.ProcessIntegrityLevel.High">
            <summary>
            The <see cref="T:System.Diagnostics.Process" /> is running with high integrity (SECURITY_MANDATORY_HIGH_RID).
            </summary>
        </member>
        <member name="F:BytecodeApi.ProcessIntegrityLevel.System">
            <summary>
            The <see cref="T:System.Diagnostics.Process" /> is running with system integrity (SECURITY_MANDATORY_SYSTEM_RID).
            </summary>
        </member>
        <member name="T:BytecodeApi.ProcessLoadLibraryResult">
            <summary>
            Specifies the result of a DLL injection attempt, performed by <see cref="M:BytecodeApi.ProcessExtensions.LoadLibrary(System.Diagnostics.Process,System.String)" />.
            </summary>
        </member>
        <member name="F:BytecodeApi.ProcessLoadLibraryResult.Success">
            <summary>
            The DLL was successfully loaded.
            </summary>
        </member>
        <member name="F:BytecodeApi.ProcessLoadLibraryResult.AlreadyLoaded">
            <summary>
            The DLL was not loaded, because a module with the same name was already loaded by the <see cref="T:System.Diagnostics.Process" />.
            </summary>
        </member>
        <member name="F:BytecodeApi.ProcessLoadLibraryResult.OpenProcessFailed">
            <summary>
            The native method OpenProcess failed.
            </summary>
        </member>
        <member name="F:BytecodeApi.ProcessLoadLibraryResult.VirtualAllocFailed">
            <summary>
            The native method VirtualAllocEx failed.
            </summary>
        </member>
        <member name="F:BytecodeApi.ProcessLoadLibraryResult.WriteProcessMemoryFailed">
            <summary>
            The native method WriteProcessMemory failed.
            </summary>
        </member>
        <member name="F:BytecodeApi.ProcessLoadLibraryResult.CreateRemoteThreadFailed">
            <summary>
            The native method CreateRemoteThread failed.
            </summary>
        </member>
        <member name="T:BytecodeApi.StringCasing">
            <summary>
            Specifies the character casing of a <see cref="T:System.String" />.
            </summary>
        </member>
        <member name="F:BytecodeApi.StringCasing.Lower">
            <summary>
            The <see cref="T:System.String" /> is lowercase.
            <para />Example: hello world
            </summary>
        </member>
        <member name="F:BytecodeApi.StringCasing.Upper">
            <summary>
            The <see cref="T:System.String" /> is uppercase.
            <para />Example: HELLO WORLD
            </summary>
        </member>
        <member name="F:BytecodeApi.StringCasing.CamelCase">
            <summary>
            The <see cref="T:System.String" /> is camelcase, where the first character and each character following a whitespace or puncuation mark is uppercase. All other characters are lowercase.
            <para />Example: Hello World
            </summary>
        </member>
        <member name="T:BytecodeApi.ArrayExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Array" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.ArrayExtensions.IsNullOrEmpty(System.Array)">
            <summary>
            Indicates whether this <see cref="T:System.Array" /> is <see langword="null" />, has no elements or all elements are equal to <see langword="null" />.
            </summary>
            <param name="array">The <see cref="T:System.Array" /> to test.</param>
            <returns>
            <see langword="true" />, if this <see cref="T:System.Array" /> is <see langword="null" />, has no elements or all elements are equal to <see langword="null" />;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.BooleanExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Boolean" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.BooleanExtensions.ToNullIfDefault(System.Boolean)">
            <summary>
            Returns <see langword="null" />, if this <see cref="T:System.Boolean" /> value is <see langword="false" />, otherwise its original value.
            </summary>
            <param name="value">The <see cref="T:System.Boolean" /> value to convert.</param>
            <returns>
            <see langword="null" />, if this <see cref="T:System.Boolean" /> value is <see langword="false" />;
            otherwise, its original value.
            </returns>
        </member>
        <member name="M:BytecodeApi.BooleanExtensions.ToVisibility(System.Boolean)">
            <summary>
            Converts this <see cref="T:System.Boolean" /> value to <see cref="F:System.Windows.Visibility.Visible" /> or <see cref="F:System.Windows.Visibility.Collapsed" />.
            </summary>
            <param name="value">The <see cref="T:System.Boolean" /> value to be converted.</param>
            <returns>
            <see cref="F:System.Windows.Visibility.Visible" />, if <paramref name="value" /> is <see langword="true" />;
            otherwise, <see cref="F:System.Windows.Visibility.Collapsed" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.BooleanExtensions.ToVisibility(System.Boolean,System.Boolean)">
            <summary>
            Converts this <see cref="T:System.Boolean" />? value to <see cref="F:System.Windows.Visibility.Visible" />, <see cref="F:System.Windows.Visibility.Hidden" /> or <see cref="F:System.Windows.Visibility.Collapsed" /> depending on its value and the <paramref name="preserveSpace" /> parameter.
            </summary>
            <param name="value">The <see cref="T:System.Boolean" /> value to be converted.</param>
            <param name="preserveSpace"><see langword="true" /> to use <see cref="F:System.Windows.Visibility.Hidden" />; <see langword="false" /> to use <see cref="F:System.Windows.Visibility.Collapsed" />. Only applies if <paramref name="value" /> is <see langword="false" />.</param>
            <returns>
            <see cref="F:System.Windows.Visibility.Visible" />, if <paramref name="value" /> is <see langword="true" />;
            <see cref="F:System.Windows.Visibility.Collapsed" />, if <paramref name="value" /> is <see langword="false" />;
            <see cref="F:System.Windows.Visibility.Hidden" />, if <paramref name="value" /> is <see langword="false" /> and <paramref name="preserveSpace" /> is <see langword="true" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.ByteArrayExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Byte" />[] objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.ByteArrayExtensions.ToAnsiString(System.Byte[])">
            <summary>
            Decodes all the bytes in this <see cref="T:System.Byte" />[] into a <see cref="T:System.String" /> using the <see cref="P:System.Text.Encoding.Default" /> encoding.
            </summary>
            <param name="array">The <see cref="T:System.Byte" />[] containing the sequence of bytes to decode.</param>
            <returns>
            A <see cref="T:System.String" /> that contains the results of decoding this sequence of bytes.
            </returns>
        </member>
        <member name="M:BytecodeApi.ByteArrayExtensions.ToUTF8String(System.Byte[])">
            <summary>
            Decodes all the bytes in this <see cref="T:System.Byte" />[] into a <see cref="T:System.String" /> using the <see cref="P:System.Text.Encoding.UTF8" /> encoding.
            </summary>
            <param name="array">The <see cref="T:System.Byte" />[] containing the sequence of bytes to decode.</param>
            <returns>
            A <see cref="T:System.String" /> that contains the results of decoding this sequence of bytes.
            </returns>
        </member>
        <member name="M:BytecodeApi.ByteArrayExtensions.ToUnicodeString(System.Byte[])">
            <summary>
            Decodes all the bytes in this <see cref="T:System.Byte" />[] into a <see cref="T:System.String" /> using the <see cref="P:System.Text.Encoding.Unicode" /> encoding.
            </summary>
            <param name="array">The <see cref="T:System.Byte" />[] containing the sequence of bytes to decode.</param>
            <returns>
            A <see cref="T:System.String" /> that contains the results of decoding this sequence of bytes.
            </returns>
        </member>
        <member name="M:BytecodeApi.ByteArrayExtensions.ToHexadecimalString(System.Byte[])">
            <summary>
            Converts this <see cref="T:System.Byte" />[] into into its hexadecimal <see cref="T:System.String" /> representation
            </summary>
            <param name="array">The <see cref="T:System.Byte" />[] containing the sequence of bytes to convert.</param>
            <returns>
            A <see cref="T:System.String" /> that contains the results of converting this sequence of bytes.
            </returns>
        </member>
        <member name="M:BytecodeApi.ByteArrayExtensions.ToHexadecimalString(System.Byte[],System.Boolean)">
            <summary>
            Converts this <see cref="T:System.Byte" />[] into its hexadecimal <see cref="T:System.String" /> representation.
            </summary>
            <param name="array">The <see cref="T:System.Byte" />[] containing the sequence of bytes to convert.</param>
            <param name="upperCase"><see langword="true" /> to use uppercase letters (a-f); <see langword="false" /> to use lowercase letters (A-F).</param>
            <returns>
            A <see cref="T:System.String" /> that contains the results of converting this sequence of bytes.
            </returns>
        </member>
        <member name="M:BytecodeApi.ByteArrayExtensions.Concat(System.Byte[],System.Byte[][])">
            <summary>
            Merges all <see cref="T:System.Byte" />[] objects and returns a new <see cref="T:System.Byte" />[], where <paramref name="otherArrays" /> are concatenated after this array.
            </summary>
            <param name="array">The first <see cref="T:System.Byte" />[] object.</param>
            <param name="otherArrays">An array of <see cref="T:System.Byte" />[] objects to append.</param>
            <returns>
            A new <see cref="T:System.Byte" />[] object, starting with <paramref name="array" />, followed by all elements from <paramref name="otherArrays" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.ByteArrayExtensions.GetBytes(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Copies a specified number of bytes from this <see cref="T:System.Byte" />[] and returns a new array representing a fraction of the original <see cref="T:System.Byte" />[].
            </summary>
            <param name="array">The <see cref="T:System.Byte" />[] to take the subset of bytes from.</param>
            <param name="offset">A <see cref="T:System.Int32" /> value specifying the offset from which to start copying bytes.</param>
            <param name="count">A <see cref="T:System.Int32" /> value specifying the number of bytes to copy.</param>
            <returns>
            A new <see cref="T:System.Byte" />[] representing a fraction of the original <see cref="T:System.Byte" />[].
            </returns>
        </member>
        <member name="M:BytecodeApi.ByteArrayExtensions.Compare(System.Byte[],System.Byte[])">
            <summary>
            Compares the content of this <see cref="T:System.Byte" />[] agains another <see cref="T:System.Byte" />[]. Returns <see langword="true" />, if both arrays contain the exact same set of data. If <paramref name="array" /> and <paramref name="otherArray" /> are both <see langword="null" />, <see langword="true" /> is returned.
            </summary>
            <param name="array">A <see cref="T:System.Byte" />[] to compare to <paramref name="otherArray" />.</param>
            <param name="otherArray">A <see cref="T:System.Byte" />[] to compare to <paramref name="array" />.</param>
            <returns>
            <see langword="true" />, if both arrays contain the exact same set of data or if <paramref name="array" /> and <paramref name="otherArray" /> are both <see langword="null" />;
            otherwuse <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.ByteArrayExtensions.FindSequence(System.Byte[],System.Byte[])">
            <summary>
            Searches this <see cref="T:System.Byte" />[] for the first occurrence of <paramref name="sequence" />. If not found, returns -1.
            </summary>
            <param name="array">The <see cref="T:System.Byte" />[] to be searched.</param>
            <param name="sequence">The <see cref="T:System.Byte" />[] to search for.</param>
            <returns>
            The index of the first occurrence of <paramref name="sequence" /> and -1 if not found.
            </returns>
        </member>
        <member name="M:BytecodeApi.ByteArrayExtensions.FindSequence(System.Byte[],System.Byte[],System.Int32)">
            <summary>
            Searches this <see cref="T:System.Byte" />[] for the first occurrence of <paramref name="sequence" /> starting from <paramref name="startIndex" />. If not found, returns -1.
            </summary>
            <param name="array">The <see cref="T:System.Byte" />[] to be searched.</param>
            <param name="sequence">The <see cref="T:System.Byte" />[] to search for.</param>
            <param name="startIndex">The zero-based starting position of a substring in this instance.</param>
            <returns>
            The index of the first occurrence of <paramref name="sequence" /> and -1 if not found.
            </returns>
        </member>
        <member name="T:BytecodeApi.CharExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Char" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.CharExtensions.GetNumericValue(System.Char)">
            <summary>
            Converts this numeric <see langword="char" /> to a double-precision floating point number.
            </summary>
            <param name="c">The unicode character to convert.</param>
            <returns>
            The numeric value of <paramref name="c" />, if that character represents a number;
            otherwise, -1.0.
            </returns>
        </member>
        <member name="M:BytecodeApi.CharExtensions.GetUnicodeCategory(System.Char)">
            <summary>
            Categorizes this <see langword="char" /> into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.
            </summary>
            <param name="c">The unicode character to categorize.</param>
            <returns>
            A <see cref="T:System.Globalization.UnicodeCategory" /> value that identifies the group that contains <paramref name="c" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.CharExtensions.IsControl(System.Char)">
            <summary>
            Indicates whether this <see langword="char" /> is categorized as a control character.
            </summary>
            <param name="c">The unicode character to evaluate.</param>
            <returns>
            <see langword="true" />, if <paramref name="c" /> is a control character;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.CharExtensions.IsHighSurrogate(System.Char)">
            <summary>
            Indicates whether this <see langword="char" /> is a high surrogate.
            </summary>
            <param name="c">The unicode character to evaluate.</param>
            <returns>
            <see langword="true" />, if the numeric value of the <paramref name="c" /> parameter ranges from U+D800 through U+DBFF;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.CharExtensions.IsLetter(System.Char)">
            <summary>
            Indicates whether this <see langword="char" /> is categorized as a unicode letter.
            </summary>
            <param name="c">The unicode character to evaluate.</param>
            <returns>
            <see langword="true" />, if <paramref name="c" /> is a letter;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.CharExtensions.IsLetterOrDigit(System.Char)">
            <summary>
            Indicates whether this <see langword="char" /> is categorized as a unicode letter or a decimal digit.
            </summary>
            <param name="c">The unicode character to evaluate.</param>
            <returns>
            <see langword="true" />, if <paramref name="c" /> is a letter or a decimal digit;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.CharExtensions.IsLower(System.Char)">
            <summary>
            Indicates whether this <see langword="char" /> is categorized as a lowercase letter.
            </summary>
            <param name="c">The unicode character to evaluate.</param>
            <returns>
            <see langword="true" />, if <paramref name="c" /> is a lowercase letter;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.CharExtensions.IsLowSurrogate(System.Char)">
            <summary>
            Indicates whether this <see langword="char" /> is a low surrogate.
            </summary>
            <param name="c">The unicode character to evaluate.</param>
            <returns>
            <see langword="true" />, if the numeric value of the <paramref name="c" /> parameter ranges from U+DC00 through U+DFFF;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.CharExtensions.IsNumber(System.Char)">
            <summary>
            Indicates whether this <see langword="char" /> is categorized as a number.
            </summary>
            <param name="c">The unicode character to evaluate.</param>
            <returns>
            <see langword="true" />, if <paramref name="c" /> is a number;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.CharExtensions.IsPunctuation(System.Char)">
            <summary>
            Indicates whether this <see langword="char" /> is categorized as a punctuation mark.
            </summary>
            <param name="c">The unicode character to evaluate.</param>
            <returns>
            <see langword="true" />, if <paramref name="c" /> is a punctuation mark;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.CharExtensions.IsSeparator(System.Char)">
            <summary>
            Indicates whether this <see langword="char" /> is categorized as a separator character.
            </summary>
            <param name="c">The unicode character to evaluate.</param>
            <returns>
            <see langword="true" />, if <paramref name="c" /> is a separator character;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.CharExtensions.IsSurrogate(System.Char)">
            <summary>
            Indicates whether this <see langword="char" /> has a surrogate code unit.
            </summary>
            <param name="c">The unicode character to evaluate.</param>
            <returns>
            <see langword="true" />, if the numeric value of the <paramref name="c" /> is either a high surrogate or a low surrogate;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.CharExtensions.IsSymbol(System.Char)">
            <summary>
            Indicates whether this <see langword="char" /> is categorized as a symbol character.
            </summary>
            <param name="c">The unicode character to evaluate.</param>
            <returns>
            <see langword="true" />, if <paramref name="c" /> is a symbol character;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.CharExtensions.IsUpper(System.Char)">
            <summary>
            Indicates whether this <see langword="char" /> is categorized as an uppercase letter.
            </summary>
            <param name="c">The unicode character to evaluate.</param>
            <returns>
            <see langword="true" />, if <paramref name="c" /> is an uppercase letter;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.CharExtensions.IsWhiteSpace(System.Char)">
            <summary>
            Indicates whether this <see langword="char" /> is categorized as whitespace.
            </summary>
            <param name="c">The unicode character to evaluate.</param>
            <returns>
            <see langword="true" />, if <paramref name="c" /> is whitespace;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.CharExtensions.IsHexadecimal(System.Char)">
            <summary>
            Indicates whether this <see langword="char" /> is categorized as a hexadecimal character (0-9, a-f, A-F).
            </summary>
            <param name="c">The unicode character to evaluate.</param>
            <returns>
            <see langword="true" />, if <paramref name="c" /> is a hexadecimal character (0-9, a-f, A-F);
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.CharExtensions.ToLower(System.Char)">
            <summary>
            Converts the value of this <see langword="char" /> to its lowercase equivalent.
            </summary>
            <param name="c">The unicode character to convert.</param>
            <returns>
            The lowercase equivalent of <paramref name="c" />, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.
            </returns>
        </member>
        <member name="M:BytecodeApi.CharExtensions.ToLower(System.Char,System.Globalization.CultureInfo)">
            <summary>
            Converts the value of this <see langword="char" /> to its lowercase equivalent using specified culture-specific formatting information.
            </summary>
            <param name="c">The unicode character to convert.</param>
            <param name="culture">An object that supplies culture-specific casing rules.</param>
            <returns>
            The lowercase equivalent of <paramref name="c" />, modified according to <paramref name="culture" />, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase, has no lowercase equivalent, or is not alphabetic.
            </returns>
        </member>
        <member name="M:BytecodeApi.CharExtensions.ToLowerInvariant(System.Char)">
            <summary>
            Converts the value of this <see langword="char" /> to its lowercase equivalent using the casing rules of the invariant culture.
            </summary>
            <param name="c">The unicode character to evaluate.</param>
            <returns>
            The lowercase equivalent of <paramref name="c" />, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase, has no lowercase equivalent, or is not alphabetic.
            </returns>
        </member>
        <member name="M:BytecodeApi.CharExtensions.ToUpper(System.Char)">
            <summary>
            Converts the value of this <see langword="char" /> to its uppercase equivalent.
            </summary>
            <param name="c">The unicode character to convert.</param>
            <returns>
            The uppercase equivalent of <paramref name="c" />, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already uppercase or not alphabetic.
            </returns>
        </member>
        <member name="M:BytecodeApi.CharExtensions.ToUpper(System.Char,System.Globalization.CultureInfo)">
            <summary>
            Converts the value of this <see langword="char" /> to its uppercase equivalent using specified culture-specific formatting information.
            </summary>
            <param name="c">The unicode character to convert.</param>
            <param name="culture">An object that supplies culture-specific casing rules.</param>
            <returns>
            The uppercase equivalent of <paramref name="c" />, modified according to <paramref name="culture" />, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already uppercase, has no uppercase equivalent, or is not alphabetic.
            </returns>
        </member>
        <member name="M:BytecodeApi.CharExtensions.ToUpperInvariant(System.Char)">
            <summary>
            Converts the value of this <see langword="char" /> to its uppercase equivalent using the casing rules of the invariant culture.
            </summary>
            <param name="c">The unicode character to evaluate.</param>
            <returns>
            The uppercase equivalent of <paramref name="c" />, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already uppercase, has no uppercase equivalent, or is not alphabetic.
            </returns>
        </member>
        <member name="M:BytecodeApi.CharExtensions.ToNullIfDefault(System.Char)">
            <summary>
            Returns <see langword="null" />, if this <see cref="T:System.Char" /> value is '\0', otherwise its original value.
            </summary>
            <param name="value">The <see cref="T:System.Char" /> value to convert.</param>
            <returns>
            <see langword="null" />, if this <see cref="T:System.Char" /> value is '\0';
            otherwise, its original value.
            </returns>
        </member>
        <member name="M:BytecodeApi.CharExtensions.Repeat(System.Char,System.Int32)">
            <summary>
            Creates a <see cref="T:System.String" /> using the value of the <paramref name="c" /> parameter and repeats it a specified number of times.
            </summary>
            <param name="c">The unicode character to repeat.</param>
            <param name="count">The number of times <paramref name="c" /> is repeated.</param>
            <returns>
            A new <see cref="T:System.String" /> object containing characters with the value of <paramref name="c" /> with a length based on <paramref name="count" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.WebClientExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Net.WebClient" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.WebClientExtensions.DownloadLines(System.Net.WebClient,System.String)">
            <summary>
            Downloads the requested resource as a <see cref="T:System.String" />[], separated by either a CRLF or a LF. The resource to download is specified as a <see cref="T:System.String" /> containing the URI.
            </summary>
            <param name="webClient">The <see cref="T:System.Net.WebClient" /> to be used.</param>
            <param name="address">A <see cref="T:System.String" /> containing the URI to download.</param>
            <returns>
            A <see cref="T:System.String" />[] containing the requested resource, separated by either a CRLF or a LF.
            </returns>
        </member>
        <member name="M:BytecodeApi.WebClientExtensions.DownloadLines(System.Net.WebClient,System.Uri)">
            <summary>
            Downloads the requested resource as a <see cref="T:System.String" />[], separated by either a CRLF or a LF. The resource to download is specified as a <see cref="T:System.Uri" />.
            </summary>
            <param name="webClient">The <see cref="T:System.Net.WebClient" /> to be used.</param>
            <param name="address">A <see cref="T:System.Uri" /> object containing the URI to download.</param>
            <returns>
            A <see cref="T:System.String" />[] containing the requested resource, separated by either a CRLF or a LF.
            </returns>
        </member>
        <member name="T:BytecodeApi.CompressionExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.IO.Compression.ZipArchive" /> and related objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.CompressionExtensions.CreateEntry(System.IO.Compression.ZipArchive,System.String,System.Byte[])">
            <summary>
            Adds a <see cref="T:System.IO.Compression.ZipArchiveEntry" /> to this <see cref="T:System.IO.Compression.ZipArchive" /> with the specified name and content.
            </summary>
            <param name="archive">The <see cref="T:System.IO.Compression.ZipArchive" /> where the <see cref="T:System.IO.Compression.ZipArchiveEntry" /> is created in.</param>
            <param name="name">A <see cref="T:System.String" /> value speficying the name for the entry.</param>
            <param name="content">A <see cref="T:System.Byte" />[] object speficying the content for the entry.</param>
        </member>
        <member name="M:BytecodeApi.CompressionExtensions.CreateEntry(System.IO.Compression.ZipArchive,System.String,System.Byte[],System.IO.Compression.CompressionLevel)">
            <summary>
            Adds a <see cref="T:System.IO.Compression.ZipArchiveEntry" /> to this <see cref="T:System.IO.Compression.ZipArchive" /> with the specified name, content and <see cref="T:System.IO.Compression.CompressionLevel" />.
            </summary>
            <param name="archive">The <see cref="T:System.IO.Compression.ZipArchive" /> where the <see cref="T:System.IO.Compression.ZipArchiveEntry" /> is created in.</param>
            <param name="name">A <see cref="T:System.String" /> value speficying the name for the entry.</param>
            <param name="content">A <see cref="T:System.Byte" />[] object speficying the content for the entry.</param>
            <param name="compressionLevel">The <see cref="T:System.IO.Compression.CompressionLevel" /> to apply to the data in <paramref name="content" />.</param>
        </member>
        <member name="M:BytecodeApi.CompressionExtensions.GetContent(System.IO.Compression.ZipArchiveEntry)">
            <summary>
            Extracts the content of this <see cref="T:System.IO.Compression.ZipArchiveEntry" /> into a <see cref="T:System.Byte" />[].
            </summary>
            <param name="entry">The <see cref="T:System.IO.Compression.ZipArchiveEntry" /> object that holds the compressed data.</param>
            <returns>
            A <see cref="T:System.Byte" />[] object with the uncompressed data from this <see cref="T:System.IO.Compression.ZipArchiveEntry" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.DateTimeExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.DateTime" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.DateTimeExtensions.ToNullIfDefault(System.DateTime)">
            <summary>
            Returns <see langword="null" />, if this <see cref="T:System.DateTime" /> object is default(<see cref="T:System.DateTime" />), otherwise its original value.
            </summary>
            <param name="value">The <see cref="T:System.DateTime" /> value to convert.</param>
            <returns>
            <see langword="null" />, if this <see cref="T:System.DateTime" /> object is default(<see cref="T:System.DateTime" />);
            otherwise, its original value.
            </returns>
        </member>
        <member name="M:BytecodeApi.DateTimeExtensions.SubtractYears(System.DateTime,System.Int32)">
            <summary>
            Returns a new <see cref="T:System.DateTime" /> that subtracts the specified number of years from this <see cref="T:System.DateTime" /> value.
            </summary>
            <param name="dateTime">The original <see cref="T:System.DateTime" /> value.</param>
            <param name="value">A <see cref="T:System.Int32" /> value specifying the years to be subtracted from this <see cref="T:System.DateTime" /> object.</param>
            <returns>
            A new <see cref="T:System.DateTime" /> object whose value is the difference of this <see cref="T:System.DateTime" /> value and the specified years.
            </returns>
        </member>
        <member name="M:BytecodeApi.DateTimeExtensions.SubtractMonths(System.DateTime,System.Int32)">
            <summary>
            Returns a new <see cref="T:System.DateTime" /> that subtracts the specified number of months from this <see cref="T:System.DateTime" /> value.
            </summary>
            <param name="dateTime">The original <see cref="T:System.DateTime" /> value.</param>
            <param name="value">A <see cref="T:System.Int32" /> value specifying the months to be subtracted from this <see cref="T:System.DateTime" /> object.</param>
            <returns>
            A new <see cref="T:System.DateTime" /> object whose value is the difference of this <see cref="T:System.DateTime" /> value and the specified months.
            </returns>
        </member>
        <member name="M:BytecodeApi.DateTimeExtensions.SubtractDays(System.DateTime,System.Double)">
            <summary>
            Returns a new <see cref="T:System.DateTime" /> that subtracts the specified number of days from this <see cref="T:System.DateTime" /> value.
            </summary>
            <param name="dateTime">The original <see cref="T:System.DateTime" /> value.</param>
            <param name="value">A <see cref="T:System.Int32" /> value specifying the days to be subtracted from this <see cref="T:System.DateTime" /> object.</param>
            <returns>
            A new <see cref="T:System.DateTime" /> object whose value is the difference of this <see cref="T:System.DateTime" /> value and the specified days.
            </returns>
        </member>
        <member name="M:BytecodeApi.DateTimeExtensions.SubtractHours(System.DateTime,System.Double)">
            <summary>
            Returns a new <see cref="T:System.DateTime" /> that subtracts the specified number of hours from this <see cref="T:System.DateTime" /> value.
            </summary>
            <param name="dateTime">The original <see cref="T:System.DateTime" /> value.</param>
            <param name="value">A <see cref="T:System.Int32" /> value specifying the hours to be subtracted from this <see cref="T:System.DateTime" /> object.</param>
            <returns>
            A new <see cref="T:System.DateTime" /> object whose value is the difference of this <see cref="T:System.DateTime" /> value and the specified hours.
            </returns>
        </member>
        <member name="M:BytecodeApi.DateTimeExtensions.SubtractMinutes(System.DateTime,System.Double)">
            <summary>
            Returns a new <see cref="T:System.DateTime" /> that subtracts the specified number of minutes from this <see cref="T:System.DateTime" /> value.
            </summary>
            <param name="dateTime">The original <see cref="T:System.DateTime" /> value.</param>
            <param name="value">A <see cref="T:System.Int32" /> value specifying the minutes to be subtracted from this <see cref="T:System.DateTime" /> object.</param>
            <returns>
            A new <see cref="T:System.DateTime" /> object whose value is the difference of this <see cref="T:System.DateTime" /> value and the specified minutes.
            </returns>
        </member>
        <member name="M:BytecodeApi.DateTimeExtensions.SubtractSeconds(System.DateTime,System.Double)">
            <summary>
            Returns a new <see cref="T:System.DateTime" /> that subtracts the specified number of seconds from this <see cref="T:System.DateTime" /> value.
            </summary>
            <param name="dateTime">The original <see cref="T:System.DateTime" /> value.</param>
            <param name="value">A <see cref="T:System.Int32" /> value specifying the seconds to be subtracted from this <see cref="T:System.DateTime" /> object.</param>
            <returns>
            A new <see cref="T:System.DateTime" /> object whose value is the difference of this <see cref="T:System.DateTime" /> value and the specified seconds.
            </returns>
        </member>
        <member name="M:BytecodeApi.DateTimeExtensions.SubtractMilliseconds(System.DateTime,System.Double)">
            <summary>
            Returns a new <see cref="T:System.DateTime" /> that subtracts the specified number of milliseconds from this <see cref="T:System.DateTime" /> value.
            </summary>
            <param name="dateTime">The original <see cref="T:System.DateTime" /> value.</param>
            <param name="value">A <see cref="T:System.Int32" /> value specifying the milliseconds to be subtracted from this <see cref="T:System.DateTime" /> object.</param>
            <returns>
            A new <see cref="T:System.DateTime" /> object whose value is the difference of this <see cref="T:System.DateTime" /> value and the specified milliseconds.
            </returns>
        </member>
        <member name="M:BytecodeApi.DateTimeExtensions.SubtractTicks(System.DateTime,System.Int64)">
            <summary>
            Returns a new <see cref="T:System.DateTime" /> that subtracts the specified number of ticks from this <see cref="T:System.DateTime" /> value.
            </summary>
            <param name="dateTime">The original <see cref="T:System.DateTime" /> value.</param>
            <param name="value">A <see cref="T:System.Int32" /> value specifying the ticks to be subtracted from this <see cref="T:System.DateTime" /> object.</param>
            <returns>
            A new <see cref="T:System.DateTime" /> object whose value is the difference of this <see cref="T:System.DateTime" /> value and the specified ticks.
            </returns>
        </member>
        <member name="M:BytecodeApi.DateTimeExtensions.AddBusinessDays(System.DateTime,System.Int32)">
            <summary>
            Returns a new <see cref="T:System.DateTime" /> that adds the specified number of business days to this <see cref="T:System.DateTime" /> value. Business days exclude Saturday and Sunday. The calculation is iterative. If <paramref name="days" /> is positive, days are added, otherwise days are subtracted.
            <para />Example 1: Friday + 2 business days = Tuesday
            <para />Example 2: Monday - 2 business days = Thursday
            </summary>
            <param name="dateTime">The original <see cref="T:System.DateTime" /> value.</param>
            <param name="days">A <see cref="T:System.Int32" /> value specifying the business days to be added to this <see cref="T:System.DateTime" /> object.</param>
            <returns>
            A new <see cref="T:System.DateTime" /> object whose value is the sum of this <see cref="T:System.DateTime" /> value and the specified business days.
            </returns>
        </member>
        <member name="M:BytecodeApi.DateTimeExtensions.SubtractBusinessDays(System.DateTime,System.Int32)">
            <summary>
            Returns a new <see cref="T:System.DateTime" /> that subtracts the specified number of business days from this <see cref="T:System.DateTime" /> value. Business days exclude Saturday and Sunday. The calculation is iterative. If <paramref name="days" /> is positive, days are subtracted, otherwise days are added.
            <para />Example 1: Friday + 2 business days = Tuesday
            <para />Example 2: Monday - 2 business days = Thursday
            </summary>
            <param name="dateTime">The original <see cref="T:System.DateTime" /> value.</param>
            <param name="days">A <see cref="T:System.Int32" /> value specifying the business days to be subtracted from this <see cref="T:System.DateTime" /> object.</param>
            <returns>
            A new <see cref="T:System.DateTime" /> object whose value is the difference of this <see cref="T:System.DateTime" /> value and the specified business days.
            </returns>
        </member>
        <member name="M:BytecodeApi.DateTimeExtensions.GetTotalBusinessDays(System.DateTime,System.DateTime)">
            <summary>
            Computes the total count of business days between two <see cref="T:System.DateTime" /> instances. Business days exclude Saturday and Sunday. The time fraction is ignored and the returned value is inclusive.
            <para />Example 1: Friday through Tuesday = 3 business days
            <para />Example 2: Saturday through Sunday = 0 business days
            </summary>
            <param name="dateTime">The <see cref="T:System.DateTime" /> value to compare to <paramref name="value" />.</param>
            <param name="value">The <see cref="T:System.DateTime" /> value to compare to this <see cref="T:System.DateTime" />. <paramref name="value" /> can be either less or greater than this <see cref="T:System.DateTime" /> value.</param>
            <returns>
            A <see cref="T:System.Int32" /> value representing the total count of business days between two <see cref="T:System.DateTime" /> instances.
            </returns>
        </member>
        <member name="M:BytecodeApi.DateTimeExtensions.CompareTo(System.DateTime,System.DateTime,BytecodeApi.DateTimePart)">
            <summary>
            Compares the value of this <see cref="T:System.DateTime" /> instance to a specified <see cref="T:System.DateTime" /> value and returns an integer that indicates whether this instance is earlier than, the same as, or later than the specified <see cref="T:System.DateTime" /> value. The <paramref name="part" /> parameter specifies which fraction is considered during comparison.
            </summary>
            <param name="dateTime">The <see cref="T:System.DateTime" /> value to be compared to <paramref name="value" />.</param>
            <param name="value">The <see cref="T:System.DateTime" /> value to be compared to this <see cref="T:System.DateTime" />.</param>
            <param name="part">The <see cref="T:BytecodeApi.DateTimePart" /> specifying, which fraction is considered during comparison.</param>
            <returns>
            A signed integer that indicates the relative values of this <see cref="T:System.DateTime" /> and <paramref name="value" /> considering only the specified <see cref="T:BytecodeApi.DateTimePart" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.DateTimeExtensions.Strip(System.DateTime,BytecodeApi.DateTimePart)">
            <summary>
            Returns a new <see cref="T:System.DateTime" /> that represents a fraction of this <see cref="T:System.DateTime" /> value specified by the <paramref name="part" /> parameter.
            </summary>
            <param name="dateTime">The <see cref="T:System.DateTime" /> value to be stripped.</param>
            <param name="part">The <see cref="T:BytecodeApi.DateTimePart" /> specifying, which fraction of <paramref name="dateTime" /> is returned.</param>
            <returns>
            A new <see cref="T:System.DateTime" /> that represents a fraction of this <see cref="T:System.DateTime" /> value specified by the <paramref name="part" /> parameter.
            </returns>
        </member>
        <member name="M:BytecodeApi.DateTimeExtensions.ToStringInvariant(System.DateTime,System.String)">
            <summary>
            Converts the value of this <see cref="T:System.DateTime" /> to its equivalent <see cref="T:System.String" /> representation using a specified format and the invariant culture.
            </summary>
            <param name="dateTime">The <see cref="T:System.DateTime" /> value to convert.</param>
            <param name="format">A <see cref="T:System.String" /> value specifying the format that is used to convert this <see cref="T:System.DateTime" />.</param>
            <returns>
            The equivalent <see cref="T:System.String" /> representation of this <see cref="T:System.DateTime" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.DateTimeExtensions.GetFirstDayOfWeek(System.DateTime)">
            <summary>
            Returns a new <see cref="T:System.DateTime" /> representing the first day of the week according to the current culture.
            </summary>
            <param name="dateTime">The original <see cref="T:System.DateTime" /> value.</param>
            <returns>
            A new <see cref="T:System.DateTime" /> object representing the first day of the week according to the current culture.
            </returns>
        </member>
        <member name="M:BytecodeApi.DateTimeExtensions.GetFirstDayOfWeek(System.DateTime,System.Globalization.CultureInfo)">
            <summary>
            Returns a new <see cref="T:System.DateTime" /> representing the first day of the week using specified culture-specific calendar rules.
            </summary>
            <param name="dateTime">The original <see cref="T:System.DateTime" /> value.</param>
            <param name="culture">An object that supplies culture-specific calendar rules.</param>
            <returns>
            A new <see cref="T:System.DateTime" /> object representing the first day of the week according to <paramref name="culture" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.DateTimeExtensions.GetFirstDayOfWeek(System.DateTime,System.DayOfWeek)">
            <summary>
            Returns a new <see cref="T:System.DateTime" /> representing the first day of the week, according to the <paramref name="firstDayOfWeek" /> parameter.
            </summary>
            <param name="dateTime">The original <see cref="T:System.DateTime" /> value.</param>
            <param name="firstDayOfWeek">The first day of week.</param>
            <returns>
            A new <see cref="T:System.DateTime" /> object representing the first day of the week, according to the <paramref name="firstDayOfWeek" /> parameter.
            </returns>
        </member>
        <member name="T:BytecodeApi.DoubleExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Double" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.DoubleExtensions.IsInfinity(System.Double)">
            <summary>
            Returns a <see cref="T:System.Boolean" /> value indicating whether this number evaluates to negative or positive infinity.
            </summary>
            <param name="value">The <see cref="T:System.Double" /> value to test.</param>
            <returns>
            <see langword="true" />, if <paramref name="value" /> evaluates to <see cref="F:System.Double.PositiveInfinity" /> or <see cref="F:System.Double.NegativeInfinity" />.
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.DoubleExtensions.IsNaN(System.Double)">
            <summary>
            Returns a <see cref="T:System.Boolean" /> value indicating whether this number is not a number (<see cref="F:System.Double.NaN" />).
            </summary>
            <param name="value">The <see cref="T:System.Double" /> value to test.</param>
            <returns>
            <see langword="true" />, if <paramref name="value" /> evaluates to <see cref="F:System.Double.NaN" />;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.DoubleExtensions.IsNegativeInfinity(System.Double)">
            <summary>
            Returns a <see cref="T:System.Boolean" /> value indicating whether this number evaluates to negative infinity.
            </summary>
            <param name="value">The <see cref="T:System.Double" /> value to test.</param>
            <returns>
            <see langword="true" />, if <paramref name="value" /> evaluates to <see cref="F:System.Double.NegativeInfinity" />.
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.DoubleExtensions.IsPositiveInfinity(System.Double)">
            <summary>
            Returns a <see cref="T:System.Boolean" /> value indicating whether this number evaluates to positive infinity.
            </summary>
            <param name="value">The <see cref="T:System.Double" /> value to test.</param>
            <returns>
            <see langword="true" />, if <paramref name="value" /> evaluates to <see cref="F:System.Double.PositiveInfinity" />.
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.DoubleExtensions.ToNullIfDefault(System.Double)">
            <summary>
            Returns <see langword="null" />, if this <see cref="T:System.Double" /> value is 0.0, otherwise its original value.
            </summary>
            <param name="value">The <see cref="T:System.Double" /> value to convert.</param>
            <returns>
            <see langword="null" />, if this <see cref="T:System.Double" /> value is 0.0;
            otherwise, its original value.
            </returns>
        </member>
        <member name="T:BytecodeApi.ByteExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Byte" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.ByteExtensions.ToNullIfDefault(System.Byte)">
            <summary>
            Returns <see langword="null" />, if this <see cref="T:System.Byte" /> value is 0, otherwise its original value.
            </summary>
            <param name="value">The <see cref="T:System.Byte" /> value to convert.</param>
            <returns>
            <see langword="null" />, if this <see cref="T:System.Byte" /> value is 0;
            otherwise, its original value.
            </returns>
        </member>
        <member name="T:BytecodeApi.SByteExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.SByte" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.SByteExtensions.ToNullIfDefault(System.SByte)">
            <summary>
            Returns <see langword="null" />, if this <see cref="T:System.SByte" /> value is 0, otherwise its original value.
            </summary>
            <param name="value">The <see cref="T:System.SByte" /> value to convert.</param>
            <returns>
            <see langword="null" />, if this <see cref="T:System.SByte" /> value is 0;
            otherwise, its original value.
            </returns>
        </member>
        <member name="T:BytecodeApi.SingleExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Single" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.SingleExtensions.IsInfinity(System.Single)">
            <summary>
            Returns a <see cref="T:System.Boolean" /> value indicating whether this number evaluates to negative or positive infinity.
            </summary>
            <param name="value">The <see cref="T:System.Single" /> value to test.</param>
            <returns>
            <see langword="true" />, if <paramref name="value" /> evaluates to <see cref="F:System.Single.PositiveInfinity" /> or <see cref="F:System.Single.NegativeInfinity" />.
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.SingleExtensions.IsNaN(System.Single)">
            <summary>
            Returns a <see cref="T:System.Boolean" /> value indicating whether this number is not a number (<see cref="F:System.Single.NaN" />).
            </summary>
            <param name="value">The <see cref="T:System.Single" /> value to test.</param>
            <returns>
            <see langword="true" />, if <paramref name="value" /> evaluates to <see cref="F:System.Single.NaN" />;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.SingleExtensions.IsNegativeInfinity(System.Single)">
            <summary>
            Returns a <see cref="T:System.Boolean" /> value indicating whether this number evaluates to negative infinity.
            </summary>
            <param name="value">The <see cref="T:System.Single" /> value to test.</param>
            <returns>
            <see langword="true" />, if <paramref name="value" /> evaluates to <see cref="F:System.Single.NegativeInfinity" />.
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.SingleExtensions.IsPositiveInfinity(System.Single)">
            <summary>
            Returns a <see cref="T:System.Boolean" /> value indicating whether this number evaluates to positive infinity.
            </summary>
            <param name="value">The <see cref="T:System.Single" /> value to test.</param>
            <returns>
            <see langword="true" />, if <paramref name="value" /> evaluates to <see cref="F:System.Single.PositiveInfinity" />.
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.SingleExtensions.ToNullIfDefault(System.Single)">
            <summary>
            Returns <see langword="null" />, if this <see cref="T:System.Single" /> value is 0.0f, otherwise its original value.
            </summary>
            <param name="value">The <see cref="T:System.Single" /> value to convert.</param>
            <returns>
            <see langword="null" />, if this <see cref="T:System.Single" /> value is 0.0f;
            otherwise, its original value.
            </returns>
        </member>
        <member name="T:BytecodeApi.GuidExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Guid" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.GuidExtensions.ToString(System.Guid,BytecodeApi.GuidFormat)">
            <summary>
            Returns a <see cref="T:System.String" /> representation of the value of this <see cref="T:System.Guid" /> instance, according to the provided format specifier.
            </summary>
            <param name="guid">The unique identifier.</param>
            <param name="format">The <see cref="T:BytecodeApi.GuidFormat" /> that is used as a format specifier.</param>
            <returns>
            The value of this <see cref="T:System.Guid" /> represented as a <see cref="T:System.String" /> in the specified format.
            </returns>
        </member>
        <member name="T:BytecodeApi.UInt16Extensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.UInt16" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.UInt16Extensions.ToNullIfDefault(System.UInt16)">
            <summary>
            Returns <see langword="null" />, if this <see cref="T:System.UInt16" /> value is 0, otherwise its original value.
            </summary>
            <param name="value">The <see cref="T:System.UInt16" /> value to convert.</param>
            <returns>
            <see langword="null" />, if this <see cref="T:System.UInt16" /> value is 0;
            otherwise, its original value.
            </returns>
        </member>
        <member name="T:BytecodeApi.Int16Extensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Int16" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.Int16Extensions.ToNullIfDefault(System.Int16)">
            <summary>
            Returns <see langword="null" />, if this <see cref="T:System.Int16" /> value is 0, otherwise its original value.
            </summary>
            <param name="value">The <see cref="T:System.Int16" /> value to convert.</param>
            <returns>
            <see langword="null" />, if this <see cref="T:System.Int16" /> value is 0;
            otherwise, its original value.
            </returns>
        </member>
        <member name="T:BytecodeApi.UInt32Extensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.UInt32" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.UInt32Extensions.ToNullIfDefault(System.UInt32)">
            <summary>
            Returns <see langword="null" />, if this <see cref="T:System.UInt32" /> value is 0, otherwise its original value.
            </summary>
            <param name="value">The <see cref="T:System.UInt32" /> value to convert.</param>
            <returns>
            <see langword="null" />, if this <see cref="T:System.UInt32" /> value is 0;
            otherwise, its original value.
            </returns>
        </member>
        <member name="T:BytecodeApi.UInt64Extensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.UInt64" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.UInt64Extensions.ToNullIfDefault(System.UInt64)">
            <summary>
            Returns <see langword="null" />, if this <see cref="T:System.UInt64" /> value is 0, otherwise its original value.
            </summary>
            <param name="value">The <see cref="T:System.UInt64" /> value to convert.</param>
            <returns>
            <see langword="null" />, if this <see cref="T:System.UInt64" /> value is 0;
            otherwise, its original value.
            </returns>
        </member>
        <member name="T:BytecodeApi.Int64Extensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Int64" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.Int64Extensions.ToNullIfDefault(System.Int64)">
            <summary>
            Returns <see langword="null" />, if this <see cref="T:System.Int64" /> value is 0L, otherwise its original value.
            </summary>
            <param name="value">The <see cref="T:System.Int64" /> value to convert.</param>
            <returns>
            <see langword="null" />, if this <see cref="T:System.Int64" /> value is 0L;
            otherwise, its original value.
            </returns>
        </member>
        <member name="T:BytecodeApi.Int32Extensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Int32" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.Int32Extensions.ToNullIfDefault(System.Int32)">
            <summary>
            Returns <see langword="null" />, if this <see cref="T:System.Int32" /> value is 0, otherwise its original value.
            </summary>
            <param name="value">The <see cref="T:System.Int32" /> value to convert.</param>
            <returns>
            <see langword="null" />, if this <see cref="T:System.Int32" /> value is 0;
            otherwise, its original value.
            </returns>
        </member>
        <member name="T:BytecodeApi.EnumExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see langword="enum" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.EnumExtensions.GetValues``1">
            <summary>
            Retrieves a strongly typed array of the values of the constants in the specified <see langword="enum" /> value, casted to <typeparamref name="T" />.
            </summary>
            <typeparam name="T">The element type of the returned <see cref="T:System.Array" />.</typeparam>
            <returns>
            A strongly typed array of the values of the constants in the specified <see langword="enum" /> value, casted to <typeparamref name="T" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.EnumExtensions.Parse``1(System.String)">
            <summary>
            Converts the <see cref="T:System.String" /> representation of the name or numeric value of one or more enumerated constants to an equivalent <see cref="T:System.Enum" /> object, casted to <typeparamref name="T" />.
            </summary>
            <typeparam name="T">The type of the returned <see cref="T:System.Enum" /> object.</typeparam>
            <param name="value">A <see cref="T:System.String" /> value representing the name or numeric value of one or more enumerated constants.</param>
            <returns>
            The equivalent <see cref="T:System.Enum" /> object that is represented by the name or numeric value of one or more enumerated constants, identified by <paramref name="value" />, casted to <typeparamref name="T" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.EnumExtensions.GetDescription(System.Enum)">
            <summary>
            Returns the <see cref="P:System.ComponentModel.DescriptionAttribute.Description" /> of this <see langword="enum" /> value. If the attribute was not found, the <see cref="T:System.String" /> representation of this <see langword="enum" /> is returned.
            </summary>
            <param name="value">The <see cref="T:System.Enum" /> value to be processed.</param>
            <returns>
            The <see cref="P:System.ComponentModel.DescriptionAttribute.Description" /> of this <see langword="enum" /> value.
            If the attribute was not found, the <see cref="T:System.String" /> representation of this <see langword="enum" /> is returned.
            </returns>
        </member>
        <member name="M:BytecodeApi.EnumExtensions.GetDescriptionLookup``1">
            <summary>
            Gets a lookup <see cref="T:System.Collections.Generic.Dictionary`2" /> with all <see langword="enum" /> values and descriptions for the specified enum type.
            </summary>
            <typeparam name="T">The type of the <see cref="T:System.Enum" /> to be processed.</typeparam>
            <returns>
            A new <see cref="T:System.Collections.Generic.Dictionary`2" /> with all <see langword="enum" /> values and descriptions for the specified enum type.
            </returns>
        </member>
        <member name="M:BytecodeApi.EnumExtensions.GetEnumValueByDescription``1(System.String)">
            <summary>
            Tries to find an <see langword="enum" /> value by the description found in the <see cref="T:System.ComponentModel.DescriptionAttribute" /> attribute of the <see langword="enum" /> value. If the <see langword="enum" /> value was not found, <see langword="null" /> is returned.
            </summary>
            <typeparam name="T">The element type of the returned <see cref="T:System.Enum" />.</typeparam>
            <param name="description">The description that is searched in the <see cref="P:System.ComponentModel.DescriptionAttribute.Description" /> property.</param>
            <returns>
            The <see langword="enum" /> value, if found;
            otherwise, <see langword="null" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.ExceptionExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Exception" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.ExceptionExtensions.GetFullStackTrace(System.Exception)">
            <summary>
            Gets a <see cref="T:System.String" /> representing the complete stack trace including all inner exceptions for this <see cref="T:System.Exception" /> object.
            </summary>
            <param name="exception">The <see cref="T:System.Exception" /> to evaluate.</param>
            <returns>
            The complete stack trace including all inner exceptions for this <see cref="T:System.Exception" /> object.
            </returns>
        </member>
        <member name="M:BytecodeApi.ExceptionExtensions.GetFullStackTraceItemCount(System.Exception)">
            <summary>
            Gets a <see cref="T:System.Int32" /> value indicating the count of inner exceptions (including this <see cref="T:System.Exception" />).
            For example, an <see cref="T:System.Exception" /> where <see cref="P:System.Exception.InnerException" /> is <see langword="null" /> will return 1.
            </summary>
            <param name="exception">The <see cref="T:System.Exception" /> to evaluate.</param>
            <returns>
            A <see cref="T:System.Int32" /> value indicating the count of inner exceptions (including this <see cref="T:System.Exception" />).
            </returns>
        </member>
        <member name="M:BytecodeApi.ExceptionExtensions.FindInnerException``1(System.Exception)">
            <summary>
            Tries to find the closest parent of this <see cref="T:System.Exception" /> matching the specified type.
            </summary>
            <typeparam name="T">The explicit type of the parent to search for.</typeparam>
            <param name="exception">The <see cref="T:System.Exception" /> to traverse from.</param>
            <returns>
            The closest parent of this <see cref="T:System.Exception" /> matching the specified type, if found;
            otherwise, <see langword="null" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.ExceptionExtensions.AppendStackTrace(System.Exception,System.Diagnostics.StackTrace)">
            <summary>
            Appends the specified <see cref="T:System.Diagnostics.StackTrace" /> to this <see cref="T:System.Exception" />.
            </summary>
            <param name="exception">The <see cref="T:System.Exception" /> to append <paramref name="stackTrace" /> to.</param>
            <param name="stackTrace">The <see cref="T:System.Diagnostics.StackTrace" /> to append to <paramref name="exception" />.</param>
        </member>
        <member name="T:BytecodeApi.FileInfoExtension">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.IO.FileInfo" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.FileInfoExtension.ReadAllBytes(System.IO.FileInfo)">
            <summary>
            Opens the file, reads the contents of the file into a <see cref="T:System.Byte" />[], and then closes the file.
            </summary>
            <param name="file">The <see cref="T:System.IO.FileInfo" /> to process.</param>
            <returns>
            A new <see cref="T:System.Byte" />[] containing the contents of the file.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileInfoExtension.ReadAllLines(System.IO.FileInfo)">
            <summary>
            Opens the file, reads all lines of the file into a <see cref="T:System.String" />[], and then closes the file.
            </summary>
            <param name="file">The <see cref="T:System.IO.FileInfo" /> to process.</param>
            <returns>
            A new <see cref="T:System.String" />[] containing all lines of the file.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileInfoExtension.ReadAllLines(System.IO.FileInfo,System.Text.Encoding)">
            <summary>
            Opens the file, reads all lines of the file with the specified encoding into a <see cref="T:System.String" />[], and then closes the file.
            </summary>
            <param name="file">The <see cref="T:System.IO.FileInfo" /> to process.</param>
            <param name="encoding">The encoding applied to the contents of the file.</param>
            <returns>
            A new <see cref="T:System.String" />[] containing all lines of the file.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileInfoExtension.ReadAllText(System.IO.FileInfo)">
            <summary>
            Opens a text file, reads all lines of the file into a <see cref="T:System.String" />, and then closes the file.
            </summary>
            <param name="file">The <see cref="T:System.IO.FileInfo" /> to process.</param>
            <returns>
            A <see cref="T:System.String" /> containing all lines of the file.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileInfoExtension.ReadAllText(System.IO.FileInfo,System.Text.Encoding)">
            <summary>
            Opens a text file, reads all lines of the file with the specified encoding into a <see cref="T:System.String" />, and then closes the file.
            </summary>
            <param name="file">The <see cref="T:System.IO.FileInfo" /> to process.</param>
            <param name="encoding">The encoding applied to the contents of the file.</param>
            <returns>
            A <see cref="T:System.String" /> containing all lines of the file.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileInfoExtension.SendToRecycleBin(System.IO.FileInfo)">
            <summary>
            Sends this file to the recycle bin.
            </summary>
            <param name="file">The <see cref="T:System.IO.FileInfo" /> to process.</param>
        </member>
        <member name="M:BytecodeApi.FileInfoExtension.GetAlternateStreamNames(System.IO.FileInfo)">
            <summary>
            Returns an enumerable collection of alternate data streams names of this file.
            </summary>
            <param name="file">The <see cref="T:System.IO.FileInfo" /> to process.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> with the names of all alternate data streams of this file.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileInfoExtension.Unblock(System.IO.FileInfo)">
            <summary>
            Deletes the :Zone.Identifier alternate data stream for this file.
            </summary>
            <param name="file">The <see cref="T:System.IO.FileInfo" /> to process.</param>
            <returns>
            <see langword="true" />, if the :Zone.Identifier alternate data stream was present and could be deleted;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileInfoExtension.GetIcon(System.IO.FileInfo,System.Boolean)">
            <summary>
            Extracts the icon of this file. Returns <see langword="null" />, if extraction failed.
            </summary>
            <param name="file">The <see cref="T:System.IO.FileInfo" /> to process.</param>
            <param name="large"><see langword="true" /> to extract the large icon; otherwise, <see langword="false" />.</param>
            <returns>
            A new <see cref="T:System.Drawing.Icon" /> that has been extracted from this file and <see langword="null" />, if extraction failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileInfoExtension.GetCaseSensitiveName(System.IO.FileInfo)">
            <summary>
            Gets the name of this file with character casing according to the original and existing file.
            </summary>
            <param name="file">The <see cref="T:System.IO.FileInfo" /> to process.</param>
            <returns>
            A <see cref="T:System.String" /> that contains the actual name of this file.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileInfoExtension.GetCaseSensitiveFullName(System.IO.FileInfo)">
            <summary>
            Gets the full path of this file with character casing according to the original and existing file.
            </summary>
            <param name="file">The <see cref="T:System.IO.FileInfo" /> to process.</param>
            <returns>
            A <see cref="T:System.String" /> that contains the actual full path of this file.
            </returns>
        </member>
        <member name="T:BytecodeApi.DirectoryInfoExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.IO.DirectoryInfo" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.DirectoryInfoExtensions.SendToRecycleBin(System.IO.DirectoryInfo)">
            <summary>
            Sends this directory and all of its contents to recycle bin.
            </summary>
            <param name="directory">The <see cref="T:System.IO.DirectoryInfo" /> to process.</param>
        </member>
        <member name="M:BytecodeApi.DirectoryInfoExtensions.GetCaseSensitiveName(System.IO.DirectoryInfo)">
            <summary>
            Gets the name of this directory with character casing according to the original and existing directory.
            </summary>
            <param name="directory">The <see cref="T:System.IO.DirectoryInfo" /> to process.</param>
            <returns>
            A <see cref="T:System.String" /> that contains the actual name of this directory.
            </returns>
        </member>
        <member name="M:BytecodeApi.DirectoryInfoExtensions.GetCaseSensitiveFullName(System.IO.DirectoryInfo)">
            <summary>
            Gets the full path of this directory with character casing according to the original and existing directory.
            </summary>
            <param name="directory">The <see cref="T:System.IO.DirectoryInfo" /> to process.</param>
            <returns>
            A <see cref="T:System.String" /> that contains the actual full path of this directory.
            </returns>
        </member>
        <member name="M:BytecodeApi.DirectoryInfoExtensions.ToUncPath(System.IO.DirectoryInfo)">
            <summary>
            Gets the UNC path of this directory. If the path cannot be converted to a UNC path, the original path is returned.
            </summary>
            <param name="directory">The <see cref="T:System.IO.DirectoryInfo" /> to process.</param>
            <returns>
            The UNC path of this directory, if conversion is possible;
            otherwise, the original path.
            </returns>
        </member>
        <member name="M:BytecodeApi.DirectoryInfoExtensions.ComputeDirectorySize(System.IO.DirectoryInfo)">
            <summary>
            Computes the size of this directory including all of its subdirectories.
            </summary>
            <param name="directory">The <see cref="T:System.IO.DirectoryInfo" /> to process.</param>
            <returns>
            The total size in bytes of this directory.
            </returns>
        </member>
        <member name="M:BytecodeApi.DirectoryInfoExtensions.CopyTo(System.IO.DirectoryInfo,System.String)">
            <summary>
            Copies this directory to a new location including all files and subdirectories recursively.
            </summary>
            <param name="directory">The <see cref="T:System.IO.DirectoryInfo" /> to process.</param>
            <param name="destDirectoryName">The path of the new location including the top directory name.</param>
        </member>
        <member name="M:BytecodeApi.DirectoryInfoExtensions.CopyTo(System.IO.DirectoryInfo,System.String,System.Boolean)">
            <summary>
            Copies this directory to a new location including all files and subdirectories recursively.
            </summary>
            <param name="directory">The <see cref="T:System.IO.DirectoryInfo" /> to process.</param>
            <param name="destDirectoryName">The path of the new location including the top directory name.</param>
            <param name="overwrite"><see langword="true" /> to overwrite contents. Existing files in the destination directory that do not exist in the source directory are not deleted.</param>
        </member>
        <member name="M:BytecodeApi.DirectoryInfoExtensions.DeleteContents(System.IO.DirectoryInfo)">
            <summary>
            Deletes all files and directories from this directory.
            </summary>
            <param name="directory">The <see cref="T:System.IO.DirectoryInfo" /> to process.</param>
        </member>
        <member name="M:BytecodeApi.DirectoryInfoExtensions.DeleteContents(System.IO.DirectoryInfo,System.Boolean)">
            <summary>
            Deletes all files and directories from this directory.
            </summary>
            <param name="directory">The <see cref="T:System.IO.DirectoryInfo" /> to process.</param>
            <param name="create"><see langword="true" /> to create the directory, if it does not exist.</param>
        </member>
        <member name="T:BytecodeApi.FileSystemInfoExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.IO.FileSystemInfo" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.FileSystemInfoExtensions.ShowPropertiesDialog(System.IO.FileSystemInfo)">
            <summary>
            Shows the properties dialog for this file or directory.
            </summary>
            <param name="file">The <see cref="T:System.IO.FileSystemInfo" /> representing a file or directory to show the properties dialog from.</param>
        </member>
        <member name="T:BytecodeApi.IEnumerableExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for querying data structures that implement <see cref="T:System.Collections.IEnumerable" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.IEnumerableExtensions.AllValuesEqual``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns <see langword="true" />, if all values of <paramref name="source" /> are equal or if the <see cref="T:System.Collections.Generic.IEnumerable`1" /> has no elements.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> to check.</param>
            <returns>
            <see langword="true" />, if all values of <paramref name="source" /> are equal or if the <see cref="T:System.Collections.Generic.IEnumerable`1" /> has no elements;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IEnumerableExtensions.None``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Determines whether a sequence contains no elements.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> to check for emptiness.</param>
            <returns>
            <see langword="true" />, if the source sequence is empty;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IEnumerableExtensions.None``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
            <summary>
            Determines whether a sequence that satisfies a specified condition contains no elements.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> to check for emptiness.</param>
            <param name="predicate">A function to test each element for a condition.</param>
            <returns>
            <see langword="true" />, if the source sequence that satisfies a specified condition is empty;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IEnumerableExtensions.ValueOrDefault``2(System.Collections.Generic.IDictionary{``0,``1},``0)">
            <summary>
            Gets the value associated with the specified key from this <see cref="T:System.Collections.Generic.IDictionary`2" />, or returns a default value if it was not found.
            </summary>
            <typeparam name="TKey">The type of the key of this <see cref="T:System.Collections.Generic.IDictionary`2" />.</typeparam>
            <typeparam name="TValue">The type of the value of this <see cref="T:System.Collections.Generic.IDictionary`2" />.</typeparam>
            <param name="dictionary">The <see cref="T:System.Collections.Generic.IDictionary`2" /> to search.</param>
            <param name="key">The key of the value to get.</param>
            <returns>
            The value associated with the specified key, or a default value if it was not found.
            </returns>
        </member>
        <member name="M:BytecodeApi.IEnumerableExtensions.ValueOrDefault``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)">
            <summary>
            Gets the value associated with the specified key from this <see cref="T:System.Collections.Generic.IDictionary`2" />, or returns a default value if it was not found.
            </summary>
            <typeparam name="TKey">The type of the key of this <see cref="T:System.Collections.Generic.IDictionary`2" />.</typeparam>
            <typeparam name="TValue">The type of the value of this <see cref="T:System.Collections.Generic.IDictionary`2" />.</typeparam>
            <param name="dictionary">The <see cref="T:System.Collections.Generic.IDictionary`2" /> to search.</param>
            <param name="key">The key of the value to get.</param>
            <param name="defaultValue">The value that is used if the key was not found.</param>
            <returns>
            The value associated with the specified key, or a default value if it was not found.
            </returns>
        </member>
        <member name="M:BytecodeApi.IEnumerableExtensions.ToIndeterminate(System.Collections.Generic.IEnumerable{System.Boolean})">
            <summary>
            Converts all <see cref="T:System.Boolean" /> values to a nullable <see cref="T:System.Boolean" /> value representing an indeterminate indicator.
            </summary>
            <param name="values">A collection of <see cref="T:System.Boolean" /> of values to be processed.</param>
            <returns>
            <see langword="true" />, if all values of <paramref name="values" /> are equal to <see langword="true" />;
            <see langword="false" />, if all values of <paramref name="values" /> are equal to <see langword="false" />;
            otherwise, <see langword="null" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IEnumerableExtensions.ToIndeterminate(System.Collections.Generic.IEnumerable{System.Nullable{System.Boolean}})">
            <summary>
            Converts all <see cref="T:System.Boolean" /> values to a nullable <see cref="T:System.Boolean" /> value representing an indeterminate indicator.
            </summary>
            <param name="values">A collection of <see cref="T:System.Boolean" />? of values to be processed.</param>
            <returns>
            <see langword="true" />, if all values of <paramref name="values" /> are equal to <see langword="true" />;
            <see langword="false" />, if all values of <paramref name="values" /> are equal to <see langword="false" />;
            otherwise, <see langword="null" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IEnumerableExtensions.Sum(System.Collections.Generic.IEnumerable{System.TimeSpan})">
            <summary>
            Computes the sum of the sequence of <see cref="T:System.TimeSpan" /> values.
            </summary>
            <param name="source">A sequence of <see cref="T:System.TimeSpan" /> values that are used to calculate a sum.</param>
            <returns>
            A new <see cref="T:System.TimeSpan" /> with the sum of the projected values.
            </returns>
        </member>
        <member name="M:BytecodeApi.IEnumerableExtensions.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.TimeSpan}})">
            <summary>
            Computes the sum of the sequence of <see cref="T:System.TimeSpan" /> values. Values equal to <see langword="null" /> are excluded from the calculation and treated as <see cref="F:System.TimeSpan.Zero" />.
            </summary>
            <param name="source">A sequence of <see cref="T:System.TimeSpan" /> values that are used to calculate a sum.</param>
            <returns>
            A new <see cref="T:System.TimeSpan" /> with the sum of the projected values.
            </returns>
        </member>
        <member name="M:BytecodeApi.IEnumerableExtensions.FirstOrException``2(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns the first element of a sequence or throws an <see cref="T:System.Exception" /> of the type <typeparamref name="TException" />, if <paramref name="source" /> does not have any elements.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <typeparam name="TException">The type of the <see cref="T:System.Exception" /> that is instantiated and thrown.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> to return an element from.</param>
            <returns>
            The first element of a sequence, if <paramref name="source" /> has any;
            otherwise, instantiates and throws an <see cref="T:System.Exception" /> of the type <typeparamref name="TException" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IEnumerableExtensions.FirstOrException``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
            <summary>
            Returns the first element of a sequence that satisfies a specified condition or throws an <see cref="T:System.Exception" /> of the type <typeparamref name="TException" />, if no such element is found.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <typeparam name="TException">The type of the <see cref="T:System.Exception" /> that is instantiated and thrown.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> to return an element from.</param>
            <param name="predicate">A function to test each element for a condition.</param>
            <returns>
            The first element of a sequence that satisfies a specified condition, if any item satisfied;
            otherwise, instantiates and throws an <see cref="T:System.Exception" /> of the type <typeparamref name="TException" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IEnumerableExtensions.AsString(System.Collections.Generic.IEnumerable{System.Char})">
            <summary>
            Creates a <see cref="T:System.String" /> from this collection of characters.
            </summary>
            <param name="source">The collection of characters to create the <see cref="T:System.String" /> from.</param>
            <returns>
            A new <see cref="T:System.String" />, created from this collection of characters.
            </returns>
        </member>
        <member name="M:BytecodeApi.IEnumerableExtensions.AsString(System.Char[])">
            <summary>
            Creates a <see cref="T:System.String" /> from this <see cref="T:System.Char" />[].
            </summary>
            <param name="source">The <see cref="T:System.Char" />[] to create the <see cref="T:System.String" /> from.</param>
            <returns>
            A new <see cref="T:System.String" />, created from this <see cref="T:System.Char" />[].
            </returns>
        </member>
        <member name="M:BytecodeApi.IEnumerableExtensions.AsString(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Creates a <see cref="T:System.String" /> from this collection of objects. All objects in <paramref name="source" /> are converted to <see cref="T:System.String" /> by calling <see cref="M:System.Object.ToString" />. Then, the resulting strings are concatenated.
            </summary>
            <param name="source">The collection of objects to concatenate.</param>
            <returns>
            A new <see cref="T:System.String" />, created from this collection of objects, where <see cref="M:System.Object.ToString" /> was called on each object prior to concatenation.
            </returns>
        </member>
        <member name="M:BytecodeApi.IEnumerableExtensions.AsString(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a <see cref="T:System.String" /> from this collection of strings, by concatenating all values in <paramref name="source" />.
            </summary>
            <param name="source">The collection strings to concatenate.</param>
            <returns>
            A new <see cref="T:System.String" />, created from this collection of strings, where all values in <paramref name="source" /> are concatenated.
            </returns>
        </member>
        <member name="M:BytecodeApi.IEnumerableExtensions.AsString(System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Creates a <see cref="T:System.String" /> from this collection of strings, by concatenating all values in <paramref name="source" /> using the specified separator.
            </summary>
            <param name="source">The collection strings to concatenate.</param>
            <param name="separator">A <see cref="T:System.String" /> specifying the separator to concatenate the values in <paramref name="source" /> with, or <see langword="null" /> to not use a separator.</param>
            <returns>
            A new <see cref="T:System.String" />, created from this collection of strings, where all values in <paramref name="source" /> are concatenated using the specified separator.
            </returns>
        </member>
        <member name="M:BytecodeApi.IEnumerableExtensions.AsStrings(System.Collections.IEnumerable)">
            <summary>
            Converts a sequence of values to their <see cref="T:System.String" /> representation by calling <see cref="M:System.Object.ToString" /> on each element.
            </summary>
            <param name="source">A sequence of values to convert to <see cref="T:System.String" />.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains the converted elements from the input sequence.
            </returns>
        </member>
        <member name="M:BytecodeApi.IEnumerableExtensions.AsMultilineString(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a multiline <see cref="T:System.String" /> from this collection of strings, by concatenating all values with a CRLF.
            </summary>
            <param name="array">The <see cref="T:System.String" />[] to concatenate.</param>
            <returns>
            A new <see cref="T:System.String" /> that represents this <see cref="T:System.String" /> collection as multiline text, where each element is concatenated with a CRLF.
            </returns>
        </member>
        <member name="M:BytecodeApi.IEnumerableExtensions.AsMultilineString(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Creates a multiline <see cref="T:System.String" /> from this collection of strings, by concatenating all values with a CRLF.
            </summary>
            <param name="array">The <see cref="T:System.String" />[] to concatenate.</param>
            <param name="lastLine"><see langword="true" /> to add an additional CRLF at the end.</param>
            <returns>
            A new <see cref="T:System.String" /> that represents this <see cref="T:System.String" /> collection as multiline text, where each element is concatenated with a CRLF.
            </returns>
        </member>
        <member name="M:BytecodeApi.IEnumerableExtensions.SkipLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Bypasses a specified number of elements at the end of a sequence and then returns the preceding elements.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> to return an element from.</param>
            <param name="count">The number of elements to remove from the end of <paramref name="source" /> before returning the preceding elements.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains the preceding elements that occur before the removed elements in the input sequence.
            </returns>
        </member>
        <member name="M:BytecodeApi.IEnumerableExtensions.ExceptNull``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Filters a sequence of values and returns only values which are not <see langword="null" />.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> to return elements from.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains elements from the input sequence that are not <see langword="null" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IEnumerableExtensions.DistinctBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Returns all distinct elements of a sequence according to a specified key selector function.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <typeparam name="TKey">The type of the key returned by keySelector.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> to return elements from.</param>
            <param name="keySelector">A <see cref="T:System.Func`2" /> to extract the key for each element.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerator`1" /> with all distinct elements of <paramref name="source" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IEnumerableExtensions.DistinctBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
            <summary>
            Returns all distinct elements of a sequence according to a specified key selector function by using a specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <typeparam name="TKey">The type of the key returned by keySelector.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> to return elements from.</param>
            <param name="keySelector">A <see cref="T:System.Func`2" /> to extract the key for each element.</param>
            <param name="comparer">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare the elements.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerator`1" /> with all distinct elements of <paramref name="source" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IEnumerableExtensions.Concat``1(System.Collections.Generic.IEnumerable{``0},``0)">
            <summary>
            Concatenates a sequence and one element, where the single element is put after all elements of this sequence.
            </summary>
            <typeparam name="TSource">The type of the elements to concatenate.</typeparam>
            <param name="first">The first sequence to concatenate.</param>
            <param name="second">The element to concatenate to the first sequence.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that contains the concatenated elements of the source
            </returns>
        </member>
        <member name="M:BytecodeApi.IEnumerableExtensions.Union``1(System.Collections.Generic.IEnumerable{``0},``0)">
            <summary>
            Produces the set union of a sequence and one element.
            </summary>
            <typeparam name="TSource">The type of the elements of the input sequence and the second element.</typeparam>
            <param name="first">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose distinct elements form the first set for the union.</param>
            <param name="second">The second element, which forms the second set for the union.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains the elements from the input sequence and the second element, excluding duplicates.
            </returns>
        </member>
        <member name="M:BytecodeApi.IEnumerableExtensions.Union``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Produces the set union of a sequence and one element by using a specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.
            </summary>
            <typeparam name="TSource">The type of the elements of the input sequence and the second element.</typeparam>
            <param name="first">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose distinct elements form the first set for the union.</param>
            <param name="second">The second element, which forms the second set for the union.</param>
            <param name="comparer">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare the elements.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains the elements from the input sequence and the second element, excluding duplicates.
            </returns>
        </member>
        <member name="M:BytecodeApi.IEnumerableExtensions.Except``1(System.Collections.Generic.IEnumerable{``0},``0)">
            <summary>
            Produces the set difference of a sequence and one element.
            </summary>
            <typeparam name="TSource">The type of the elements of the input sequence and the second element.</typeparam>
            <param name="first">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements that are not equal to <paramref name="second" /> will be returned.</param>
            <param name="second">The second element, which will be removed from the returned sequence, if it also occurs in the first sequence.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains the set difference of the elements from the input sequence and the second element.
            </returns>
        </member>
        <member name="M:BytecodeApi.IEnumerableExtensions.Except``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Produces the set difference of a sequence and one element by using the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.
            </summary>
            <typeparam name="TSource">The type of the elements of the input sequence and the second element.</typeparam>
            <param name="first">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements that are not equal to <paramref name="second" /> will be returned.</param>
            <param name="second">The second element, which will be removed from the returned sequence, if it also occurs in the first sequence.</param>
            <param name="comparer">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare the elements.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains the set difference of the elements from the input sequence and the second element.
            </returns>
        </member>
        <member name="M:BytecodeApi.IEnumerableExtensions.Chunk``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Splits up a sequence into chunks with the specified size. Each chunk is an <see cref="T:System.Collections.Generic.IEnumerable`1" />, containing a maximum number of elements according to <paramref name="chunkSize" />. The last chunk may contain less elements than specified <paramref name="chunkSize" />.
            </summary>
            <typeparam name="TSource">The type of the elements to chunk.</typeparam>
            <param name="source">A sequence of values to chunk.</param>
            <param name="chunkSize">The chunk size. The last chunk may contain less elements than specified <paramref name="chunkSize" />. All previous chunks contain exactly the amount of chunks specified in <paramref name="chunkSize" />.</param>
            <returns>
            An <see cref="T:System.Collections.IEnumerable" /> with an <see cref="T:System.Collections.IEnumerable" /> for each returned chunk.
            </returns>
        </member>
        <member name="M:BytecodeApi.IEnumerableExtensions.Sort``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Sorts the elements of a sequence in ascending order.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to sort.</param>
            <returns>
            An <see cref="T:System.Linq.IOrderedEnumerable`1" /> whose elements are sorted.
            </returns>
        </member>
        <member name="M:BytecodeApi.IEnumerableExtensions.Sort``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})">
            <summary>
            Sorts the elements of a sequence in ascending order using a specified comparer.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to sort.</param>
            <param name="comparer">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare the elements.</param>
            <returns>
            An <see cref="T:System.Linq.IOrderedEnumerable`1" /> whose elements are sorted.
            </returns>
        </member>
        <member name="M:BytecodeApi.IEnumerableExtensions.SortDescending``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Sorts the elements of a sequence in descending order.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to sort.</param>
            <returns>
            An <see cref="T:System.Linq.IOrderedEnumerable`1" /> whose elements are sorted in descending order.
            </returns>
        </member>
        <member name="M:BytecodeApi.IEnumerableExtensions.SortDescending``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})">
            <summary>
            Sorts the elements of a sequence in descending order using a specified comparer.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to sort.</param>
            <param name="comparer">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare the elements.</param>
            <returns>
            An <see cref="T:System.Linq.IOrderedEnumerable`1" /> whose elements are sorted in descending order.
            </returns>
        </member>
        <member name="M:BytecodeApi.IEnumerableExtensions.SortRandom``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Randomized the order of the elements of a sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">A sequence of values to sort.</param>
            <returns>
            An <see cref="T:System.Linq.IOrderedEnumerable`1" /> whose elements are sorted in randomized order.
            </returns>
        </member>
        <member name="M:BytecodeApi.IEnumerableExtensions.AddRange``1(System.Collections.Generic.ICollection{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Adds the elements of the specified collection to the end of <paramref name="source" />.
            </summary>
            <typeparam name="TSource">The type of the elements to add.</typeparam>
            <param name="source">The <see cref="T:System.Collections.Generic.ICollection`1" /> to add the elements from <paramref name="collection" /> to.</param>
            <param name="collection">The collection of elements to be addded to <paramref name="source" />.</param>
        </member>
        <member name="M:BytecodeApi.IEnumerableExtensions.RemoveAll``1(System.Collections.Generic.ICollection{``0},System.Func{``0,System.Boolean})">
            <summary>
            Removes all elements that satisfy a specified condition.
            </summary>
            <typeparam name="TSource">The type of the elements to remove.</typeparam>
            <param name="source">The <see cref="T:System.Collections.Generic.ICollection`1" /> to remove elements from.</param>
            <param name="predicate">A function to test each element for a condition.</param>
        </member>
        <member name="M:BytecodeApi.IEnumerableExtensions.RemoveRange``1(System.Collections.Generic.ICollection{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Removes all elements that occur in the specified collection.
            </summary>
            <typeparam name="TSource">The type of the elements to remove.</typeparam>
            <param name="source">The <see cref="T:System.Collections.Generic.ICollection`1" /> to remove elements from.</param>
            <param name="collection">The <see cref="T:System.Collections.Generic.ICollection`1" /> with all elements to remove from <paramref name="source" />.</param>
        </member>
        <member name="M:BytecodeApi.IEnumerableExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Performs the specified <see cref="T:System.Action" /> on each element of this <see cref="T:System.Collections.Generic.IEnumerable`1" />.
            </summary>
            <typeparam name="TSource">The type of the elements to process.</typeparam>
            <param name="source">A sequence of values to process.</param>
            <param name="action">The action to perform on each element of <paramref name="source" />.</param>
        </member>
        <member name="T:BytecodeApi.ImageExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with image objects, such as <see cref="T:System.Drawing.Image" /> and <see cref="T:System.Drawing.Icon" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.ImageExtensions.Save(System.Drawing.Image,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Saves this <see cref="T:System.Drawing.Image" /> in the specified format and returns a <see cref="T:System.Byte" />[] representation of the <see cref="T:System.Drawing.Image" />.
            </summary>
            <param name="image">The <see cref="T:System.Drawing.Image" /> to save.</param>
            <param name="format">An <see cref="T:System.Drawing.Imaging.ImageFormat" /> that specifies the format of the saved image.</param>
            <returns>
            A new <see cref="T:System.Byte" />[] object representing this <see cref="T:System.Drawing.Image" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.ImageExtensions.Save(System.Drawing.Image,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)">
            <summary>
            Saves this <see cref="T:System.Drawing.Image" /> with the specified encoder and image encoder parameters and returns a <see cref="T:System.Byte" />[] representation of the <see cref="T:System.Drawing.Image" />.
            </summary>
            <param name="image">The <see cref="T:System.Drawing.Image" /> to save.</param>
            <param name="encoder">The <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> for this <see cref="T:System.Drawing.Image" />.</param>
            <param name="encoderParams">An <see cref="T:System.Drawing.Imaging.EncoderParameters" /> that specifies parameters used by the image encoder.</param>
            <returns>
            A new <see cref="T:System.Byte" />[] object representing this <see cref="T:System.Drawing.Image" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.ImageExtensions.SaveJpeg(System.Drawing.Image)">
            <summary>
            Saves this <see cref="T:System.Drawing.Image" /> in JPEG format with 95 % quality and returns a <see cref="T:System.Byte" />[] representation of the <see cref="T:System.Drawing.Image" />.
            </summary>
            <param name="image">The <see cref="T:System.Drawing.Image" /> to save.</param>
            <returns>
            A new <see cref="T:System.Byte" />[] object representing this <see cref="T:System.Drawing.Image" />, saved in JPEG format with 95 % quality.
            </returns>
        </member>
        <member name="M:BytecodeApi.ImageExtensions.SaveJpeg(System.Drawing.Image,System.Int32)">
            <summary>
            Saves this <see cref="T:System.Drawing.Image" /> in JPEG format with the specified quality and returns a <see cref="T:System.Byte" />[] representation of the <see cref="T:System.Drawing.Image" />.
            </summary>
            <param name="image">The <see cref="T:System.Drawing.Image" /> to save.</param>
            <param name="quality">The quality to be used for JPEG encoding.</param>
            <returns>
            A new <see cref="T:System.Byte" />[] object representing this <see cref="T:System.Drawing.Image" />, saved in JPEG format with the specified quality.
            </returns>
        </member>
        <member name="M:BytecodeApi.ImageExtensions.SaveJpeg(System.Drawing.Image,System.String)">
            <summary>
            Saves this <see cref="T:System.Drawing.Image" /> in JPEG format with 95 % quality to the specified file.
            </summary>
            <param name="image">The <see cref="T:System.Drawing.Image" /> to save.</param>
            <param name="path">A <see cref="T:System.String" /> that contains the name of the file to which to save this <see cref="T:System.Drawing.Image" />.</param>
        </member>
        <member name="M:BytecodeApi.ImageExtensions.SaveJpeg(System.Drawing.Image,System.String,System.Int32)">
            <summary>
            Saves this <see cref="T:System.Drawing.Image" /> in JPEG format with the specified quality to the specified file.
            </summary>
            <param name="image">The <see cref="T:System.Drawing.Image" /> to save.</param>
            <param name="path">A <see cref="T:System.String" /> that contains the name of the file to which to save this <see cref="T:System.Drawing.Image" />.</param>
            <param name="quality">The quality to be used for JPEG encoding.</param>
        </member>
        <member name="M:BytecodeApi.ImageExtensions.Save(System.Drawing.Icon)">
            <summary>
            Saves this <see cref="T:System.Drawing.Icon" /> and returns a <see cref="T:System.Byte" />[] representation of the <see cref="T:System.Drawing.Image" />.
            </summary>
            <param name="icon">The <see cref="T:System.Drawing.Icon" /> to save.</param>
            <returns>
            A new <see cref="T:System.Byte" />[] object representing this <see cref="T:System.Drawing.Icon" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.ImageExtensions.Save(System.Drawing.Icon,System.String)">
            <summary>
            Saves this <see cref="T:System.Drawing.Icon" /> to the specified file.
            </summary>
            <param name="icon">The <see cref="T:System.Drawing.Icon" /> to save.</param>
            <param name="path">A <see cref="T:System.String" /> that contains the name of the file to which to save this <see cref="T:System.Drawing.Icon" />.</param>
        </member>
        <member name="M:BytecodeApi.ImageExtensions.ToBitmapSource(System.Drawing.Bitmap)">
            <summary>
            Returns a managed <see cref="T:System.Windows.Media.Imaging.BitmapSource" />, based on the provided <see cref="T:System.Drawing.Bitmap" />.
            </summary>
            <param name="bitmap">The <see cref="T:System.Drawing.Bitmap" /> to convert.</param>
            <returns>
            The created <see cref="T:System.Windows.Media.Imaging.BitmapSource" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.ImageExtensions.ToBitmapSource(System.Drawing.Icon)">
            <summary>
            Returns a managed <see cref="T:System.Windows.Media.Imaging.BitmapSource" />, based on the provided <see cref="T:System.Drawing.Icon" />.
            </summary>
            <param name="icon">The <see cref="T:System.Drawing.Icon" /> to convert.</param>
            <returns>
            The created <see cref="T:System.Windows.Media.Imaging.BitmapSource" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.DecimalExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Decimal" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.DecimalExtensions.ToNullIfDefault(System.Decimal)">
            <summary>
            Returns <see langword="null" />, if this <see cref="T:System.Decimal" /> value is 0.0m, otherwise its original value.
            </summary>
            <param name="value">The <see cref="T:System.Decimal" /> value to convert.</param>
            <returns>
            <see langword="null" />, if this <see cref="T:System.Decimal" /> value is 0.0m;
            otherwise, its original value.
            </returns>
        </member>
        <member name="T:BytecodeApi.IQueryableExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for querying data structures that implement <see cref="T:System.Linq.IQueryable" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.IQueryableExtensions.FirstOrException``2(System.Linq.IQueryable{``0})">
            <summary>
            Returns the first element of a sequence or throws an <see cref="T:System.Exception" /> of the type <typeparamref name="TException" />, if <paramref name="source" /> does not have any elements.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <typeparam name="TException">The type of the <see cref="T:System.Exception" /> that is instantiated and thrown.</typeparam>
            <param name="source">An <see cref="T:System.Linq.IQueryable`1" /> to return an element from.</param>
            <returns>
            The first element of a sequence, if <paramref name="source" /> has any;
            otherwise, instantiates and throws an <see cref="T:System.Exception" /> of the type <typeparamref name="TException" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IQueryableExtensions.FirstOrException``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Returns the first element of a sequence that satisfies a specified condition or throws an <see cref="T:System.Exception" /> of the type <typeparamref name="TException" />, if no such element is found.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <typeparam name="TException">The type of the <see cref="T:System.Exception" /> that is instantiated and thrown.</typeparam>
            <param name="source">An <see cref="T:System.Linq.IQueryable`1" /> to return an element from.</param>
            <param name="predicate">A function to test each element for a condition.</param>
            <returns>
            The first element of a sequence that satisfies a specified condition, if any item satisfied;
            otherwise, instantiates and throws an <see cref="T:System.Exception" /> of the type <typeparamref name="TException" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.RandomNumberGeneratorExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Security.Cryptography.RandomNumberGenerator" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.RandomNumberGeneratorExtensions.GetBytes(System.Security.Cryptography.RandomNumberGenerator,System.Int32)">
            <summary>
            Creates a <see cref="T:System.Byte" />[] with a specified length and fills all elements with a cryptographically strong random sequence of bytes.
            </summary>
            <param name="randomNumberGenerator">The <see cref="T:System.Security.Cryptography.RandomNumberGenerator" /> object to be used for random number generation.</param>
            <param name="count">The size of the returned <see cref="T:System.Byte" />[].</param>
            <returns>
            A new <see cref="T:System.Byte" />[] with a specified length, filled with a cryptographically strong random sequence of bytes.
            </returns>
        </member>
        <member name="M:BytecodeApi.RandomNumberGeneratorExtensions.GetNonZeroBytes(System.Security.Cryptography.RandomNumberGenerator,System.Int32)">
            <summary>
            Creates a <see cref="T:System.Byte" />[] with a specified length and fills all elements with a cryptographically strong random sequence of nonzero bytes.
            </summary>
            <param name="randomNumberGenerator">The <see cref="T:System.Security.Cryptography.RandomNumberGenerator" /> object to be used for random number generation.</param>
            <param name="count">The size of the returned <see cref="T:System.Byte" />[].</param>
            <returns>
            A new <see cref="T:System.Byte" />[] with a specified length, filled with a cryptographically strong random sequence of nonzero bytes.
            </returns>
        </member>
        <member name="M:BytecodeApi.RandomNumberGeneratorExtensions.GetBoolean(System.Security.Cryptography.RandomNumberGenerator)">
            <summary>
            Generates a cryptographically strong random <see cref="T:System.Boolean" /> value that is either <see langword="false" /> or <see langword="true" />.
            </summary>
            <param name="randomNumberGenerator">The <see cref="T:System.Security.Cryptography.RandomNumberGenerator" /> object to be used for random number generation.</param>
            <returns>
            A cryptographically strong random <see cref="T:System.Boolean" /> value that is either <see langword="false" /> or <see langword="true" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.RandomNumberGeneratorExtensions.GetByte(System.Security.Cryptography.RandomNumberGenerator)">
            <summary>
            Generates a cryptographically strong random <see cref="T:System.Byte" /> value that is greater than or equal to 0, and less than or equal to <see cref="F:System.Byte.MaxValue" />.
            </summary>
            <param name="randomNumberGenerator">The <see cref="T:System.Security.Cryptography.RandomNumberGenerator" /> object to be used for random number generation.</param>
            <returns>
            A cryptographically strong random <see cref="T:System.Byte" /> value that is greater than or equal to 0, and less than or equal to <see cref="F:System.Byte.MaxValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.RandomNumberGeneratorExtensions.GetNonZeroByte(System.Security.Cryptography.RandomNumberGenerator)">
            <summary>
            Generates a cryptographically strong random nonzero <see cref="T:System.Byte" /> value that is less than or equal to <see cref="F:System.Byte.MaxValue" />.
            </summary>
            <param name="randomNumberGenerator">The <see cref="T:System.Security.Cryptography.RandomNumberGenerator" /> object to be used for random number generation.</param>
            <returns>
            A cryptographically strong random nonzero <see cref="T:System.Byte" /> value that is less than or equal to <see cref="F:System.Byte.MaxValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.RandomNumberGeneratorExtensions.GetSByte(System.Security.Cryptography.RandomNumberGenerator)">
            <summary>
            Generates a cryptographically strong random <see cref="T:System.SByte" /> value that is greater than or equal to <see cref="F:System.SByte.MinValue" />, and less than or equal to <see cref="F:System.SByte.MaxValue" />.
            </summary>
            <param name="randomNumberGenerator">The <see cref="T:System.Security.Cryptography.RandomNumberGenerator" /> object to be used for random number generation.</param>
            <returns>
            A cryptographically strong random <see cref="T:System.SByte" /> value that is greater than or equal to <see cref="F:System.SByte.MinValue" />, and less than or equal to <see cref="F:System.SByte.MaxValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.RandomNumberGeneratorExtensions.GetChar(System.Security.Cryptography.RandomNumberGenerator)">
            <summary>
            Generates a cryptographically strong random <see cref="T:System.Char" /> value that is greater than or equal to '\0', and less than or equal to <see cref="F:System.Char.MaxValue" />.
            </summary>
            <param name="randomNumberGenerator">The <see cref="T:System.Security.Cryptography.RandomNumberGenerator" /> object to be used for random number generation.</param>
            <returns>
            A cryptographically strong random <see cref="T:System.Char" /> value that is greater than or equal to '\0', and less than or equal to <see cref="F:System.Char.MaxValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.RandomNumberGeneratorExtensions.GetInt32(System.Security.Cryptography.RandomNumberGenerator)">
            <summary>
            Generates a cryptographically strong random <see cref="T:System.Int32" /> value that is greater than or equal to <see cref="F:System.Int32.MinValue" />, and less than or equal to <see cref="F:System.Int32.MaxValue" />.
            </summary>
            <param name="randomNumberGenerator">The <see cref="T:System.Security.Cryptography.RandomNumberGenerator" /> object to be used for random number generation.</param>
            <returns>
            A cryptographically strong random <see cref="T:System.Int32" /> value that is greater than or equal to <see cref="F:System.Int32.MinValue" />, and less than or equal to <see cref="F:System.Int32.MaxValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.RandomNumberGeneratorExtensions.GetUInt32(System.Security.Cryptography.RandomNumberGenerator)">
            <summary>
            Generates a cryptographically strong random <see cref="T:System.UInt32" /> value that is greater than or equal to 0, and less than or equal to <see cref="F:System.UInt32.MaxValue" />.
            </summary>
            <param name="randomNumberGenerator">The <see cref="T:System.Security.Cryptography.RandomNumberGenerator" /> object to be used for random number generation.</param>
            <returns>
            A cryptographically strong random <see cref="T:System.UInt32" /> value that is greater than or equal to 0, and less than or equal to <see cref="F:System.UInt32.MaxValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.RandomNumberGeneratorExtensions.GetInt64(System.Security.Cryptography.RandomNumberGenerator)">
            <summary>
            Generates a cryptographically strong random <see cref="T:System.Int64" /> value that is greater than or equal to <see cref="F:System.Int64.MinValue" />, and less than or equal to <see cref="F:System.Int64.MaxValue" />.
            </summary>
            <param name="randomNumberGenerator">The <see cref="T:System.Security.Cryptography.RandomNumberGenerator" /> object to be used for random number generation.</param>
            <returns>
            A cryptographically strong random <see cref="T:System.Int64" /> value that is greater than or equal to <see cref="F:System.Int64.MinValue" />, and less than or equal to <see cref="F:System.Int64.MaxValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.RandomNumberGeneratorExtensions.GetUInt64(System.Security.Cryptography.RandomNumberGenerator)">
            <summary>
            Generates a cryptographically strong random <see cref="T:System.UInt64" /> value that is greater than or equal to 0UL, and less than or equal to <see cref="F:System.UInt64.MaxValue" />.
            </summary>
            <param name="randomNumberGenerator">The <see cref="T:System.Security.Cryptography.RandomNumberGenerator" /> object to be used for random number generation.</param>
            <returns>
            A cryptographically strong random <see cref="T:System.UInt64" /> value that is greater than or equal to 0UL, and less than or equal to <see cref="F:System.UInt64.MaxValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.RandomNumberGeneratorExtensions.GetInt16(System.Security.Cryptography.RandomNumberGenerator)">
            <summary>
            Generates a cryptographically strong random <see cref="T:System.Int16" /> value that is greater than or equal to <see cref="F:System.Int16.MinValue" />, and less than or equal to <see cref="F:System.Int16.MaxValue" />.
            </summary>
            <param name="randomNumberGenerator">The <see cref="T:System.Security.Cryptography.RandomNumberGenerator" /> object to be used for random number generation.</param>
            <returns>
            A cryptographically strong random <see cref="T:System.Int16" /> value that is greater than or equal to <see cref="F:System.Int16.MinValue" />, and less than or equal to <see cref="F:System.Int16.MaxValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.RandomNumberGeneratorExtensions.GetUInt16(System.Security.Cryptography.RandomNumberGenerator)">
            <summary>
            Generates a cryptographically strong random <see cref="T:System.UInt16" /> value that is greater than or equal to 0, and less than or equal to <see cref="F:System.UInt16.MaxValue" />.
            </summary>
            <param name="randomNumberGenerator">The <see cref="T:System.Security.Cryptography.RandomNumberGenerator" /> object to be used for random number generation.</param>
            <returns>
            A cryptographically strong random <see cref="T:System.UInt16" /> value that is greater than or equal to 0, and less than or equal to <see cref="F:System.UInt16.MaxValue" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.ReflectionExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with .NET reflection objects, such as <see cref="T:System.Type" /> and <see cref="T:System.Reflection.MethodBase" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.ReflectionExtensions.IsAssignableFrom(System.Type,System.Type,System.Boolean)">
            <summary>
            Determines whether an instance of this <see cref="T:System.Type" /> can be assigned to the current <see cref="T:System.Type" /> instance.
            </summary>
            <param name="type">The <see cref="T:System.Type" /> to check.</param>
            <param name="c">The <see cref="T:System.Type" /> to compare with this <see cref="T:System.Type" />.</param>
            <param name="excludeSelf"><see langword="true" /> to exclude this <see cref="T:System.Type" /> from being checked. If this parameter is <see langword="true" /> and this <see cref="T:System.Type" /> equals <paramref name="c" />, <see langword="false" /> is returned.</param>
            <returns>
            <see langword="true" />, if <paramref name="c" /> is derived either directly or indirectly derived from this <see cref="T:System.Type" />, this <see cref="T:System.Type" /> is an interface that <paramref name="c" /> implements, <paramref name="c" /> is a generic type parameter and this <see cref="T:System.Type" /> represents one of the constraints of <paramref name="c" />, <paramref name="c" /> represents a value type and this <see cref="T:System.Type" /> represents <see cref="T:System.Nullable" />&lt;<paramref name="c" />&gt;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.ReflectionExtensions.Invoke(System.Reflection.MethodBase)">
            <summary>
            Invokes the method or constructor represented by the current instance with no parameters.
            </summary>
            <param name="method">The method to invoke.</param>
            <returns>
            An <see cref="T:System.Object" /> containing the return value of the invoked method, or null in the case of a constructor.
            </returns>
        </member>
        <member name="M:BytecodeApi.ReflectionExtensions.Invoke``1(System.Reflection.MethodBase)">
            <summary>
            Invokes the method or constructor represented by the current instance with no parameters.
            </summary>
            <param name="method">The method to invoke.</param>
            <returns>
            An <see cref="T:System.Object" /> containing the return value of the invoked method, or null in the case of a constructor.
            </returns>
        </member>
        <member name="M:BytecodeApi.ReflectionExtensions.Invoke``1(System.Reflection.MethodBase,System.Object,System.Object[])">
            <summary>
            Invokes the method or constructor represented by the current instance with, using the specified parameters.
            </summary>
            <param name="method">The method to invoke.</param>
            <param name="obj">The <see cref="T:System.Object" /> on which to invoke the method or constructor. If a method is static, this argument is ignored. If a constructor is static, this argument must be <see langword="null" /> or an instance of the class that defines the constructor.</param>
            <param name="parameters">An argument list for the invoked method or constructor. This is an array of objects with the same number, order, and type as the parameters of the method or constructor to be invoked. If there are no parameters, parameters should be <see langword="null" />. If the method or constructor represented by this instance takes a ref parameter, no special attribute is required for that parameter in order to invoke the method or constructor using this function. Any <see cref="T:System.Object" /> in this array that is not explicitly initialized with a value will contain the default value for that <see cref="T:System.Object" /> type.</param>
            <returns>
            An <see cref="T:System.Object" /> containing the return value of the invoked method, or null in the case of a constructor.
            </returns>
        </member>
        <member name="M:BytecodeApi.ReflectionExtensions.GetNestedName(System.Type)">
            <summary>
            Returns the name of this <see cref="T:System.Type" />, including its nested class names.
            </summary>
            <param name="type">The <see cref="T:System.Type" /> to test.</param>
            <returns>
            The name of this <see cref="T:System.Type" />, including its nested class names.
            </returns>
        </member>
        <member name="M:BytecodeApi.ReflectionExtensions.GetNestedFullName(System.Type)">
            <summary>
            Returns the fully qualified name of this <see cref="T:System.Type" />, including its nested class names and its namespace but not its assembly.
            </summary>
            <param name="type">The <see cref="T:System.Type" /> to test.</param>
            <returns>
            The fully qualified name of this <see cref="T:System.Type" />, including its nested class names and its namespace but not its assembly.
            </returns>
        </member>
        <member name="M:BytecodeApi.ReflectionExtensions.ToCSharpName(System.Type)">
            <summary>
            Returns the equivalent <see cref="T:System.String" /> representation of the name of this <see cref="T:System.Type" /> using the <see cref="F:BytecodeApi.TypeNaming.CSharp" /> naming convention.
            </summary>
            <param name="type">The <see cref="T:System.Type" /> to be converted.</param>
            <returns>
            An equivalent <see cref="T:System.String" /> representation of the name of this <see cref="T:System.Type" /> using the <see cref="F:BytecodeApi.TypeNaming.CSharp" /> naming convention.
            </returns>
        </member>
        <member name="M:BytecodeApi.ReflectionExtensions.ToCSharpName(System.Type,BytecodeApi.TypeNaming)">
            <summary>
            Returns the equivalent <see cref="T:System.String" /> representation of the name of this <see cref="T:System.Type" /> using the specified naming convention.
            </summary>
            <param name="type">The <see cref="T:System.Type" /> to be converted.</param>
            <param name="namingConvention">The <see cref="T:BytecodeApi.TypeNaming" /> that specifies the naming convention for the converted <see cref="T:System.Type" />.</param>
            <returns>
            An equivalent <see cref="T:System.String" /> representation of the name of this <see cref="T:System.Type" /> using the specified naming convention.
            </returns>
        </member>
        <member name="T:BytecodeApi.ProcessExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Diagnostics.Process" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.ProcessExtensions.GetSessionProcesses">
            <summary>
            Creates a new <see cref="T:System.Diagnostics.Process" /> component for each process resource with the SessionId of the current <see cref="T:System.Diagnostics.Process" /> on the local computer.
            </summary>
            <returns>
            An <see cref="T:System.Diagnostics.Process" />[] that represents all the process resources with the SessionId of the current <see cref="T:System.Diagnostics.Process" /> running on the local computer.
            </returns>
        </member>
        <member name="M:BytecodeApi.ProcessExtensions.GetSessionProcessesByName(System.String)">
            <summary>
            Creates an array of new <see cref="T:System.Diagnostics.Process" /> components and associates them with all the process resources on the local computer that share the specified process name and the SessionId of the current <see cref="T:System.Diagnostics.Process" />.
            </summary>
            <param name="processName">A <see cref="T:System.String" /> specifying the friendly name of the process.</param>
            <returns>
            A <see cref="T:System.Diagnostics.Process" />[] that represents the process resources running the specified application or file with the SessionId of the current <see cref="T:System.Diagnostics.Process" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.ProcessExtensions.GetUser(System.Diagnostics.Process)">
            <summary>
            Gets the <see cref="T:System.Security.Principal.WindowsIdentity" /> object that represents the user running this <see cref="T:System.Diagnostics.Process" />.
            </summary>
            <param name="process">The <see cref="T:System.Diagnostics.Process" /> to be checked.</param>
            <returns>
            The <see cref="T:System.Security.Principal.WindowsIdentity" /> object that represents the user running this <see cref="T:System.Diagnostics.Process" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.ProcessExtensions.GetUserName(System.Diagnostics.Process)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents the user running this <see cref="T:System.Diagnostics.Process" />. This <see cref="T:System.String" /> contains the full Windows logon name, including the machine or domain name.
            </summary>
            <param name="process">The <see cref="T:System.Diagnostics.Process" /> to be checked.</param>
            <returns>
            A <see cref="T:System.String" /> that represents the user running this <see cref="T:System.Diagnostics.Process" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.ProcessExtensions.GetUserNameShort(System.Diagnostics.Process)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents the user running this <see cref="T:System.Diagnostics.Process" />. This <see cref="T:System.String" /> contains only the user, excluding machine or domain name.
            </summary>
            <param name="process">The <see cref="T:System.Diagnostics.Process" /> to be checked.</param>
            <returns>
            A <see cref="T:System.String" /> that represents the user running this <see cref="T:System.Diagnostics.Process" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.ProcessExtensions.GetParentProcess(System.Diagnostics.Process)">
            <summary>
            Gets the parent <see cref="T:System.Diagnostics.Process" /> of this <see cref="T:System.Diagnostics.Process" /> or <see langword="null" />, if this method failed.
            </summary>
            <param name="process">The <see cref="T:System.Diagnostics.Process" /> to be checked.</param>
            <returns>
            The parent <see cref="T:System.Diagnostics.Process" /> of this <see cref="T:System.Diagnostics.Process" /> or <see langword="null" />, if this method failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.ProcessExtensions.GetCommandLine(System.Diagnostics.Process)">
            <summary>
            Gets the commandline <see cref="T:System.String" /> of this <see cref="T:System.Diagnostics.Process" /> that was passed during process creation.
            </summary>
            <param name="process">The <see cref="T:System.Diagnostics.Process" /> to be checked.</param>
            <returns>
            The commandline <see cref="T:System.String" /> of this <see cref="T:System.Diagnostics.Process" /> that was passed during process creation.
            </returns>
        </member>
        <member name="M:BytecodeApi.ProcessExtensions.GetIntegrityLevel(System.Diagnostics.Process)">
            <summary>
            Gets the mandatory integrity level of this <see cref="T:System.Diagnostics.Process" /> or <see langword="null" />, if this method failed.
            Usually, this method (specifically, OpenToken) will fail on elevated processes if this method is called with medium IL.
            </summary>
            <param name="process">The <see cref="T:System.Diagnostics.Process" /> to be checked.</param>
            <returns>
            The <see cref="T:BytecodeApi.ProcessIntegrityLevel" /> of this <see cref="T:System.Diagnostics.Process" /> or <see langword="null" />, if this method failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.ProcessExtensions.Is64Bit(System.Diagnostics.Process)">
            <summary>
            Gets a <see cref="T:System.Boolean" /> value indicating whether this <see cref="T:System.Diagnostics.Process" /> is a 64-bit or a 32-bit process. Returns <see langword="null" />, if this method failed.
            </summary>
            <param name="process">The <see cref="T:System.Diagnostics.Process" /> to be checked.</param>
            <returns>
            <see langword="true" />, if this <see cref="T:System.Diagnostics.Process" /> is a 64-bit process;
            <see langword="false" />, if this <see cref="T:System.Diagnostics.Process" /> is a 32-bit process;
            <see langword="null" />, if this method failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.ProcessExtensions.IsDotNet(System.Diagnostics.Process)">
            <summary>
            Gets a <see cref="T:System.Boolean" /> value indicating whether this <see cref="T:System.Diagnostics.Process" /> is a .NET process. Returns <see langword="null" />, if this method failed.
            To identify a .NET process, the presence of either the mscorlib.dll or the mscorlib.ni.dll module is checked.
            </summary>
            <param name="process">The <see cref="T:System.Diagnostics.Process" /> to be checked.</param>
            <returns>
            <see langword="true" />, if this <see cref="T:System.Diagnostics.Process" /> is a .NET process;
            <see langword="false" />, if this <see cref="T:System.Diagnostics.Process" /> is not a .NET process;
            <see langword="null" />, if this method failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.ProcessExtensions.LoadLibrary(System.Diagnostics.Process,System.String)">
            <summary>
            Injects a DLL into this <see cref="T:System.Diagnostics.Process" /> using the WriteProcessMemory / CreateRemoteThread technique. If <see cref="F:BytecodeApi.ProcessLoadLibraryResult.Success" /> is returned, the DLL has been successfully loaded by this <see cref="T:System.Diagnostics.Process" />.
            </summary>
            <param name="process">The <see cref="T:System.Diagnostics.Process" /> to be injected.</param>
            <param name="dllPath">A <see cref="T:System.String" /> specifying the path of the DLL file to inject into this <see cref="T:System.Diagnostics.Process" />.</param>
            <returns>
            <see cref="F:BytecodeApi.ProcessLoadLibraryResult.Success" />, if DLL injection succeeded;
            otherwise, a <see cref="T:BytecodeApi.ProcessLoadLibraryResult" /> value that indicates the error reason.
            </returns>
        </member>
        <member name="T:BytecodeApi.RandomExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Random" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.RandomExtensions.NextBytes(System.Random,System.Int32)">
            <summary>
            Creates a <see cref="T:System.Byte" />[] with a specified length and fills all elements with random bytes.
            </summary>
            <param name="random">The <see cref="T:System.Random" /> object to be used for random number generation.</param>
            <param name="count">The size of the returned <see cref="T:System.Byte" />[].</param>
            <returns>
            A new <see cref="T:System.Byte" />[] with a specified length, filled with random bytes.
            </returns>
        </member>
        <member name="M:BytecodeApi.RandomExtensions.NextInclusive(System.Random,System.Int32,System.Int32)">
            <summary>
            Generates a random <see cref="T:System.Int32" /> value that is within a specified range.
            </summary>
            <param name="random">The <see cref="T:System.Random" /> object to be used for random number generation.</param>
            <param name="minValue">The inclusive lower bound of the random number returned.</param>
            <param name="maxValue">The inclusive upper bound of the random number returned. <paramref name="maxValue" /> must be greater than or equal to <paramref name="minValue" /> - 1.</param>
            <returns>
            A random <see cref="T:System.Int32" /> value that is greater than or equal to minValue and less than or equal to <paramref name="maxValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.RandomExtensions.NextInclusive(System.Random,System.Int32)">
            <summary>
            Generates a random non-negative <see cref="T:System.Int32" /> value that is less than or equal to the specified maximum.
            </summary>
            <param name="random">The <see cref="T:System.Random" /> object to be used for random number generation.</param>
            <param name="maxValue">The inclusive upper bound of the random number returned. <paramref name="maxValue" /> must be greater than or equal to 0.</param>
            <returns>
            A random non-negative <see cref="T:System.Int32" /> value less than or equal to <paramref name="maxValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.RandomExtensions.NextBoolean(System.Random)">
            <summary>
            Generates a random <see cref="T:System.Boolean" /> value that is either <see langword="false" /> or <see langword="true" />.
            </summary>
            <param name="random">The <see cref="T:System.Random" /> object to be used for random number generation.</param>
            <returns>
            A random <see cref="T:System.Boolean" /> value that is either <see langword="false" /> or <see langword="true" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.RandomExtensions.NextByte(System.Random)">
            <summary>
            Generates a random <see cref="T:System.Byte" /> value that is greater than or equal to 0, and less than or equal to <see cref="F:System.Byte.MaxValue" />.
            </summary>
            <param name="random">The <see cref="T:System.Random" /> object to be used for random number generation.</param>
            <returns>
            A random <see cref="T:System.Byte" /> value that is greater than or equal to 0, and less than or equal to <see cref="F:System.Byte.MaxValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.RandomExtensions.NextSByte(System.Random)">
            <summary>
            Generates a random <see cref="T:System.SByte" /> value that is greater than or equal to <see cref="F:System.SByte.MinValue" />, and less than or equal to <see cref="F:System.SByte.MaxValue" />.
            </summary>
            <param name="random">The <see cref="T:System.Random" /> object to be used for random number generation.</param>
            <returns>
            A random <see cref="T:System.SByte" /> value that is greater than or equal to <see cref="F:System.SByte.MinValue" />, and less than or equal to <see cref="F:System.SByte.MaxValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.RandomExtensions.NextChar(System.Random)">
            <summary>
            Generates a random <see cref="T:System.Char" /> value that is greater than or equal to '\0', and less than or equal to <see cref="F:System.Char.MaxValue" />.
            </summary>
            <param name="random">The <see cref="T:System.Random" /> object to be used for random number generation.</param>
            <returns>
            A random <see cref="T:System.Char" /> value that is greater than or equal to '\0', and less than or equal to <see cref="F:System.Char.MaxValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.RandomExtensions.NextSingle(System.Random)">
            <summary>
            Generates a random floating-point number that is greater than or equal to 0.0f, and less than 1.0f.
            </summary>
            <param name="random">The <see cref="T:System.Random" /> object to be used for random number generation.</param>
            <returns>
            A random floating-point number that is greater than or equal to 0.0f, and less than 1.0f.
            </returns>
        </member>
        <member name="M:BytecodeApi.RandomExtensions.NextInt32(System.Random)">
            <summary>
            Generates a random <see cref="T:System.Int32" /> value that is greater than or equal to <see cref="F:System.Int32.MinValue" />, and less than or equal to <see cref="F:System.Int32.MaxValue" />.
            </summary>
            <param name="random">The <see cref="T:System.Random" /> object to be used for random number generation.</param>
            <returns>
            A random <see cref="T:System.Int32" /> value that is greater than or equal to <see cref="F:System.Int32.MinValue" />, and less than or equal to <see cref="F:System.Int32.MaxValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.RandomExtensions.NextUInt32(System.Random)">
            <summary>
            Generates a random <see cref="T:System.UInt32" /> value that is less than or equal to <see cref="F:System.UInt32.MaxValue" />.
            </summary>
            <param name="random">The <see cref="T:System.Random" /> object to be used for random number generation.</param>
            <returns>
            A random <see cref="T:System.UInt32" /> value that is less than or equal to <see cref="F:System.UInt32.MaxValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.RandomExtensions.NextInt64(System.Random)">
            <summary>
            Generates a random <see cref="T:System.Int64" /> value that is greater than or equal to <see cref="F:System.Int64.MinValue" />, and less than or equal to <see cref="F:System.Int64.MaxValue" />.
            </summary>
            <param name="random">The <see cref="T:System.Random" /> object to be used for random number generation.</param>
            <returns>
            A random <see cref="T:System.Int64" /> value that is greater than or equal to <see cref="F:System.Int64.MinValue" />, and less than or equal to <see cref="F:System.Int64.MaxValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.RandomExtensions.NextUInt64(System.Random)">
            <summary>
            Generates a random <see cref="T:System.UInt64" /> value that is less than or equal to <see cref="F:System.UInt64.MaxValue" />.
            </summary>
            <param name="random">The <see cref="T:System.Random" /> object to be used for random number generation.</param>
            <returns>
            A random <see cref="T:System.UInt64" /> value that is less than or equal to <see cref="F:System.UInt64.MaxValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.RandomExtensions.NextInt16(System.Random)">
            <summary>
            Generates a random <see cref="T:System.Int16" /> value that is greater than or equal to <see cref="F:System.Int16.MinValue" />, and less than or equal to <see cref="F:System.Int16.MaxValue" />.
            </summary>
            <param name="random">The <see cref="T:System.Random" /> object to be used for random number generation.</param>
            <returns>
            A random <see cref="T:System.Int16" /> value that is greater than or equal to <see cref="F:System.Int16.MinValue" />, and less than or equal to <see cref="F:System.Int16.MaxValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.RandomExtensions.NextUInt16(System.Random)">
            <summary>
            Generates a random <see cref="T:System.UInt16" /> value that is less than or equal to <see cref="F:System.UInt16.MaxValue" />.
            </summary>
            <param name="random">The <see cref="T:System.Random" /> object to be used for random number generation.</param>
            <returns>
            A random <see cref="T:System.UInt16" /> value that is less than or equal to <see cref="F:System.UInt16.MaxValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.RandomExtensions.NextObject``1(System.Random,``0[])">
            <summary>
            Returns a random <see cref="T:System.Object" /> of the specified type from <paramref name="array" />, selected based on a random index.
            </summary>
            <typeparam name="T">The element type of <paramref name="array" />.</typeparam>
            <param name="random">The <see cref="T:System.Random" /> object to be used for random number generation.</param>
            <param name="array">An <see cref="T:System.Array" /> of the specified type.</param>
            <returns>
            A random <see cref="T:System.Object" /> of the specified type from <paramref name="array" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.RandomExtensions.NextObject``1(System.Random,System.Collections.Generic.IList{``0})">
            <summary>
            Returns a random <see cref="T:System.Object" /> of the specified type from <paramref name="list" />, selected based on a random index.
            </summary>
            <typeparam name="T">The element type of <paramref name="list" />.</typeparam>
            <param name="random">The <see cref="T:System.Random" /> object to be used for random number generation.</param>
            <param name="list">A <see cref="T:System.Collections.Generic.IList`1" /> of the specified type.</param>
            <returns>
            A random <see cref="T:System.Object" /> of the specified type from <paramref name="list" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.RegistryExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:Microsoft.Win32.RegistryKey" /> objects, specifically for easy data access of strongly typed values.
            </summary>
        </member>
        <member name="M:BytecodeApi.RegistryExtensions.GetBooleanValue(Microsoft.Win32.RegistryKey,System.String)">
            <summary>
            Retrieves a <see cref="T:System.Boolean" /> value from this <see cref="T:Microsoft.Win32.RegistryKey" /> that is represented as a REG_DWORD value. Returns <see langword="null" />, if the value does not exist in the registry, is not a REG_DWORD value, or is not equal to 0 or 1.
            </summary>
            <param name="key">The <see cref="T:Microsoft.Win32.RegistryKey" /> to read the value from.</param>
            <param name="name">A <see cref="T:System.String" /> value specifying the name of the value to read.</param>
            <returns>
            <see langword="true" />, if the value is a REG_DWORD and is equal to 1;
            <see langword="false" />, if the value is a REG_DWORD and is equal to 0;
            otherwise, <see langword="null" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.RegistryExtensions.GetBooleanValue(Microsoft.Win32.RegistryKey,System.String,System.Boolean)">
            <summary>
            Retrieves a <see cref="T:System.Boolean" /> value from this <see cref="T:Microsoft.Win32.RegistryKey" /> that is represented as a REG_DWORD value. Returns a default value, if the value does not exist in the registry, is not a REG_DWORD value, or is not equal to 0 or 1.
            </summary>
            <param name="key">The <see cref="T:Microsoft.Win32.RegistryKey" /> to read the value from.</param>
            <param name="name">A <see cref="T:System.String" /> value specifying the name of the value to read.</param>
            <param name="defaultValue">The value that is used if retrieving or conversion failed.</param>
            <returns>
            <see langword="true" />, if the value is a REG_DWORD and is equal to 1;
            <see langword="false" />, if the value is a REG_DWORD and is equal to 0;
            otherwise, <paramref name="defaultValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.RegistryExtensions.GetInt32Value(Microsoft.Win32.RegistryKey,System.String)">
            <summary>
            Retrieves a <see cref="T:System.Int32" /> value from this <see cref="T:Microsoft.Win32.RegistryKey" /> that is represented as a REG_DWORD value. Returns <see langword="null" />, if the value does not exist in the registry or is not a REG_DWORD value.
            </summary>
            <param name="key">The <see cref="T:Microsoft.Win32.RegistryKey" /> to read the value from.</param>
            <param name="name">A <see cref="T:System.String" /> value specifying the name of the value to read.</param>
            <returns>
            The converted value, if it exists and conversion is possible;
            otherwise, <see langword="null" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.RegistryExtensions.GetInt32Value(Microsoft.Win32.RegistryKey,System.String,System.Int32)">
            <summary>
            Retrieves a <see cref="T:System.Int32" /> value from this <see cref="T:Microsoft.Win32.RegistryKey" /> that is represented as a REG_DWORD value. Returns a default value, if the value does not exist in the registry or is not a REG_DWORD value.
            </summary>
            <param name="key">The <see cref="T:Microsoft.Win32.RegistryKey" /> to read the value from.</param>
            <param name="name">A <see cref="T:System.String" /> value specifying the name of the value to read.</param>
            <param name="defaultValue">The value that is used if retrieving or conversion failed.</param>
            <returns>
            The converted value, if it exists and conversion is possible;
            otherwise, <paramref name="defaultValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.RegistryExtensions.GetInt64Value(Microsoft.Win32.RegistryKey,System.String)">
            <summary>
            Retrieves a <see cref="T:System.Int64" /> value from this <see cref="T:Microsoft.Win32.RegistryKey" /> that is represented as a REG_QWORD value. Returns <see langword="null" />, if the value does not exist in the registry or is not a REG_QWORD value.
            </summary>
            <param name="key">The <see cref="T:Microsoft.Win32.RegistryKey" /> to read the value from.</param>
            <param name="name">A <see cref="T:System.String" /> value specifying the name of the value to read.</param>
            <returns>
            The converted value, if it exists and conversion is possible;
            otherwise, <see langword="null" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.RegistryExtensions.GetInt64Value(Microsoft.Win32.RegistryKey,System.String,System.Int64)">
            <summary>
            Retrieves a <see cref="T:System.Int64" /> value from this <see cref="T:Microsoft.Win32.RegistryKey" /> that is represented as a REG_QWORD value. Returns a default value, if the value does not exist in the registry or is not a REG_QWORD value.
            </summary>
            <param name="key">The <see cref="T:Microsoft.Win32.RegistryKey" /> to read the value from.</param>
            <param name="name">A <see cref="T:System.String" /> value specifying the name of the value to read.</param>
            <param name="defaultValue">The value that is used if retrieving or conversion failed.</param>
            <returns>
            The converted value, if it exists and conversion is possible;
            otherwise, <paramref name="defaultValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.RegistryExtensions.GetStringValue(Microsoft.Win32.RegistryKey,System.String)">
            <summary>
            Retrieves a <see cref="T:System.String" /> value from this <see cref="T:Microsoft.Win32.RegistryKey" /> that is represented as a REG_SZ value. Returns <see langword="null" />, if the value does not exist in the registry or is not a REG_SZ value.
            </summary>
            <param name="key">The <see cref="T:Microsoft.Win32.RegistryKey" /> to read the value from.</param>
            <param name="name">A <see cref="T:System.String" /> value specifying the name of the value to read.</param>
            <returns>
            The converted value, if it exists and conversion is possible;
            otherwise, <see langword="null" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.RegistryExtensions.GetStringValue(Microsoft.Win32.RegistryKey,System.String,System.String)">
            <summary>
            Retrieves a <see cref="T:System.String" /> value from this <see cref="T:Microsoft.Win32.RegistryKey" /> that is represented as a REG_SZ value. Returns a default value, if the value does not exist in the registry or is not a REG_SZ value.
            </summary>
            <param name="key">The <see cref="T:Microsoft.Win32.RegistryKey" /> to read the value from.</param>
            <param name="name">A <see cref="T:System.String" /> value specifying the name of the value to read.</param>
            <param name="defaultValue">The value that is used if retrieving or conversion failed.</param>
            <returns>
            The converted value, if it exists and conversion is possible;
            otherwise, <paramref name="defaultValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.RegistryExtensions.GetDateTimeValue(Microsoft.Win32.RegistryKey,System.String)">
            <summary>
            Retrieves a <see cref="T:System.DateTime" />? value from this <see cref="T:Microsoft.Win32.RegistryKey" /> that is represented as a REG_SZ value with the format "yyyy-MM-dd HH:mm:ss". Returns <see langword="null" />, if the value does not exist in the registry, is not a REG_SZ value, or does not match the format.
            </summary>
            <param name="key">The <see cref="T:Microsoft.Win32.RegistryKey" /> to read the value from.</param>
            <param name="name">A <see cref="T:System.String" /> value specifying the name of the value to read.</param>
            <returns>
            The converted value, if it exists and conversion is possible;
            otherwise, <see langword="null" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.RegistryExtensions.GetDateTimeValue(Microsoft.Win32.RegistryKey,System.String,System.DateTime)">
            <summary>
            Retrieves a <see cref="T:System.DateTime" />? value from this <see cref="T:Microsoft.Win32.RegistryKey" /> that is represented as a REG_SZ value with the format "yyyy-MM-dd HH:mm:ss". Returns a default value, if the value does not exist in the registry, is not a REG_SZ value, or does not match the format.
            </summary>
            <param name="key">The <see cref="T:Microsoft.Win32.RegistryKey" /> to read the value from.</param>
            <param name="name">A <see cref="T:System.String" /> value specifying the name of the value to read.</param>
            <param name="defaultValue">The value that is used if retrieving or conversion failed.</param>
            <returns>
            The converted value, if it exists and conversion is possible;
            otherwise, <paramref name="defaultValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.RegistryExtensions.GetByteArrayValue(Microsoft.Win32.RegistryKey,System.String)">
            <summary>
            Retrieves a <see cref="T:System.Byte" />[] value from this <see cref="T:Microsoft.Win32.RegistryKey" /> that is represented as a REG_BINARY value. Returns <see langword="null" />, if the value does not exist in the registry or is not a REG_BINARY value.
            </summary>
            <param name="key">The <see cref="T:Microsoft.Win32.RegistryKey" /> to read the value from.</param>
            <param name="name">A <see cref="T:System.String" /> value specifying the name of the value to read.</param>
            <returns>
            The converted value, if it exists and conversion is possible;
            otherwise, <see langword="null" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.RegistryExtensions.GetByteArrayValue(Microsoft.Win32.RegistryKey,System.String,System.Byte[])">
            <summary>
            Retrieves a <see cref="T:System.Byte" />[] value from this <see cref="T:Microsoft.Win32.RegistryKey" /> that is represented as a REG_BINARY value. Returns a default value, if the value does not exist in the registry or is not a REG_BINARY value.
            </summary>
            <param name="key">The <see cref="T:Microsoft.Win32.RegistryKey" /> to read the value from.</param>
            <param name="name">A <see cref="T:System.String" /> value specifying the name of the value to read.</param>
            <param name="defaultValue">The value that is used if retrieving or conversion failed.</param>
            <returns>
            The converted value, if it exists and conversion is possible;
            otherwise, <paramref name="defaultValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.RegistryExtensions.GetStringArrayValue(Microsoft.Win32.RegistryKey,System.String)">
            <summary>
            Retrieves a <see cref="T:System.String" />[] value from this <see cref="T:Microsoft.Win32.RegistryKey" /> that is represented as a REG_MULTI_SZ value. Returns <see langword="null" />, if the value does not exist in the registry or is not a REG_MULTI_SZ value.
            </summary>
            <param name="key">The <see cref="T:Microsoft.Win32.RegistryKey" /> to read the value from.</param>
            <param name="name">A <see cref="T:System.String" /> value specifying the name of the value to read.</param>
            <returns>
            The converted value, if it exists and conversion is possible;
            otherwise, <see langword="null" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.RegistryExtensions.GetStringArrayValue(Microsoft.Win32.RegistryKey,System.String,System.String[])">
            <summary>
            Retrieves a <see cref="T:System.String" />[] value from this <see cref="T:Microsoft.Win32.RegistryKey" /> that is represented as a REG_MULTI_SZ value. Returns a default value, if the value does not exist in the registry or is not a REG_MULTI_SZ value.
            </summary>
            <param name="key">The <see cref="T:Microsoft.Win32.RegistryKey" /> to read the value from.</param>
            <param name="name">A <see cref="T:System.String" /> value specifying the name of the value to read.</param>
            <param name="defaultValue">The value that is used if retrieving or conversion failed.</param>
            <returns>
            The converted value, if it exists and conversion is possible;
            otherwise, <paramref name="defaultValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.RegistryExtensions.SetBooleanValue(Microsoft.Win32.RegistryKey,System.String,System.Nullable{System.Boolean})">
            <summary>
            Writes a <see cref="T:System.Boolean" /> value to this <see cref="T:Microsoft.Win32.RegistryKey" /> that is represented as a REG_DWORD value. If <see langword="null" /> is provided, the value will be deleted.
            </summary>
            <param name="key">The <see cref="T:Microsoft.Win32.RegistryKey" /> to write the value to.</param>
            <param name="name">A <see cref="T:System.String" /> value specifying the name of the value to write to.</param>
            <param name="value">The <see cref="T:System.Boolean" /> value to be written to. If <see langword="null" /> is provided, the value will be deleted.</param>
        </member>
        <member name="M:BytecodeApi.RegistryExtensions.SetInt32Value(Microsoft.Win32.RegistryKey,System.String,System.Nullable{System.Int32})">
            <summary>
            Writes a <see cref="T:System.Int32" /> value to this <see cref="T:Microsoft.Win32.RegistryKey" /> that is represented as a REG_DWORD value. If <see langword="null" /> is provided, the value will be deleted.
            </summary>
            <param name="key">The <see cref="T:Microsoft.Win32.RegistryKey" /> to write the value to.</param>
            <param name="name">A <see cref="T:System.String" /> value specifying the name of the value to write to.</param>
            <param name="value">The <see cref="T:System.Int32" /> value to be written to. If <see langword="null" /> is provided, the value will be deleted.</param>
        </member>
        <member name="M:BytecodeApi.RegistryExtensions.SetInt64Value(Microsoft.Win32.RegistryKey,System.String,System.Nullable{System.Int64})">
            <summary>
            Writes a <see cref="T:System.Int64" /> value to this <see cref="T:Microsoft.Win32.RegistryKey" /> that is represented as a REG_QWORD value. If <see langword="null" /> is provided, the value will be deleted.
            </summary>
            <param name="key">The <see cref="T:Microsoft.Win32.RegistryKey" /> to write the value to.</param>
            <param name="name">A <see cref="T:System.String" /> value specifying the name of the value to write to.</param>
            <param name="value">The <see cref="T:System.Int64" /> value to be written to. If <see langword="null" /> is provided, the value will be deleted.</param>
        </member>
        <member name="M:BytecodeApi.RegistryExtensions.SetStringValue(Microsoft.Win32.RegistryKey,System.String,System.String)">
            <summary>
            Writes a <see cref="T:System.String" /> value to this <see cref="T:Microsoft.Win32.RegistryKey" /> that is represented as a REG_SZ value. If <see langword="null" /> is provided, the value will be deleted.
            </summary>
            <param name="key">The <see cref="T:Microsoft.Win32.RegistryKey" /> to write the value to.</param>
            <param name="name">A <see cref="T:System.String" /> value specifying the name of the value to write to.</param>
            <param name="value">The <see cref="T:System.String" /> value to be written to. If <see langword="null" /> is provided, the value will be deleted.</param>
        </member>
        <member name="M:BytecodeApi.RegistryExtensions.SetDateTimeValue(Microsoft.Win32.RegistryKey,System.String,System.Nullable{System.DateTime})">
            <summary>
            Writes a <see cref="T:System.DateTime" /> value to this <see cref="T:Microsoft.Win32.RegistryKey" /> that is represented as a REG_SZ value with the format "yyyy-MM-dd HH:mm:ss". If <see langword="null" /> is provided, the value will be deleted.
            </summary>
            <param name="key">The <see cref="T:Microsoft.Win32.RegistryKey" /> to write the value to.</param>
            <param name="name">A <see cref="T:System.String" /> value specifying the name of the value to write to.</param>
            <param name="value">The <see cref="T:System.DateTime" /> value to be written to in the format "yyyy-MM-dd HH:mm:ss". If <see langword="null" /> is provided, the value will be deleted.</param>
        </member>
        <member name="M:BytecodeApi.RegistryExtensions.SetByteArrayValue(Microsoft.Win32.RegistryKey,System.String,System.Byte[])">
            <summary>
            Writes a <see cref="T:System.Byte" />[] value to this <see cref="T:Microsoft.Win32.RegistryKey" /> that is represented as a REG_BINARY value. If <see langword="null" /> is provided, the value will be deleted.
            </summary>
            <param name="key">The <see cref="T:Microsoft.Win32.RegistryKey" /> to write the value to.</param>
            <param name="name">A <see cref="T:System.String" /> value specifying the name of the value to write to.</param>
            <param name="value">The <see cref="T:System.Byte" />[] value to be written to. If <see langword="null" /> is provided, the value will be deleted.</param>
        </member>
        <member name="M:BytecodeApi.RegistryExtensions.SetStringArrayValue(Microsoft.Win32.RegistryKey,System.String,System.String[])">
            <summary>
            Writes a <see cref="T:System.String" />[] value to this <see cref="T:Microsoft.Win32.RegistryKey" /> that is represented as a REG_MULTI_SZ value. If <see langword="null" /> is provided, the value will be deleted.
            </summary>
            <param name="key">The <see cref="T:Microsoft.Win32.RegistryKey" /> to write the value to.</param>
            <param name="name">A <see cref="T:System.String" /> value specifying the name of the value to write to.</param>
            <param name="value">The <see cref="T:System.String" />[] value to be written to. If <see langword="null" /> is provided, the value will be deleted.</param>
        </member>
        <member name="M:BytecodeApi.RegistryExtensions.OpenInRegedit(Microsoft.Win32.RegistryKey)">
            <summary>
            Starts regedit.exe and navigates to the location specified by this <see cref="T:Microsoft.Win32.RegistryKey" />. If regedit.exe is already running, the <see cref="T:System.Diagnostics.Process" /> will be terminated.
            </summary>
            <param name="key">The <see cref="T:Microsoft.Win32.RegistryKey" /> that will be navigates to.</param>
        </member>
        <member name="T:BytecodeApi.StreamExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.IO.Stream" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.StreamExtensions.Seek(System.IO.Stream,System.Int64)">
            <summary>
            Sets the position within the current stream to an offset starting at the beginning.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> to process.</param>
            <param name="offset">A byte offset relative to the beginning of the stream.</param>
            <returns>
            The new position within the current stream.
            </returns>
        </member>
        <member name="M:BytecodeApi.StreamExtensions.Write(System.IO.Stream,System.Byte[])">
            <summary>
            Writes a sequence of bytes to the current <see cref="T:System.IO.Stream" /> and advances the current position within this <see cref="T:System.IO.Stream" /> by the number of bytes written.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> to write to.</param>
            <param name="buffer">A <see cref="T:System.Byte" />[] that is copied to this <see cref="T:System.IO.Stream" />.</param>
        </member>
        <member name="M:BytecodeApi.StreamExtensions.ToArrayAndDispose(System.IO.MemoryStream)">
            <summary>
            Writes the contents of this <see cref="T:System.IO.MemoryStream" /> to a new <see cref="T:System.Byte" />[], regardless of the <see cref="P:System.IO.MemoryStream.Position" /> property and disposes this <see cref="T:System.IO.MemoryStream" />.
            </summary>
            <param name="memoryStream">The <see cref="T:System.IO.MemoryStream" /> object to process.</param>
            <returns>
            A new <see cref="T:System.Byte" />[] with the contents of this <see cref="T:System.IO.MemoryStream" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.StringConvertExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for conversion of <see cref="T:System.String" /> objects to different data types.
            </summary>
        </member>
        <member name="M:BytecodeApi.StringConvertExtensions.ToBooleanOrDefault(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Boolean" /> value or returns <see langword="false" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Boolean" /> value.</param>
            <returns>
            The <see cref="T:System.Boolean" /> value that was converted from <paramref name="str" /> and
            <see langword="false" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringConvertExtensions.ToBooleanOrDefault(System.String,System.Boolean)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Boolean" /> value or returns <paramref name="defaultValue" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Boolean" /> value.</param>
            <param name="defaultValue">The value that is used if conversion failed.</param>
            <returns>
            The <see cref="T:System.Boolean" /> value that was converted from <paramref name="str" /> and
            <paramref name="defaultValue" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringConvertExtensions.ToBooleanOrNull(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Boolean" /> value or returns <see langword="null" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Boolean" /> value.</param>
            <returns>
            The <see cref="T:System.Boolean" /> value that was converted from <paramref name="str" /> and
            <see langword="null" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringConvertExtensions.ToByteOrDefault(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Byte" /> value or returns 0 if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Byte" /> value.</param>
            <returns>
            The <see cref="T:System.Byte" /> value that was converted from <paramref name="str" /> and
            0 if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringConvertExtensions.ToByteOrDefault(System.String,System.Byte)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Byte" /> value or returns <paramref name="defaultValue" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Byte" /> value.</param>
            <param name="defaultValue">The value that is used if conversion failed.</param>
            <returns>
            The <see cref="T:System.Byte" /> value that was converted from <paramref name="str" /> and
            <paramref name="defaultValue" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringConvertExtensions.ToByteOrNull(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Byte" /> value or returns <see langword="null" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Byte" /> value.</param>
            <returns>
            The <see cref="T:System.Byte" /> value that was converted from <paramref name="str" /> and
            <see langword="null" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringConvertExtensions.ToSByteOrDefault(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.SByte" /> value or returns 0 if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.SByte" /> value.</param>
            <returns>
            The <see cref="T:System.SByte" /> value that was converted from <paramref name="str" /> and
            0 if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringConvertExtensions.ToSByteOrDefault(System.String,System.SByte)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.SByte" /> value or returns <paramref name="defaultValue" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.SByte" /> value.</param>
            <param name="defaultValue">The value that is used if conversion failed.</param>
            <returns>
            The <see cref="T:System.SByte" /> value that was converted from <paramref name="str" /> and
            <paramref name="defaultValue" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringConvertExtensions.ToSByteOrNull(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.SByte" /> value or returns <see langword="null" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.SByte" /> value.</param>
            <returns>
            The <see cref="T:System.SByte" /> value that was converted from <paramref name="str" /> and
            <see langword="null" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringConvertExtensions.ToCharOrDefault(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Char" /> value or returns '\0' if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Char" /> value.</param>
            <returns>
            The <see cref="T:System.Char" /> value that was converted from <paramref name="str" /> and
            '\0' if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringConvertExtensions.ToCharOrDefault(System.String,System.Char)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Char" /> value or returns <paramref name="defaultValue" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Char" /> value.</param>
            <param name="defaultValue">The value that is used if conversion failed.</param>
            <returns>
            The <see cref="T:System.Char" /> value that was converted from <paramref name="str" /> and
            <paramref name="defaultValue" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringConvertExtensions.ToCharOrNull(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Char" /> value or returns <see langword="null" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Char" /> value.</param>
            <returns>
            The <see cref="T:System.Char" /> value that was converted from <paramref name="str" /> and
            <see langword="null" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringConvertExtensions.ToDecimalOrDefault(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Decimal" /> value or returns 0.0m if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Decimal" /> value.</param>
            <returns>
            The <see cref="T:System.Decimal" /> value that was converted from <paramref name="str" /> and
            0.0m if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringConvertExtensions.ToDecimalOrDefault(System.String,System.Decimal)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Decimal" /> value or returns <paramref name="defaultValue" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Decimal" /> value.</param>
            <param name="defaultValue">The value that is used if conversion failed.</param>
            <returns>
            The <see cref="T:System.Decimal" /> value that was converted from <paramref name="str" /> and
            <paramref name="defaultValue" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringConvertExtensions.ToDecimalOrNull(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Decimal" /> value or returns <see langword="null" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Decimal" /> value.</param>
            <returns>
            The <see cref="T:System.Decimal" /> value that was converted from <paramref name="str" /> and
            <see langword="null" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringConvertExtensions.ToDoubleOrDefault(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Double" /> value or returns 0.0 if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Double" /> value.</param>
            <returns>
            The <see cref="T:System.Double" /> value that was converted from <paramref name="str" /> and
            0.0 if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringConvertExtensions.ToDoubleOrDefault(System.String,System.Double)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Double" /> value or returns <paramref name="defaultValue" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Double" /> value.</param>
            <param name="defaultValue">The value that is used if conversion failed.</param>
            <returns>
            The <see cref="T:System.Double" /> value that was converted from <paramref name="str" /> and
            <paramref name="defaultValue" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringConvertExtensions.ToDoubleOrNull(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Double" /> value or returns <see langword="null" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Double" /> value.</param>
            <returns>
            The <see cref="T:System.Double" /> value that was converted from <paramref name="str" /> and
            <see langword="null" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringConvertExtensions.ToSingleOrDefault(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Single" /> value or returns 0.0f if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Single" /> value.</param>
            <returns>
            The <see cref="T:System.Single" /> value that was converted from <paramref name="str" /> and
            0.0f if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringConvertExtensions.ToSingleOrDefault(System.String,System.Single)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Single" /> value or returns <paramref name="defaultValue" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Single" /> value.</param>
            <param name="defaultValue">The value that is used if conversion failed.</param>
            <returns>
            The <see cref="T:System.Single" /> value that was converted from <paramref name="str" /> and
            <paramref name="defaultValue" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringConvertExtensions.ToSingleOrNull(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Single" /> value or returns <see langword="null" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Single" /> value.</param>
            <returns>
            The <see cref="T:System.Single" /> value that was converted from <paramref name="str" /> and
            <see langword="null" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringConvertExtensions.ToInt32OrDefault(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Int32" /> value or returns 0 if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Int32" /> value.</param>
            <returns>
            The <see cref="T:System.Int32" /> value that was converted from <paramref name="str" /> and
            0 if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringConvertExtensions.ToInt32OrDefault(System.String,System.Int32)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Int32" /> value or returns <paramref name="defaultValue" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Int32" /> value.</param>
            <param name="defaultValue">The value that is used if conversion failed.</param>
            <returns>
            The <see cref="T:System.Int32" /> value that was converted from <paramref name="str" /> and
            <paramref name="defaultValue" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringConvertExtensions.ToInt32OrNull(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Int32" /> value or returns <see langword="null" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Int32" /> value.</param>
            <returns>
            The <see cref="T:System.Int32" /> value that was converted from <paramref name="str" /> and
            <see langword="null" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringConvertExtensions.ToUInt32OrDefault(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.UInt32" /> value or returns 0 if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.UInt32" /> value.</param>
            <returns>
            The <see cref="T:System.UInt32" /> value that was converted from <paramref name="str" /> and
            0 if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringConvertExtensions.ToUInt32OrDefault(System.String,System.UInt32)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.UInt32" /> value or returns <paramref name="defaultValue" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.UInt32" /> value.</param>
            <param name="defaultValue">The value that is used if conversion failed.</param>
            <returns>
            The <see cref="T:System.UInt32" /> value that was converted from <paramref name="str" /> and
            <paramref name="defaultValue" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringConvertExtensions.ToUInt32OrNull(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.UInt32" /> value or returns <see langword="null" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.UInt32" /> value.</param>
            <returns>
            The <see cref="T:System.UInt32" /> value that was converted from <paramref name="str" /> and
            <see langword="null" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringConvertExtensions.ToInt64OrDefault(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Int64" /> value or returns 0L if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Int64" /> value.</param>
            <returns>
            The <see cref="T:System.Int64" /> value that was converted from <paramref name="str" /> and
            0L if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringConvertExtensions.ToInt64OrDefault(System.String,System.Int64)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Int64" /> value or returns <paramref name="defaultValue" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Int64" /> value.</param>
            <param name="defaultValue">The value that is used if conversion failed.</param>
            <returns>
            The <see cref="T:System.Int64" /> value that was converted from <paramref name="str" /> and
            <paramref name="defaultValue" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringConvertExtensions.ToInt64OrNull(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Int64" /> value or returns <see langword="null" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Int64" /> value.</param>
            <returns>
            The <see cref="T:System.Int64" /> value that was converted from <paramref name="str" /> and
            <see langword="null" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringConvertExtensions.ToUInt64OrDefault(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.UInt64" /> value or returns 0UL if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.UInt64" /> value.</param>
            <returns>
            The <see cref="T:System.UInt64" /> value that was converted from <paramref name="str" /> and
            0UL if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringConvertExtensions.ToUInt64OrDefault(System.String,System.UInt64)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.UInt64" /> value or returns <paramref name="defaultValue" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.UInt64" /> value.</param>
            <param name="defaultValue">The value that is used if conversion failed.</param>
            <returns>
            The <see cref="T:System.UInt64" /> value that was converted from <paramref name="str" /> and
            <paramref name="defaultValue" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringConvertExtensions.ToUInt64OrNull(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.UInt64" /> value or returns <see langword="null" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.UInt64" /> value.</param>
            <returns>
            The <see cref="T:System.UInt64" /> value that was converted from <paramref name="str" /> and
            <see langword="null" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringConvertExtensions.ToInt16OrDefault(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Int16" /> value or returns 0 if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Int16" /> value.</param>
            <returns>
            The <see cref="T:System.Int16" /> value that was converted from <paramref name="str" /> and
            0 if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringConvertExtensions.ToInt16OrDefault(System.String,System.Int16)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Int16" /> value or returns <paramref name="defaultValue" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Int16" /> value.</param>
            <param name="defaultValue">The value that is used if conversion failed.</param>
            <returns>
            The <see cref="T:System.Int16" /> value that was converted from <paramref name="str" /> and
            <paramref name="defaultValue" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringConvertExtensions.ToInt16OrNull(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Int16" /> value or returns <see langword="null" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Int16" /> value.</param>
            <returns>
            The <see cref="T:System.Int16" /> value that was converted from <paramref name="str" /> and
            <see langword="null" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringConvertExtensions.ToUInt16OrDefault(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.UInt16" /> value or returns 0 if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.UInt16" /> value.</param>
            <returns>
            The <see cref="T:System.UInt16" /> value that was converted from <paramref name="str" /> and
            0 if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringConvertExtensions.ToUInt16OrDefault(System.String,System.UInt16)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.UInt16" /> value or returns <paramref name="defaultValue" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.UInt16" /> value.</param>
            <param name="defaultValue">The value that is used if conversion failed.</param>
            <returns>
            The <see cref="T:System.UInt16" /> value that was converted from <paramref name="str" /> and
            <paramref name="defaultValue" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringConvertExtensions.ToUInt16OrNull(System.String)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.UInt16" /> value or returns <see langword="null" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.UInt16" /> value.</param>
            <returns>
            The <see cref="T:System.UInt16" /> value that was converted from <paramref name="str" /> and
            <see langword="null" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringConvertExtensions.ToUriOrDefault(System.String,System.UriKind)">
            <summary>
            Tries to convert this <see cref="T:System.String" /> to an equivalent <see cref="T:System.Uri" /> value or returns <see langword="null" />, if conversion failed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> with a convertible representation of a <see cref="T:System.Uri" /> value.</param>
            <param name="uriKind">The <see cref="T:System.UriKind" /> that is used for conversion.</param>
            <returns>
            The <see cref="T:System.UriKind" /> value that was converted from <paramref name="str" /> and
            <see langword="null" />, if conversion failed.
            </returns>
        </member>
        <member name="T:BytecodeApi.StringExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.String" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.StringExtensions.IsNullOrEmpty(System.String)">
            <summary>
            Indicates whether this <see cref="T:System.String" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to test.</param>
            <returns>
            <see langword="true" />, if this <see cref="T:System.String" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringExtensions.IsNullOrWhiteSpace(System.String)">
            <summary>
            Indicates whether this <see cref="T:System.String" /> is <see langword="null" />, <see cref="F:System.String.Empty" />, or consists only of white-space characters.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to test.</param>
            <returns>
            <see langword="true" />, if this <see cref="T:System.String" /> is <see langword="null" />, <see cref="F:System.String.Empty" />, or consists only of white-space characters;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringExtensions.ToNullIfEmpty(System.String)">
            <summary>
            Returns <see langword="null" />, if this <see cref="T:System.String" /> is <see cref="F:System.String.Empty" />, otherwise, its original value.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to convert.</param>
            <returns>
            <see langword="null" />, if this <see cref="T:System.String" /> is <see cref="F:System.String.Empty" />;
            otherwise, its original value.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringExtensions.ToNullIfEmptyOrWhiteSpace(System.String)">
            <summary>
            Returns <see langword="null" />, if this <see cref="T:System.String" /> is <see cref="F:System.String.Empty" />, or consists only of white-space characters, otherwise, its original value.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to convert.</param>
            <returns>
            <see langword="null" />, if this <see cref="T:System.String" /> is <see cref="F:System.String.Empty" />, or consists only of white-space characters;
            otherwise, its original value.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringExtensions.ToAnsiBytes(System.String)">
            <summary>
            Encodes all the characters in the specified <see cref="T:System.String" /> into a sequence of bytes using the <see cref="P:System.Text.Encoding.Default" /> encoding.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to convert.</param>
            <returns>
            A <see cref="T:System.Byte" />[] containing the results of encoding the specified set of characters.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringExtensions.ToUTF8Bytes(System.String)">
            <summary>
            Encodes all the characters in the specified <see cref="T:System.String" /> into a sequence of bytes using the <see cref="P:System.Text.Encoding.UTF8" /> encoding.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to convert.</param>
            <returns>
            A <see cref="T:System.Byte" />[] containing the results of encoding the specified set of characters.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringExtensions.ToUnicodeBytes(System.String)">
            <summary>
            Encodes all the characters in the specified <see cref="T:System.String" /> into a sequence of bytes using the <see cref="P:System.Text.Encoding.Unicode" /> encoding.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to convert.</param>
            <returns>
            A <see cref="T:System.Byte" />[] containing the results of encoding the specified set of characters.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringExtensions.ToBase64String(System.String,System.Text.Encoding)">
            <summary>
            Converts this <see cref="T:System.String" /> to its equivalent base-64 <see cref="T:System.String" /> representation using the specified encoding.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to convert.</param>
            <param name="encoding">The encoding be used to encode this <see cref="T:System.String" />.</param>
            <returns>
            The equivalent <see cref="T:System.String" /> representation that is encoded with base-64 using the specified encoding.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringExtensions.FromBase64String(System.String,System.Text.Encoding)">
            <summary>
            Converts this <see cref="T:System.String" /> from its equivalent base-64 <see cref="T:System.String" /> representation using the specified encoding.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to convert.</param>
            <param name="encoding">The encoding be used to encode the resulting binary to a <see cref="T:System.String" />.</param>
            <returns>
            The equivalent <see cref="T:System.String" /> representation that is decoded from a base-64 <see cref="T:System.String" /> using the specified encoding.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringExtensions.SplitToLines(System.String)">
            <summary>
            Splits this <see cref="T:System.String" /> into an array of lines, which are separated by either a CR or a CRLF separator.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to split.</param>
            <returns>
            A new <see cref="T:System.String" />[] that represents the lines of the original <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringExtensions.SplitToLines(System.String,System.Boolean)">
            <summary>
            Splits this <see cref="T:System.String" /> into an array of lines, which are separated by either a CR or a CRLF separator.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to split.</param>
            <param name="removeEmptyEntries"><see langword="true" /> to remove empty lines.</param>
            <returns>
            A new <see cref="T:System.String" />[] that represents the lines of the original <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringExtensions.ToDateTime(System.String,System.String)">
            <summary>
            Converts this <see cref="T:System.String" /> to its equivalent <see cref="T:System.DateTime" /> representation using the specified format. If conversion failed, <see langword="null" /> is returned.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to convert.</param>
            <param name="format">A <see cref="T:System.String" /> value specifying the format that is used to convert this <see cref="T:System.DateTime" />.</param>
            <returns>
            The converted <see cref="T:System.DateTime" /> value or <see langword="null" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringExtensions.ToTimeSpan(System.String,System.String)">
            <summary>
            Converts this <see cref="T:System.String" /> to its equivalent <see cref="T:System.TimeSpan" /> representation using the specified format. If conversion failed, <see langword="null" /> is returned.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to convert.</param>
            <param name="format">A <see cref="T:System.String" /> value specifying the format that is used to convert this <see cref="T:System.TimeSpan" />.</param>
            <returns>
            The converted <see cref="T:System.TimeSpan" /> value or <see langword="null" />, if conversion failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringExtensions.CompareTo(System.String,System.String,BytecodeApi.SpecialStringComparison)">
            <summary>
            Compares this <see cref="T:System.String" /> with a specified <see cref="T:System.String" /> object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified string. One or multiple <see cref="T:BytecodeApi.SpecialStringComparison" /> flags specify what comparison properties apply.
            </summary>
            <param name="strA">A <see cref="T:System.String" /> to compare to <paramref name="strB" />.</param>
            <param name="strB">A <see cref="T:System.String" /> to compare to <paramref name="strA" />.</param>
            <param name="comparison">The <see cref="T:BytecodeApi.SpecialStringComparison" /> flags specifying what comparison properties apply.</param>
            <returns>
            A signed integer that indicates the relative values of <paramref name="strA" /> and <paramref name="strB" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringExtensions.Contains(System.String,System.String,BytecodeApi.SpecialStringComparison)">
            <summary>
            Returns a <see cref="T:System.Boolean" /> value indicating whether a specified substring occurs within this <see cref="T:System.String" />. One or multiple <see cref="T:BytecodeApi.SpecialStringComparison" /> flags specify what comparison properties apply.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to check.</param>
            <param name="value">The <see cref="T:System.String" /> to compare.</param>
            <param name="comparison">The <see cref="T:BytecodeApi.SpecialStringComparison" /> flags specifying what comparison properties apply.</param>
            <returns>
            <see langword="true" />, if this <see cref="T:System.String" /> contains the specified <see cref="T:System.String" />;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringExtensions.StartsWith(System.String,System.String,BytecodeApi.SpecialStringComparison)">
            <summary>
            Determines whether the beginning of this <see cref="T:System.String" /> instance matches the specified <see cref="T:System.String" />. One or multiple <see cref="T:BytecodeApi.SpecialStringComparison" /> flags specify what comparison properties apply.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to check.</param>
            <param name="value">The <see cref="T:System.String" /> to compare.</param>
            <param name="comparison">The <see cref="T:BytecodeApi.SpecialStringComparison" /> flags specifying what comparison properties apply.</param>
            <returns>
            <see langword="true" />, if value matches the beginning of this <see cref="T:System.String" />;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringExtensions.EndsWith(System.String,System.String,BytecodeApi.SpecialStringComparison)">
            <summary>
            Determines whether the end of this <see cref="T:System.String" /> instance matches the specified <see cref="T:System.String" />. One or multiple <see cref="T:BytecodeApi.SpecialStringComparison" /> flags specify what comparison properties apply.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to check.</param>
            <param name="value">The <see cref="T:System.String" /> to compare.</param>
            <param name="comparison">The <see cref="T:BytecodeApi.SpecialStringComparison" /> flags specifying what comparison properties apply.</param>
            <returns>
            <see langword="true" />, if value matches the end of this <see cref="T:System.String" />;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringExtensions.SubstringFrom(System.String,System.String)">
            <summary>
            Returns the portion of this <see cref="T:System.String" /> after the first occurrence of <paramref name="value" />, excluding the contents of the searched <see cref="T:System.String" />.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be processed.</param>
            <param name="value">The <see cref="T:System.String" /> that is searched for in <paramref name="str" />.</param>
            <returns>
            The portion of this <see cref="T:System.String" /> after the first occurrence of <paramref name="value" />, excluding the contents of the searched <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringExtensions.SubstringFrom(System.String,System.String,System.Boolean)">
            <summary>
            Returns the portion of this <see cref="T:System.String" /> after the first or last occurrence of <paramref name="value" />, excluding the contents of the searched <see cref="T:System.String" />. If <paramref name="findLast" /> is <see langword="true" />, the last occurrence of <paramref name="value" /> is searched.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be processed.</param>
            <param name="value">The <see cref="T:System.String" /> that is searched for in <paramref name="str" />.</param>
            <param name="findLast"><see langword="true" /> to find the last occurrence of <paramref name="value" />; otherwise, <see langword="false" /> to find the first occurrence.</param>
            <returns>
            The portion of this <see cref="T:System.String" /> after the first or last occurrence of <paramref name="value" />, excluding the contents of the searched <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringExtensions.SubstringFrom(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Returns the portion of this <see cref="T:System.String" /> after the first or last occurrence of <paramref name="value" />. If <paramref name="findLast" /> is <see langword="true" />, the last occurrence of <paramref name="value" /> is searched. If <paramref name="inclusive" /> is <see langword="true" />, the contents of <paramref name="value" /> are included in the result.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be processed.</param>
            <param name="value">The <see cref="T:System.String" /> that is searched for in <paramref name="str" />.</param>
            <param name="findLast"><see langword="true" /> to find the last occurrence of <paramref name="value" />; otherwise, <see langword="false" /> to find the first occurrence.</param>
            <param name="inclusive"><see langword="true" /> to include the contents of <paramref name="value" />; otherwise, <see langword="false" /> to exclude the contents of <paramref name="value" />.</param>
            <returns>
            The portion of this <see cref="T:System.String" /> after the first or last occurrence of <paramref name="value" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringExtensions.SubstringFrom(System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Returns the portion of this <see cref="T:System.String" /> after the first or last occurrence of <paramref name="value" />. If <paramref name="findLast" /> is <see langword="true" />, the last occurrence of <paramref name="value" /> is searched. If <paramref name="inclusive" /> is <see langword="true" />, the contents of <paramref name="value" /> are included in the result.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be processed.</param>
            <param name="value">The <see cref="T:System.String" /> that is searched for in <paramref name="str" />.</param>
            <param name="findLast"><see langword="true" /> to find the last occurrence of <paramref name="value" />; otherwise, <see langword="false" /> to find the first occurrence.</param>
            <param name="inclusive"><see langword="true" /> to include the contents of <paramref name="value" />; otherwise, <see langword="false" /> to exclude the contents of <paramref name="value" />.</param>
            <param name="ignoreCase"><see langword="true" /> to ignore character casing during comparison.</param>
            <returns>
            The portion of this <see cref="T:System.String" /> after the first or last occurrence of <paramref name="value" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringExtensions.SubstringUntil(System.String,System.String)">
            <summary>
            Returns the portion of this <see cref="T:System.String" /> before the first occurrence of <paramref name="value" />, excluding the contents of the searched <see cref="T:System.String" />.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be processed.</param>
            <param name="value">The <see cref="T:System.String" /> that is searched for in <paramref name="str" />.</param>
            <returns>
            The portion of this <see cref="T:System.String" /> before the first occurrence of <paramref name="value" />, excluding the contents of the searched <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringExtensions.SubstringUntil(System.String,System.String,System.Boolean)">
            <summary>
            Returns the portion of this <see cref="T:System.String" /> before the first or last occurrence of <paramref name="value" />, excluding the contents of the searched <see cref="T:System.String" />. If <paramref name="findLast" /> is <see langword="true" />, the last occurrence of <paramref name="value" /> is searched.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be processed.</param>
            <param name="value">The <see cref="T:System.String" /> that is searched for in <paramref name="str" />.</param>
            <param name="findLast"><see langword="true" /> to find the last occurrence of <paramref name="value" />; otherwise, <see langword="false" /> to find the first occurrence.</param>
            <returns>
            The portion of this <see cref="T:System.String" /> before the first or last occurrence of <paramref name="value" />, excluding the contents of the searched <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringExtensions.SubstringUntil(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Returns the portion of this <see cref="T:System.String" /> before the first or last occurrence of <paramref name="value" />. If <paramref name="findLast" /> is <see langword="true" />, the last occurrence of <paramref name="value" /> is searched. If <paramref name="inclusive" /> is <see langword="true" />, the contents of <paramref name="value" /> are included in the result.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be processed.</param>
            <param name="value">The <see cref="T:System.String" /> that is searched for in <paramref name="str" />.</param>
            <param name="findLast"><see langword="true" /> to find the last occurrence of <paramref name="value" />; otherwise, <see langword="false" /> to find the first occurrence.</param>
            <param name="inclusive"><see langword="true" /> to include the contents of <paramref name="value" />; otherwise, <see langword="false" /> to exclude the contents of <paramref name="value" />.</param>
            <returns>
            The portion of this <see cref="T:System.String" /> before the first or last occurrence of <paramref name="value" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringExtensions.SubstringUntil(System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Returns the portion of this <see cref="T:System.String" /> before the first or last occurrence of <paramref name="value" />. If <paramref name="findLast" /> is <see langword="true" />, the last occurrence of <paramref name="value" /> is searched. If <paramref name="inclusive" /> is <see langword="true" />, the contents of <paramref name="value" /> are included in the result.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be processed.</param>
            <param name="value">The <see cref="T:System.String" /> that is searched for in <paramref name="str" />.</param>
            <param name="findLast"><see langword="true" /> to find the last occurrence of <paramref name="value" />; otherwise, <see langword="false" /> to find the first occurrence.</param>
            <param name="inclusive"><see langword="true" /> to include the contents of <paramref name="value" />; otherwise, <see langword="false" /> to exclude the contents of <paramref name="value" />.</param>
            <param name="ignoreCase"><see langword="true" /> to ignore character casing during comparison.</param>
            <returns>
            The portion of this <see cref="T:System.String" /> before the first or last occurrence of <paramref name="value" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringExtensions.Left(System.String,System.Int32)">
            <summary>
            Returns a <see cref="T:System.String" /> containing a specified number of characters from the left side of this <see cref="T:System.String" />. If this <see cref="T:System.String" /> is longer than <paramref name="length" />, the <see cref="T:System.String" /> is truncated by the specified <paramref name="length" /> parameter, otherwise, the original <see cref="T:System.String" /> is returned.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be truncated.</param>
            <param name="length">The amount of characters to which this <see cref="T:System.String" /> is truncated.</param>
            <returns>
            If this <see cref="T:System.String" /> is longer than <paramref name="length" />, the fraction truncated by the specified <paramref name="length" /> parameter;
            otherwise, the original <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringExtensions.Right(System.String,System.Int32)">
            <summary>
            Returns a <see cref="T:System.String" /> containing a specified number of characters from the right side of this <see cref="T:System.String" />. If this <see cref="T:System.String" /> is longer than <paramref name="length" />, the <see cref="T:System.String" /> is truncated by the specified <paramref name="length" /> parameter, otherwise, the original <see cref="T:System.String" /> is returned.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be truncated.</param>
            <param name="length">The amount of characters to which this <see cref="T:System.String" /> is truncated.</param>
            <returns>
            If this <see cref="T:System.String" /> is longer than <paramref name="length" />, the fraction truncated by the specified <paramref name="length" /> parameter;
            otherwise, the original <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringExtensions.PadCenter(System.String,System.Int32)">
            <summary>
            Returns a new <see cref="T:System.String" /> that aligns the characters in this <see cref="T:System.String" /> by padding them on both the right and the left with spaces, for a specified total length, biased to the left in case right and left padding width differes by one.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be center padded.</param>
            <param name="totalWidth">The number of characters in the resulting <see cref="T:System.String" />, equal to the number of original characters plus any additional padding characters.</param>
            <returns>
            A new <see cref="T:System.String" /> that is equivalent to this <see cref="T:System.String" />, but centered on the left and the right with as many spaces as needed to create a length of <paramref name="totalWidth" />. If <paramref name="totalWidth" /> is less than or equal to the length of this <see cref="T:System.String" />, the method returns the original <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringExtensions.PadCenter(System.String,System.Int32,System.Char)">
            <summary>
            Returns a new <see cref="T:System.String" /> that aligns the characters in this <see cref="T:System.String" /> by padding them on both the right and the left with a specified unicode character, for a specified total length, biased to the left in case right and left padding width differes by one.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be center padded.</param>
            <param name="totalWidth">The number of characters in the resulting <see cref="T:System.String" />, equal to the number of original characters plus any additional padding characters.</param>
            <param name="paddingChar">The padding character.</param>
            <returns>
            A new <see cref="T:System.String" /> that is equivalent to this <see cref="T:System.String" />, but centered on the left and the right with as many padding characters as needed to create a length of <paramref name="totalWidth" />. If <paramref name="totalWidth" /> is less than or equal to the length of this <see cref="T:System.String" />, the method returns the original <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringExtensions.TrimStartString(System.String,System.String)">
            <summary>
            Removes all leading occurrences of the specified <see cref="T:System.String" /> from this <see cref="T:System.String" />.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be processed.</param>
            <param name="removedString">A <see cref="T:System.String" /> that is removed from the beginning of this <see cref="T:System.String" />.</param>
            <returns>
            The <see cref="T:System.String" /> that remains after all occurrences of <paramref name="removedString" /> are removed from the start of this <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringExtensions.TrimStartString(System.String,System.String,System.Boolean)">
            <summary>
            Removes all leading occurrences of the specified <see cref="T:System.String" /> from this <see cref="T:System.String" />.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be processed.</param>
            <param name="removedString">A <see cref="T:System.String" /> that is removed from the beginning of this <see cref="T:System.String" />.</param>
            <param name="ignoreCase"><see langword="true" /> to ignore character casing during comparison.</param>
            <returns>
            The <see cref="T:System.String" /> that remains after all occurrences of <paramref name="removedString" /> are removed from the start of this <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringExtensions.TrimStartString(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Removes one or all leading occurrences of the specified <see cref="T:System.String" /> from this <see cref="T:System.String" />. If <paramref name="removeOnlyFirst" /> is <see langword="true" />, only the first occurrence of <paramref name="removedString" /> is removed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be processed.</param>
            <param name="removedString">A <see cref="T:System.String" /> that is removed from the beginning of this <see cref="T:System.String" />.</param>
            <param name="ignoreCase"><see langword="true" /> to ignore character casing during comparison.</param>
            <param name="removeOnlyFirst"><see langword="true" /> to only remove the first occurrence of <paramref name="removedString" />.</param>
            <returns>
            The <see cref="T:System.String" /> that remains after one or all occurrences of <paramref name="removedString" /> are removed from the start of this <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringExtensions.TrimEndString(System.String,System.String)">
            <summary>
            Removes all trailing occurrences of the specified <see cref="T:System.String" /> from this <see cref="T:System.String" />.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be processed.</param>
            <param name="removedString">A <see cref="T:System.String" /> that is removed from the end of this <see cref="T:System.String" />.</param>
            <returns>
            The <see cref="T:System.String" /> that remains after all occurrences of <paramref name="removedString" /> are removed from the end of this <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringExtensions.TrimEndString(System.String,System.String,System.Boolean)">
            <summary>
            Removes all trailing occurrences of the specified <see cref="T:System.String" /> from this <see cref="T:System.String" />.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be processed.</param>
            <param name="removedString">A <see cref="T:System.String" /> that is removed from the end of this <see cref="T:System.String" />.</param>
            <param name="ignoreCase"><see langword="true" /> to ignore character casing during comparison.</param>
            <returns>
            The <see cref="T:System.String" /> that remains after all occurrences of <paramref name="removedString" /> are removed from the end of this <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringExtensions.TrimEndString(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Removes one or all trailing occurrences of the specified <see cref="T:System.String" /> from this <see cref="T:System.String" />. If <paramref name="removeOnlyFirst" /> is <see langword="true" />, only the first occurrence of <paramref name="removedString" /> is removed.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be processed.</param>
            <param name="removedString">A <see cref="T:System.String" /> that is removed from the end of this <see cref="T:System.String" />.</param>
            <param name="ignoreCase"><see langword="true" /> to ignore character casing during comparison.</param>
            <param name="removeOnlyFirst"><see langword="true" /> to only remove the first occurrence of <paramref name="removedString" />.</param>
            <returns>
            The <see cref="T:System.String" /> that remains after one or all occurrences of <paramref name="removedString" /> are removed from the end of this <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringExtensions.EnsureStartsWith(System.String,System.String)">
            <summary>
            Appends the specified <see cref="T:System.String" /> at the beginning of this <see cref="T:System.String" />, if it does not start with the contents of <paramref name="value" />.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to check.</param>
            <param name="value">The <see cref="T:System.String" /> to append, if this <see cref="T:System.String" /> does not start with the contents of <paramref name="value" />.</param>
            <returns>
            The original <see cref="T:System.String" />, if it starts with the contents of <paramref name="value" />;
            otherwise, the original <see cref="T:System.String" /> with the contents of <paramref name="value" /> appended to the beginning.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringExtensions.EnsureStartsWith(System.String,System.String,System.Boolean)">
            <summary>
            Appends the specified <see cref="T:System.String" /> at the beginning of this <see cref="T:System.String" />, if it does not start with the contents of <paramref name="value" />.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to check.</param>
            <param name="value">The <see cref="T:System.String" /> to append, if this <see cref="T:System.String" /> does not start with the contents of <paramref name="value" />.</param>
            <param name="ignoreCase"><see langword="true" /> to ignore character casing during comparison.</param>
            <returns>
            The original <see cref="T:System.String" />, if it starts with the contents of <paramref name="value" />;
            otherwise, the original <see cref="T:System.String" /> with the contents of <paramref name="value" /> appended to the beginning.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringExtensions.EnsureEndsWith(System.String,System.String)">
            <summary>
            Appends the specified <see cref="T:System.String" /> to this <see cref="T:System.String" />, if it does not end with the contents of <paramref name="value" />.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to check.</param>
            <param name="value">The <see cref="T:System.String" /> to append, if this <see cref="T:System.String" /> does not end with the contents of <paramref name="value" />.</param>
            <returns>
            The original <see cref="T:System.String" />, if it ends with the contents of <paramref name="value" />;
            otherwise, the original <see cref="T:System.String" /> with the contents of <paramref name="value" /> appended to it.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringExtensions.EnsureEndsWith(System.String,System.String,System.Boolean)">
            <summary>
            Appends the specified <see cref="T:System.String" /> to this <see cref="T:System.String" />, if it does not end with the contents of <paramref name="value" />.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to check.</param>
            <param name="value">The <see cref="T:System.String" /> to append, if this <see cref="T:System.String" /> does not end with the contents of <paramref name="value" />.</param>
            <param name="ignoreCase"><see langword="true" /> to ignore character casing during comparison.</param>
            <returns>
            The original <see cref="T:System.String" />, if it ends with the contents of <paramref name="value" />;
            otherwise, the original <see cref="T:System.String" /> with the contents of <paramref name="value" /> appended to it.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringExtensions.ReplaceMultiple(System.String,System.String,System.String[])">
            <summary>
            Returns a new <see cref="T:System.String" /> in which all occurrences of a any of the specified old values in the current instance are replaced with another specified string.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be processed.</param>
            <param name="newValue">The <see cref="T:System.String" /> to replace all occurrences of elements of <paramref name="oldValues" />.</param>
            <param name="oldValues">An array of <see cref="T:System.String" /> objects of which all are replaced with <paramref name="newValue" />.</param>
            <returns>
            A new <see cref="T:System.String" /> in which all occurrences of a any of the specified old values in the current instance are replaced with another specified string.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringExtensions.ReplaceFullMatch(System.String,System.String,System.String)">
            <summary>
            Returns a new <see cref="T:System.String" /> in which <paramref name="oldValue" /> has been replaced with <paramref name="newValue" />, only if this <see cref="T:System.String" /> is equal to <paramref name="oldValue" />.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be processed.</param>
            <param name="oldValue">The <see cref="T:System.String" /> which has to match this <see cref="T:System.String" /> exactly.</param>
            <param name="newValue">The <see cref="T:System.String" /> which is returned, if this <see cref="T:System.String" /> is equal to <paramref name="oldValue" />.</param>
            <returns>
            <paramref name="newValue" />, if this <see cref="T:System.String" /> is equal to <paramref name="oldValue" />;
            otherwise, the original <see cref="T:System.String" /> value.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringExtensions.ReplaceLineBreaks(System.String,System.String)">
            <summary>
            Replaces all occurrences of linebreaks ("\n" and "\r\n") in this <see cref="T:System.String" /> with a specified replacement value.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be processed.</param>
            <param name="newValue">The <see cref="T:System.String" /> which will replace "\n" and "\r\n" occurrences in this <see cref="T:System.String" />.</param>
            <returns>
            The original value of this <see cref="T:System.String" /> where "\r" and "\r\n" have been replaced with <paramref name="newValue" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringExtensions.Swap(System.String,System.String,System.String)">
            <summary>
            Exchanges all occurrences of <paramref name="a" /> with <paramref name="b" /> and vice versa in this <see cref="T:System.String" />.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be processed.</param>
            <param name="a">The <see cref="T:System.String" /> to be swapped with <paramref name="b" />.</param>
            <param name="b">The <see cref="T:System.String" /> to be swapped with <paramref name="a" />.</param>
            <returns>
            A new <see cref="T:System.String" /> where <paramref name="a" /> has been exchanged with <paramref name="b" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringExtensions.Reverse(System.String)">
            <summary>
            Reverses the sequence of all characters in this <see cref="T:System.String" />.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be processed.</param>
            <returns>
            A new <see cref="T:System.String" /> containing the characters from the original <see cref="T:System.String" /> in reversed order.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringExtensions.Repeat(System.String,System.Int32)">
            <summary>
            Generates a sequence that contains the repeated value of this <see cref="T:System.String" />.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be repeated.</param>
            <param name="count">A <see cref="T:System.Int32" /> value specifying the number of times to repeat this <see cref="T:System.String" />.</param>
            <returns>
            A new <see cref="T:System.String" /> composed of the repetition of the original <see cref="T:System.String" /> value.
            </returns>
        </member>
        <member name="M:BytecodeApi.StringExtensions.ChangeCasing(System.String,BytecodeApi.StringCasing)">
            <summary>
            Changes the casing of this <see cref="T:System.String" /> to the specified <see cref="T:BytecodeApi.StringCasing" />.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be processed.</param>
            <param name="casing">The <see cref="T:BytecodeApi.StringCasing" /> specifying the casing rule of the returned <see cref="T:System.String" />.</param>
            <returns>
            A new <see cref="T:System.String" /> with character casing changed using the specified <see cref="T:BytecodeApi.StringCasing" /> parameter.
            </returns>
        </member>
        <member name="T:BytecodeApi.TimeSpanExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.TimeSpan" /> objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.TimeSpanExtensions.ToNullIfDefault(System.TimeSpan)">
            <summary>
            Returns <see langword="null" />, if this <see cref="T:System.TimeSpan" /> object is <see cref="F:System.TimeSpan.Zero" />, otherwise its original value.
            </summary>
            <param name="value">The <see cref="T:System.TimeSpan" /> value to convert.</param>
            <returns>
            <see langword="null" />, if this <see cref="T:System.TimeSpan" /> object is <see cref="F:System.TimeSpan.Zero" />;
            otherwise, its original value.
            </returns>
        </member>
        <member name="M:BytecodeApi.TimeSpanExtensions.AddDays(System.TimeSpan,System.Double)">
            <summary>
            Returns a new <see cref="T:System.TimeSpan" /> object whose value is the sum of this <see cref="T:System.TimeSpan" /> and the specified days.
            </summary>
            <param name="timeSpan">The original <see cref="T:System.TimeSpan" /> value.</param>
            <param name="value">A <see cref="T:System.Double" /> value specifying the days to be added to this <see cref="T:System.TimeSpan" />.</param>
            <returns>
            A new <see cref="T:System.TimeSpan" /> object whose value is the sum of this <see cref="T:System.TimeSpan" /> and the specified days.
            </returns>
        </member>
        <member name="M:BytecodeApi.TimeSpanExtensions.AddHours(System.TimeSpan,System.Double)">
            <summary>
            Returns a new <see cref="T:System.TimeSpan" /> object whose value is the sum of this <see cref="T:System.TimeSpan" /> and the specified hours.
            </summary>
            <param name="timeSpan">The original <see cref="T:System.TimeSpan" /> value.</param>
            <param name="value">A <see cref="T:System.Double" /> value specifying the hours to be added to this <see cref="T:System.TimeSpan" />.</param>
            <returns>
            A new <see cref="T:System.TimeSpan" /> object whose value is the sum of this <see cref="T:System.TimeSpan" /> and the specified hours.
            </returns>
        </member>
        <member name="M:BytecodeApi.TimeSpanExtensions.AddMinutes(System.TimeSpan,System.Double)">
            <summary>
            Returns a new <see cref="T:System.TimeSpan" /> object whose value is the sum of this <see cref="T:System.TimeSpan" /> and the specified minutes.
            </summary>
            <param name="timeSpan">The original <see cref="T:System.TimeSpan" /> value.</param>
            <param name="value">A <see cref="T:System.Double" /> value specifying the minutes to be added to this <see cref="T:System.TimeSpan" />.</param>
            <returns>
            A new <see cref="T:System.TimeSpan" /> object whose value is the sum of this <see cref="T:System.TimeSpan" /> and the specified minutes.
            </returns>
        </member>
        <member name="M:BytecodeApi.TimeSpanExtensions.AddSeconds(System.TimeSpan,System.Double)">
            <summary>
            Returns a new <see cref="T:System.TimeSpan" /> object whose value is the sum of this <see cref="T:System.TimeSpan" /> and the specified seconds.
            </summary>
            <param name="timeSpan">The original <see cref="T:System.TimeSpan" /> value.</param>
            <param name="value">A <see cref="T:System.Double" /> value specifying the seconds to be added to this <see cref="T:System.TimeSpan" />.</param>
            <returns>
            A new <see cref="T:System.TimeSpan" /> object whose value is the sum of this <see cref="T:System.TimeSpan" /> and the specified seconds.
            </returns>
        </member>
        <member name="M:BytecodeApi.TimeSpanExtensions.AddMilliseconds(System.TimeSpan,System.Double)">
            <summary>
            Returns a new <see cref="T:System.TimeSpan" /> object whose value is the sum of this <see cref="T:System.TimeSpan" /> and the specified milliseconds.
            </summary>
            <param name="timeSpan">The original <see cref="T:System.TimeSpan" /> value.</param>
            <param name="value">A <see cref="T:System.Double" /> value specifying the milliseconds to be added to this <see cref="T:System.TimeSpan" />.</param>
            <returns>
            A new <see cref="T:System.TimeSpan" /> object whose value is the sum of this <see cref="T:System.TimeSpan" /> and the specified milliseconds.
            </returns>
        </member>
        <member name="M:BytecodeApi.TimeSpanExtensions.AddTicks(System.TimeSpan,System.Int64)">
            <summary>
            Returns a new <see cref="T:System.TimeSpan" /> object whose value is the sum of this <see cref="T:System.TimeSpan" /> and the specified ticks.
            </summary>
            <param name="timeSpan">The original <see cref="T:System.TimeSpan" /> value.</param>
            <param name="value">A <see cref="T:System.Double" /> value specifying the ticks to be added to this <see cref="T:System.TimeSpan" />.</param>
            <returns>
            A new <see cref="T:System.TimeSpan" /> object whose value is the sum of this <see cref="T:System.TimeSpan" /> and the specified ticks.
            </returns>
        </member>
        <member name="M:BytecodeApi.TimeSpanExtensions.SubtractDays(System.TimeSpan,System.Double)">
            <summary>
            Returns a new <see cref="T:System.TimeSpan" /> object whose value is the difference of this <see cref="T:System.TimeSpan" /> and the specified days.
            </summary>
            <param name="timeSpan">The original <see cref="T:System.TimeSpan" /> value.</param>
            <param name="value">A <see cref="T:System.Double" /> value specifying the days to be subtracted from this <see cref="T:System.TimeSpan" />.</param>
            <returns>
            A new <see cref="T:System.TimeSpan" /> object whose value is the difference of this <see cref="T:System.TimeSpan" /> and the specified days.
            </returns>
        </member>
        <member name="M:BytecodeApi.TimeSpanExtensions.SubtractHours(System.TimeSpan,System.Double)">
            <summary>
            Returns a new <see cref="T:System.TimeSpan" /> object whose value is the difference of this <see cref="T:System.TimeSpan" /> and the specified hours.
            </summary>
            <param name="timeSpan">The original <see cref="T:System.TimeSpan" /> value.</param>
            <param name="value">A <see cref="T:System.Double" /> value specifying the hours to be subtracted from this <see cref="T:System.TimeSpan" />.</param>
            <returns>
            A new <see cref="T:System.TimeSpan" /> object whose value is the difference of this <see cref="T:System.TimeSpan" /> and the specified hours.
            </returns>
        </member>
        <member name="M:BytecodeApi.TimeSpanExtensions.SubtractMinutes(System.TimeSpan,System.Double)">
            <summary>
            Returns a new <see cref="T:System.TimeSpan" /> object whose value is the difference of this <see cref="T:System.TimeSpan" /> and the specified minutes.
            </summary>
            <param name="timeSpan">The original <see cref="T:System.TimeSpan" /> value.</param>
            <param name="value">A <see cref="T:System.Double" /> value specifying the minutes to be subtracted from this <see cref="T:System.TimeSpan" />.</param>
            <returns>
            A new <see cref="T:System.TimeSpan" /> object whose value is the difference of this <see cref="T:System.TimeSpan" /> and the specified minutes.
            </returns>
        </member>
        <member name="M:BytecodeApi.TimeSpanExtensions.SubtractSeconds(System.TimeSpan,System.Double)">
            <summary>
            Returns a new <see cref="T:System.TimeSpan" /> object whose value is the difference of this <see cref="T:System.TimeSpan" /> and the specified seconds.
            </summary>
            <param name="timeSpan">The original <see cref="T:System.TimeSpan" /> value.</param>
            <param name="value">A <see cref="T:System.Double" /> value specifying the seconds to be subtracted from this <see cref="T:System.TimeSpan" />.</param>
            <returns>
            A new <see cref="T:System.TimeSpan" /> object whose value is the difference of this <see cref="T:System.TimeSpan" /> and the specified seconds.
            </returns>
        </member>
        <member name="M:BytecodeApi.TimeSpanExtensions.SubtractMilliseconds(System.TimeSpan,System.Double)">
            <summary>
            Returns a new <see cref="T:System.TimeSpan" /> object whose value is the difference of this <see cref="T:System.TimeSpan" /> and the specified milliseconds.
            </summary>
            <param name="timeSpan">The original <see cref="T:System.TimeSpan" /> value.</param>
            <param name="value">A <see cref="T:System.Double" /> value specifying the milliseconds to be subtracted from this <see cref="T:System.TimeSpan" />.</param>
            <returns>
            A new <see cref="T:System.TimeSpan" /> object whose value is the difference of this <see cref="T:System.TimeSpan" /> and the specified milliseconds.
            </returns>
        </member>
        <member name="M:BytecodeApi.TimeSpanExtensions.SubtractTicks(System.TimeSpan,System.Int64)">
            <summary>
            Returns a new <see cref="T:System.TimeSpan" /> object whose value is the difference of this <see cref="T:System.TimeSpan" /> and the specified ticks.
            </summary>
            <param name="timeSpan">The original <see cref="T:System.TimeSpan" /> value.</param>
            <param name="value">A <see cref="T:System.Double" /> value specifying the ticks to be subtracted from this <see cref="T:System.TimeSpan" />.</param>
            <returns>
            A new <see cref="T:System.TimeSpan" /> object whose value is the difference of this <see cref="T:System.TimeSpan" /> and the specified ticks.
            </returns>
        </member>
        <member name="M:BytecodeApi.TimeSpanExtensions.ToStringInvariant(System.TimeSpan,System.String)">
            <summary>
            Converts the value of this <see cref="T:System.TimeSpan" /> to its equivalent <see cref="T:System.String" /> representation using a specified format and the invariant culture.
            </summary>
            <param name="timeSpan">The <see cref="T:System.TimeSpan" /> value to convert.</param>
            <param name="format">A <see cref="T:System.String" /> value with the format that is used to convert this <see cref="T:System.TimeSpan" />.</param>
            <returns>
            The equivalent <see cref="T:System.String" /> representation of this <see cref="T:System.TimeSpan" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.UIExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with WPF objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.UIExtensions.ToBoolean(System.Windows.Visibility)">
            <summary>
            Converts this <see cref="T:System.Windows.Visibility" /> value to its equivalent <see cref="T:System.Boolean" /> representation. <see cref="F:System.Windows.Visibility.Visible" /> is converted to <see langword="true" />, <see cref="F:System.Windows.Visibility.Collapsed" /> is converted to <see langword="false" /> and <see cref="F:System.Windows.Visibility.Hidden" /> is converted to <see langword="null" />.
            </summary>
            <param name="visibility">The <see cref="T:System.Windows.Visibility" /> value to convert.</param>
            <returns>
            <see langword="true" />, if <paramref name="visibility" /> is equal to <see cref="F:System.Windows.Visibility.Visible" />;
            <see langword="false" />, if <paramref name="visibility" /> is equal to <see cref="F:System.Windows.Visibility.Collapsed" />;
            otherwise, <see langword="null" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.UIExtensions.Refresh(System.Windows.Threading.DispatcherObject)">
            <summary>
            Invokes an empty <see cref="T:System.Action" /> on the <see cref="T:System.Windows.Threading.Dispatcher" /> of this <see cref="T:System.Windows.Threading.DispatcherObject" />, using the <see cref="F:System.Windows.Threading.DispatcherPriority.Render" /> priority, thereby refreshing the UI.
            </summary>
            <param name="dispatcherObject">The <see cref="T:System.Windows.Threading.DispatcherObject" /> to be refreshed.</param>
        </member>
        <member name="M:BytecodeApi.UIExtensions.Refresh(System.Windows.Threading.DispatcherObject,System.Windows.Threading.DispatcherPriority)">
            <summary>
            Invokes an empty <see cref="T:System.Action" /> on the <see cref="T:System.Windows.Threading.Dispatcher" /> of this <see cref="T:System.Windows.Threading.DispatcherObject" />, using the specified priority, thereby refreshing the UI.
            </summary>
            <param name="dispatcherObject">The <see cref="T:System.Windows.Threading.DispatcherObject" /> to be refreshed.</param>
            <param name="priority">The <see cref="T:System.Windows.Threading.DispatcherPriority" /> to be used during <see cref="T:System.Windows.Threading.Dispatcher" /> invocation.</param>
        </member>
        <member name="M:BytecodeApi.UIExtensions.GetValue``1(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
            <summary>
            Returns the current effective value of a <see cref="T:System.Windows.DependencyProperty" /> on this instance of a <see cref="T:System.Windows.DependencyObject" />.
            </summary>
            <typeparam name="T">The return type of the <see cref="T:System.Windows.DependencyProperty" />.</typeparam>
            <param name="dependencyObject">The <see cref="T:System.Windows.DependencyObject" /> to retrieve the value from.</param>
            <param name="dependencyProperty">The <see cref="T:System.Windows.DependencyProperty" /> identifier of the property to retrieve the value for.</param>
            <returns>
            The effective value of <paramref name="dependencyProperty" /> on this instance of a <see cref="T:System.Windows.DependencyObject" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.UIExtensions.FindParent``1(System.Windows.DependencyObject,BytecodeApi.UITreeType)">
            <summary>
            Tries to find the closest parent of this <see cref="T:System.Windows.DependencyObject" /> matching the specified type by traversing either the visual or the logical tree.
            </summary>
            <typeparam name="T">The explicit type of the parent to search for.</typeparam>
            <param name="dependencyObject">The <see cref="T:System.Windows.DependencyObject" /> to traverse the tree from.</param>
            <param name="treeType">A <see cref="T:BytecodeApi.UITreeType" /> value indicating whether to use the <see cref="T:System.Windows.LogicalTreeHelper" /> or the <see cref="T:System.Windows.Media.VisualTreeHelper" />.</param>
            <returns>
            The closest visual or logical parent of this <see cref="T:System.Windows.DependencyObject" />, depending on <paramref name="treeType" />, that is of type <typeparamref name="T" />, if found;
            otherwise, <see langword="null" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.UIExtensions.FindChildren``1(System.Windows.DependencyObject,BytecodeApi.UITreeType)">
            <summary>
            Finds all children of this <see cref="T:System.Windows.DependencyObject" /> matching the specified type by traversing either the visual or the logical tree recursively. If no children have been found, an empty array is returned.
            </summary>
            <typeparam name="T">The explicit type of the children to search for.</typeparam>
            <param name="dependencyObject">The <see cref="T:System.Windows.DependencyObject" /> to traverse the tree recursively.</param>
            <param name="treeType">A <see cref="T:BytecodeApi.UITreeType" /> value indicating whether to use the <see cref="T:System.Windows.LogicalTreeHelper" /> or the <see cref="T:System.Windows.Media.VisualTreeHelper" />.</param>
            <returns>
            An array of the specified type with all children, depending on <paramref name="treeType" />, that can be casted to <typeparamref name="T" />. If no children have been found, an empty array is returned.
            </returns>
        </member>
        <member name="M:BytecodeApi.UIExtensions.FindResource``1(System.Windows.FrameworkElement,System.Object)">
            <summary>
            Searches for a resource with the specified key, and throws an <see cref="T:System.Exception" />, if the requested resource is not found or not of the specified type.
            </summary>
            <typeparam name="T">The return type of the resource.</typeparam>
            <param name="frameworkElement">The <see cref="T:System.Windows.FrameworkElement" /> to search in.</param>
            <param name="key">The key identifier for the requested resource.</param>
            <returns>
            The requested resource. If no resource with the specified key was found or was not of the specified type, an <see cref="T:System.Exception" /> is thrown. An <see cref="F:System.Windows.DependencyProperty.UnsetValue" />. value might also be returned in the <see cref="T:System.Exception" /> case.
            </returns>
        </member>
        <member name="M:BytecodeApi.UIExtensions.FindResource``1(System.Windows.Application,System.Object)">
            <summary>
            Searches for a user interface (UI) resource, such as a <see cref="T:System.Windows.Style" /> or <see cref="T:System.Windows.Media.Brush" />, with the specified key, and throws an <see cref="T:System.Exception" />, if the requested resource is not found (see XAML Resources) or is not of the specified type.
            </summary>
            <typeparam name="T">The return type of the resource.</typeparam>
            <param name="application">The <see cref="T:System.Windows.Application" /> to search in.</param>
            <param name="key">The name of the resource to find.</param>
            <returns>
            The requested resource object. If the requested resource is not found or is not of the specified type, a <see cref="T:System.Windows.ResourceReferenceKeyNotFoundException" /> is thrown.
            </returns>
        </member>
        <member name="M:BytecodeApi.UIExtensions.TryFindResource``1(System.Windows.FrameworkElement,System.Object)">
            <summary>
            Searches for a resource with the specified key, and returns that resource, if found and of type specified type.
            </summary>
            <typeparam name="T">The return type of the resource.</typeparam>
            <param name="frameworkElement">The <see cref="T:System.Windows.FrameworkElement" /> to search in.</param>
            <param name="key">The key identifier of the resource to be found.</param>
            <returns>
            The found resource, or <see langword="null" />, if no resource with the provided key is found or a resource was found, but it does not match the specified type.
            </returns>
        </member>
        <member name="M:BytecodeApi.UIExtensions.TryFindResource``1(System.Windows.Application,System.Object)">
            <summary>
            Searches for a resource with the specified key, and returns that resource, if found and of type specified type.
            </summary>
            <typeparam name="T">The return type of the resource.</typeparam>
            <param name="application">The <see cref="T:System.Windows.Application" /> to search in.</param>
            <param name="key">The name of the resource to find.</param>
            <returns>
            The found resource, or <see langword="null" />, if no resource with the provided key is found or a resource was found, but it does not match the specified type.
            </returns>
        </member>
        <member name="M:BytecodeApi.UIExtensions.Validate(System.Windows.DependencyObject)">
            <summary>
            Validates this <see cref="T:System.Windows.DependencyObject" /> and all of its children and returns <see langword="true" />, if validation succeeded.
            </summary>
            <param name="dependencyObject">The <see cref="T:System.Windows.DependencyObject" /> to validate.</param>
            <returns>
            <see langword="true" />, if validation succeeded;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.UIExtensions.Validate(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Validates this <see cref="T:System.Windows.DependencyObject" /> and returns <see langword="true" />, if validation succeeded. If <paramref name="validateChildren" /> is set to <see langword="true" />, logical children are validated recursively.
            </summary>
            <param name="dependencyObject">The <see cref="T:System.Windows.DependencyObject" /> to validate.</param>
            <param name="validateChildren"><see langword="true" /> to validate children recursively in addition to this <see cref="T:System.Windows.DependencyObject" />.</param>
            <returns>
            <see langword="true" />, if validation succeeded;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.UIExtensions.GetVisibility(System.Windows.UIElement)">
            <summary>
            Returns the converted <see cref="T:System.Windows.Visibility" /> of this <see cref="T:System.Windows.UIElement" />.
            </summary>
            <param name="uiElement">The <see cref="T:System.Windows.UIElement" /> to be tested.</param>
            <returns>
            <see langword="true" />, if the <see cref="P:System.Windows.UIElement.Visibility" /> property of this <see cref="T:System.Windows.UIElement" /> is equal to <see cref="F:System.Windows.Visibility.Visible" />;
            <see langword="false" />, if <see cref="P:System.Windows.UIElement.Visibility" /> is equal to <see cref="F:System.Windows.Visibility.Collapsed" />;
            otherwise, <see langword="null" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.UIExtensions.SetVisibility(System.Windows.UIElement,System.Boolean)">
            <summary>
            Sets the <see cref="T:System.Windows.Visibility" /> of this <see cref="T:System.Windows.UIElement" />.
            </summary>
            <param name="uiElement">The <see cref="T:System.Windows.UIElement" /> to be changed.</param>
            <param name="visible"><see langword="true" /> to set <see cref="P:System.Windows.UIElement.Visibility" /> to <see cref="F:System.Windows.Visibility.Visible" />; <see langword="false" /> to use <see cref="F:System.Windows.Visibility.Collapsed" />.</param>
        </member>
        <member name="M:BytecodeApi.UIExtensions.SetVisibility(System.Windows.UIElement,System.Boolean,System.Boolean)">
            <summary>
            Sets the <see cref="T:System.Windows.Visibility" /> of this <see cref="T:System.Windows.UIElement" />.
            </summary>
            <param name="uiElement">The <see cref="T:System.Windows.UIElement" /> to be changed.</param>
            <param name="visible"><see langword="true" /> to set <see cref="P:System.Windows.UIElement.Visibility" /> to <see cref="F:System.Windows.Visibility.Visible" />; <see langword="false" /> to use <see cref="F:System.Windows.Visibility.Collapsed" />, or <see cref="F:System.Windows.Visibility.Hidden" /> according to the <paramref name="preserveSpace" /> parameter.</param>
            <param name="preserveSpace"><see langword="true" /> to use <see cref="F:System.Windows.Visibility.Hidden" />; <see langword="false" /> to use <see cref="F:System.Windows.Visibility.Collapsed" />. Only applies if <paramref name="visible" /> is <see langword="false" />.</param>
        </member>
        <member name="M:BytecodeApi.UIExtensions.Show(System.Windows.UIElement)">
            <summary>
            Sets the <see cref="P:System.Windows.UIElement.Visibility" /> property of this <see cref="T:System.Windows.UIElement" /> to <see cref="F:System.Windows.Visibility.Visible" />.
            </summary>
            <param name="uiElement">The <see cref="T:System.Windows.UIElement" /> to be changed.</param>
        </member>
        <member name="M:BytecodeApi.UIExtensions.Hide(System.Windows.UIElement)">
            <summary>
            Sets the <see cref="P:System.Windows.UIElement.Visibility" /> property of this <see cref="T:System.Windows.UIElement" /> to <see cref="F:System.Windows.Visibility.Collapsed" />.
            </summary>
            <param name="uiElement">The <see cref="T:System.Windows.UIElement" /> to be changed.</param>
        </member>
        <member name="M:BytecodeApi.UIExtensions.Hide(System.Windows.UIElement,System.Boolean)">
            <summary>
            Sets the <see cref="P:System.Windows.UIElement.Visibility" /> property of this <see cref="T:System.Windows.UIElement" /> to <see cref="F:System.Windows.Visibility.Collapsed" /> or <see cref="F:System.Windows.Visibility.Hidden" /> based on the <paramref name="preserveSpace" /> parameter.
            </summary>
            <param name="uiElement">The <see cref="T:System.Windows.UIElement" /> to be changed.</param>
            <param name="preserveSpace"><see langword="true" /> to use <see cref="F:System.Windows.Visibility.Hidden" />; <see langword="false" /> to use <see cref="F:System.Windows.Visibility.Collapsed" />.</param>
        </member>
        <member name="M:BytecodeApi.UIExtensions.MoveCaretToEnd(System.Windows.Controls.TextBox)">
            <summary>
            Sets the insertion position index of the caret to the end of this <see cref="T:System.Windows.Controls.TextBox" />.
            </summary>
            <param name="textBox">The <see cref="T:System.Windows.Controls.TextBox" /> to be processed.</param>
        </member>
        <member name="M:BytecodeApi.UIExtensions.ScrollToTop(System.Windows.FrameworkElement)">
            <summary>
            Attempts to bring the top left corner of this <see cref="T:System.Windows.FrameworkElement" /> into view.
            </summary>
            <param name="frameworkElement">The <see cref="T:System.Windows.FrameworkElement" /> to be processed.</param>
        </member>
        <member name="T:BytecodeApi.WebRequestExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Net.WebRequest" /> and related objects.
            </summary>
        </member>
        <member name="M:BytecodeApi.WebRequestExtensions.GetCookies(System.Net.CookieContainer)">
            <summary>
            Gets the cookies from all domains from this <see cref="T:System.Net.CookieContainer" />.
            </summary>
            <param name="cookieContainer">The <see cref="T:System.Net.CookieContainer" /> to get the cookies from.</param>
            <returns>
            A new <see cref="T:System.Net.Cookie" />[] with the cookies from all domains from this <see cref="T:System.Net.CookieContainer" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.XmlExtensions">
            <summary>
            Provides a set of <see langword="static" /> methods for interaction with <see cref="T:System.Xml.Linq.XDocument" /> and related objects.
            </summary>
        </member>
        <member name="P:BytecodeApi.XmlExtensions.FormattedXmlWriterSettings">
            <summary>
            Represents the <see cref="T:System.Xml.XmlWriterSettings" /> object that is used in the <see cref="M:BytecodeApi.XmlExtensions.SaveFormatted(System.Xml.Linq.XDocument,System.String)" /> method. This <see cref="T:System.Object" /> is <see langword="static" /> and can be modified.
            <para />
            The default value is <see langword="new" /> <see cref="T:System.Xml.XmlWriterSettings" /> { Indent = <see langword="true" />, IndentChars = "\t" }
            </summary>
        </member>
        <member name="M:BytecodeApi.XmlExtensions.Save(System.Xml.Linq.XDocument,System.String,System.Xml.XmlWriterSettings)">
            <summary>
            Serializes this <see cref="T:System.Xml.Linq.XDocument" /> to a file with the specified filename.
            </summary>
            <param name="xml">The <see cref="T:System.Xml.Linq.XDocument" /> to be serialized.</param>
            <param name="path">A <see cref="T:System.String" /> specifying the path of a file to which this <see cref="T:System.Xml.Linq.XDocument" /> is written to.</param>
            <param name="settings">An <see cref="T:System.Xml.XmlWriterSettings" /> value with serialization settings.</param>
        </member>
        <member name="M:BytecodeApi.XmlExtensions.Save(System.Xml.Linq.XDocument,System.IO.Stream,System.Xml.XmlWriterSettings)">
            <summary>
            Serializes this <see cref="T:System.Xml.Linq.XDocument" /> to a <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="xml">The <see cref="T:System.Xml.Linq.XDocument" /> to be serialized.</param>
            <param name="stream">The <see cref="T:System.IO.Stream" /> to which this <see cref="T:System.Xml.Linq.XDocument" /> is written to.</param>
            <param name="settings">An <see cref="T:System.Xml.XmlWriterSettings" /> value with serialization settings.</param>
        </member>
        <member name="M:BytecodeApi.XmlExtensions.SaveFormatted(System.Xml.Linq.XDocument,System.String)">
            <summary>
            Serializes this <see cref="T:System.Xml.Linq.XDocument" /> to a file with the specified filename using the formatting settings as specified in <see cref="P:BytecodeApi.XmlExtensions.FormattedXmlWriterSettings" />.
            </summary>
            <param name="xml">The <see cref="T:System.Xml.Linq.XDocument" /> to be serialized.</param>
            <param name="path">A <see cref="T:System.String" /> specifying the path of a file to which this <see cref="T:System.Xml.Linq.XDocument" /> is written to.</param>
        </member>
        <member name="M:BytecodeApi.XmlExtensions.SaveFormatted(System.Xml.Linq.XDocument,System.IO.Stream)">
            <summary>
            Serializes this <see cref="T:System.Xml.Linq.XDocument" /> to a <see cref="T:System.IO.Stream" /> using the formatting settings as specified in <see cref="P:BytecodeApi.XmlExtensions.FormattedXmlWriterSettings" />.
            </summary>
            <param name="xml">The <see cref="T:System.Xml.Linq.XDocument" /> to be serialized.</param>
            <param name="stream">The <see cref="T:System.IO.Stream" /> to which this <see cref="T:System.Xml.Linq.XDocument" /> is written to.</param>
        </member>
        <member name="M:BytecodeApi.XmlExtensions.Attribute(System.Xml.Linq.XElement,System.Xml.Linq.XName,System.Object)">
            <summary>
            Returns the <see cref="T:System.Xml.Linq.XAttribute" /> of this <see cref="T:System.Xml.Linq.XElement" /> that has the specified <see cref="T:System.Xml.Linq.XName" />, or returns a new <see cref="T:System.Xml.Linq.XAttribute" /> with a default value.
            </summary>
            <param name="element">The <see cref="T:System.Xml.Linq.XElement" /> to be searched by the <paramref name="name" /> parameter.</param>
            <param name="name">The <see cref="T:System.Xml.Linq.XName" /> of the <see cref="T:System.Xml.Linq.XAttribute" /> to get.</param>
            <param name="defaultValue">The value that is used if the <see cref="T:System.Xml.Linq.XAttribute" /> was not found.</param>
            <returns>
            The <see cref="T:System.Xml.Linq.XAttribute" /> of this <see cref="T:System.Xml.Linq.XElement" /> that has the specified <see cref="T:System.Xml.Linq.XName" />, or a new <see cref="T:System.Xml.Linq.XAttribute" /> with a default value, if the <see cref="T:System.Xml.Linq.XAttribute" /> was not found.
            </returns>
        </member>
        <member name="T:BytecodeApi.FileExtensionInfo">
            <summary>
            Specifies information about a file extension that are retrieved using the AssocQueryString API.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileExtensionInfo.Extension">
            <summary>
            Gets the file extension as specified in the constructor of <see cref="T:BytecodeApi.FileExtensionInfo" /> without the leading dot.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileExtensionInfo.Command">
            <summary>
            Gets the ASSOCSTR_COMMAND property of the specified extension.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileExtensionInfo.Executable">
            <summary>
            Gets the ASSOCSTR_EXECUTABLE property of the specified extension.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileExtensionInfo.FriendlyDocName">
            <summary>
            Gets the ASSOCSTR_FRIENDLYDOCNAME property of the specified extension.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileExtensionInfo.FriendlyAppName">
            <summary>
            Gets the ASSOCSTR_FRIENDLYAPPNAME property of the specified extension.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileExtensionInfo.NoOpen">
            <summary>
            Gets the ASSOCSTR_NOOPEN property of the specified extension.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileExtensionInfo.ShellNewValue">
            <summary>
            Gets the ASSOCSTR_SHELLNEWVALUE property of the specified extension.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileExtensionInfo.DDECommand">
            <summary>
            Gets the ASSOCSTR_DDECOMMAND property of the specified extension.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileExtensionInfo.DDEIfExec">
            <summary>
            Gets the ASSOCSTR_DDEIFEXEC property of the specified extension.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileExtensionInfo.DDEApplication">
            <summary>
            Gets the ASSOCSTR_DDEAPPLICATION property of the specified extension.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileExtensionInfo.DDETopic">
            <summary>
            Gets the ASSOCSTR_DDETOPIC property of the specified extension.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileExtensionInfo.InfoTip">
            <summary>
            Gets the ASSOCSTR_INFOTIP property of the specified extension.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileExtensionInfo.QuickTip">
            <summary>
            Gets the ASSOCSTR_QUICKTIP property of the specified extension.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileExtensionInfo.TileInfo">
            <summary>
            Gets the ASSOCSTR_TILEINFO property of the specified extension.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileExtensionInfo.ContentType">
            <summary>
            Gets the ASSOCSTR_CONTENTTYPE property of the specified extension.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileExtensionInfo.DefaultIcon">
            <summary>
            Gets the ASSOCSTR_DEFAULTICON property of the specified extension.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileExtensionInfo.ShellExtension">
            <summary>
            Gets the ASSOCSTR_SHELLEXTENSION property of the specified extension.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileExtensionInfo.DropTarget">
            <summary>
            Gets the ASSOCSTR_DROPTARGET property of the specified extension.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileExtensionInfo.DelegateExecute">
            <summary>
            Gets the ASSOCSTR_DELEGATEEXECUTE property of the specified extension.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileExtensionInfo.SupportedUriProtocols">
            <summary>
            Gets the ASSOCSTR_SUPPORTED_URI_PROTOCOLS property of the specified extension.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileExtensionInfo.ProgID">
            <summary>
            Gets the ASSOCSTR_PROGID property of the specified extension.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileExtensionInfo.AppID">
            <summary>
            Gets the ASSOCSTR_APPID property of the specified extension.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileExtensionInfo.AppPublisher">
            <summary>
            Gets the ASSOCSTR_APPPUBLISHER property of the specified extension.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileExtensionInfo.AppIconReference">
            <summary>
            Gets the ASSOCSTR_APPICONREFERENCE property of the specified extension.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileExtensionInfo.Max">
            <summary>
            Gets the ASSOCSTR_MAX property of the specified extension.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileExtensionInfo.FileIcon">
            <summary>
            Gets the <see cref="T:BytecodeApi.FileIcon" /> that is associated with the specified extension or <see langword="null" />, if no suitable <see cref="T:BytecodeApi.FileIcon" /> was found.
            </summary>
        </member>
        <member name="M:BytecodeApi.FileExtensionInfo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.FileExtensionInfo" /> class and retrieves information about the specified file extension.
            </summary>
            <param name="extension">A file extension, with or without the leading dot.</param>
        </member>
        <member name="M:BytecodeApi.FileExtensionInfo.StartProgram">
            <summary>
            Starts the default program associated with this file extension (<see cref="P:BytecodeApi.FileExtensionInfo.Executable" />) and returns the created <see cref="T:System.Diagnostics.Process" /> object and <see langword="null" />, if process creation failed.
            </summary>
            <returns>
            The <see cref="T:System.Diagnostics.Process" /> object this method creates and <see langword="null" />, if process creation failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileExtensionInfo.StartProgram(System.String)">
            <summary>
            Starts the default program associated with this file extension (<see cref="P:BytecodeApi.FileExtensionInfo.Executable" />) with the specified commandline and returns the created <see cref="T:System.Diagnostics.Process" /> object and <see langword="null" />, if process creation failed. Typically, the commandline is used for the file to be opened by the application.
            </summary>
            <param name="commandLine">A <see cref="T:System.String" /> specifying the commandline to be passed to the executable.</param>
            <returns>
            The <see cref="T:System.Diagnostics.Process" /> object this method creates and <see langword="null" />, if process creation failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileExtensionInfo.StartProgram(System.Boolean)">
            <summary>
            Starts the default program associated with this file extension (<see cref="P:BytecodeApi.FileExtensionInfo.Executable" />) and returns the created <see cref="T:System.Diagnostics.Process" /> object and <see langword="null" />, if process creation failed.
            </summary>
            <param name="runas"><see langword="true" /> to execute this file with the "runas" verb.</param>
            <returns>
            The <see cref="T:System.Diagnostics.Process" /> object this method creates and <see langword="null" />, if process creation failed.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileExtensionInfo.StartProgram(System.String,System.Boolean)">
            <summary>
            Starts the default program associated with this file extension (<see cref="P:BytecodeApi.FileExtensionInfo.Executable" />) with the specified commandline and returns the created <see cref="T:System.Diagnostics.Process" /> object and <see langword="null" />, if process creation failed. Typically, the commandline is used for the file to be opened by the application.
            </summary>
            <param name="commandLine">A <see cref="T:System.String" /> specifying the commandline to be passed to the executable.</param>
            <param name="runas"><see langword="true" /> to execute this file with the "runas" verb.</param>
            <returns>
            The <see cref="T:System.Diagnostics.Process" /> object this method creates and <see langword="null" />, if process creation failed.
            </returns>
        </member>
        <member name="T:BytecodeApi.GlobalKeyboardHook">
            <summary>
            Provides support for global keystrokes capturing.
            </summary>
        </member>
        <member name="E:BytecodeApi.GlobalKeyboardHook.KeyboardPressed">
            <summary>
            Occurs when a key is pressed. Keystrokes are captured globally using SetWindowsHookEx.
            </summary>
        </member>
        <member name="M:BytecodeApi.GlobalKeyboardHook.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.GlobalKeyboardHook" /> class and starts capturing.
            </summary>
        </member>
        <member name="M:BytecodeApi.GlobalKeyboardHook.Dispose">
            <summary>
            Releases all resources used by the current instance of the <see cref="T:BytecodeApi.GlobalKeyboardHook" /> class.
            </summary>
        </member>
        <member name="T:BytecodeApi.OutlookDataObject">
            <summary>
            Implements the data transfer mechanism for Microsoft Outlook. This class is typically used in drag&amp;drop operations from Outlook into a UI application.
            </summary>
        </member>
        <member name="M:BytecodeApi.OutlookDataObject.#ctor(System.Windows.IDataObject)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.OutlookDataObject" /> class and adds the specified object to it.
            </summary>
            <param name="dataObject">The data to store.</param>
        </member>
        <member name="M:BytecodeApi.OutlookDataObject.GetData(System.Type)">
            <summary>
            Returns the data associated with the specified class type format.
            </summary>
            <param name="format">A <see cref="T:System.Type" /> representing the format of the data to retrieve.</param>
            <returns>
            The data associated with the specified format, or <see langword="null" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.OutlookDataObject.GetData(System.String)">
            <summary>
            Returns the data associated with the specified data format.
            </summary>
            <param name="format">A <see cref="T:System.String" /> that specifies the format of the data to retrieve.</param>
            <returns>
            The data associated with the specified format, or <see langword="null" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.OutlookDataObject.GetData(System.String,System.Boolean)">
            <summary>
            Returns the data associated with the specified data format, using an automated conversion parameter to determine whether to convert the data to the format.
            </summary>
            <param name="format">A <see cref="T:System.String" /> that specifies the format of the data to retrieve.</param>
            <param name="autoConvert"><see langword="true" /> to the convert data to the specified format; otherwise, <see langword="false" />.</param>
            <returns>
            The data associated with the specified format, or <see langword="null" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.OutlookDataObject.GetData(System.String,System.Int32)">
            <summary>
            Returns the data associated with the specified data format at the specified index.
            </summary>
            <param name="format">A <see cref="T:System.String" /> that specifies the format of the data to retrieve.</param>
            <param name="index">A <see cref="T:System.Int32" /> value specifying the index at which to retrieve the data object from.</param>
            <returns>
            The data associated with the specified format from at the specified index, or <see langword="null" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.OutlookDataObject.GetDataPresent(System.Type)">
            <summary>
            Checks to see whether the data is available in, or can be converted to, a specified format. The data format is specified by a <see cref="T:System.Type" /> object.
            </summary>
            <param name="format">A <see cref="T:System.Type" /> that specifies what format to check for.</param>
            <returns>
            <see langword="true" />, if the data is in, or can be converted to, the specified format;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.OutlookDataObject.GetDataPresent(System.String)">
            <summary>
            Checks to see whether the data is available in, or can be converted to, a specified format; the data format is specified by a <see cref="T:System.String" />.
            </summary>
            <param name="format">A <see cref="T:System.String" /> that specifies what format to check for.</param>
            <returns>
            <see langword="true" />, if the data is in, or can be converted to, the specified format;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.OutlookDataObject.GetDataPresent(System.String,System.Boolean)">
            <summary>
            Checks to see whether the data is available in, or can be converted to, a specified format. A <see cref="T:System.Boolean" /> flag indicates whether to check if the data can be converted to the specified format, if it is not available in that format.
            </summary>
            <param name="format">A <see cref="T:System.String" /> that specifies what format to check for.</param>
            <param name="autoConvert"><see langword="false" /> to only check for the specified format; <see langword="true" /> to also check whether or not data stored in this data object can be converted to the specified format.</param>
            <returns>
            <see langword="true" />, if the data is in, or can be converted to, the specified format;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.OutlookDataObject.GetFormats">
            <summary>
            Returns a list of all formats that the data in this data object is stored in, or can be converted to.
            </summary>
            <returns>
            A <see cref="T:System.String" />[], with each <see cref="T:System.String" /> specifying the name of a format supported by this data object.
            </returns>
        </member>
        <member name="M:BytecodeApi.OutlookDataObject.GetFormats(System.Boolean)">
            <summary>
            Returns a list of all formats that the data in this data object is stored in. A <see cref="T:System.Boolean" /> flag indicates whether or not to also include formats that the data can be automatically converted to.
            </summary>
            <param name="autoConvert"><see langword="true" /> to retrieve all formats that data stored in this data object is stored in, or can be converted to; <see langword="false" /> to retrieve only formats that data stored in this data object is stored in (excluding formats that the data is not stored in, but can be automatically converted to).</param>
            <returns>
            A <see cref="T:System.String" />[], with each <see cref="T:System.String" /> specifying the name of a format supported by this data object.
            </returns>
        </member>
        <member name="M:BytecodeApi.OutlookDataObject.SetData(System.Object)">
            <summary>
            Stores the specified data in this data object, automatically converting the data format from the source object type.
            </summary>
            <param name="data">The data to store in this data object.</param>
        </member>
        <member name="M:BytecodeApi.OutlookDataObject.SetData(System.Type,System.Object)">
            <summary>
            Stores the specified data in this data object, along with one or more specified data formats. The data format is specified by a <see cref="T:System.Type" /> class.
            </summary>
            <param name="format">A <see cref="T:System.Type" /> that specifies what format to store the data in.</param>
            <param name="data">The data to store in this data object.</param>
        </member>
        <member name="M:BytecodeApi.OutlookDataObject.SetData(System.String,System.Object)">
            <summary>
            Stores the specified data in this data object, along with one or more specified data formats. The data format is specified by a <see cref="T:System.String" />.
            </summary>
            <param name="format">A <see cref="T:System.String" /> that specifies what format to store the data in.</param>
            <param name="data">The data to store in this data object.</param>
        </member>
        <member name="M:BytecodeApi.OutlookDataObject.SetData(System.String,System.Object,System.Boolean)">
            <summary>
            Stores the specified data in this data object, along with one or more specified data formats. This overload includes a <see cref="T:System.Boolean" /> flag to indicate whether the data may be converted to another format on retrieval.
            </summary>
            <param name="format">A <see cref="T:System.String" /> that specifies what format to store the data in.</param>
            <param name="data">The data to store in this data object.</param>
            <param name="autoConvert"><see langword="true" /> to the convert data to the specified format; otherwise, <see langword="false" />.</param>
        </member>
        <member name="T:BytecodeApi.Blob">
            <summary>
            Represents an entity composed of a name and binary content in form or a <see cref="T:System.Byte" />[].
            </summary>
        </member>
        <member name="P:BytecodeApi.Blob.Name">
            <summary>
            Gets or sets the name of the <see cref="T:BytecodeApi.Blob" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.Blob.Content">
            <summary>
            Gets or sets the binary content of the <see cref="T:BytecodeApi.Blob" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.Blob.Tag">
            <summary>
            Gets or sets the object that contains data about the <see cref="T:BytecodeApi.Blob" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.Blob.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.Blob" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.Blob.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.Blob" /> class with the specified name.
            </summary>
            <param name="name">The name of the <see cref="T:BytecodeApi.Blob" />.</param>
        </member>
        <member name="M:BytecodeApi.Blob.#ctor(System.String,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.Blob" /> class with the specified name and content.
            </summary>
            <param name="name">The name of the <see cref="T:BytecodeApi.Blob" />.</param>
            <param name="content">The binary content of the <see cref="T:BytecodeApi.Blob" />.</param>
        </member>
        <member name="M:BytecodeApi.Blob.#ctor(System.String,System.Byte[],System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.Blob" /> class with the specified name, content and a tag.
            </summary>
            <param name="name">The name of the <see cref="T:BytecodeApi.Blob" />.</param>
            <param name="content">The binary content of the <see cref="T:BytecodeApi.Blob" />.</param>
            <param name="tag">the object that contains data about the <see cref="T:BytecodeApi.Blob" />.</param>
        </member>
        <member name="M:BytecodeApi.Blob.FromFile(System.String)">
            <summary>
            Creates a <see cref="T:BytecodeApi.Blob" /> from the specified file.
            </summary>
            <param name="path">A <see cref="T:System.String" /> specifying the path of a file from which to create the <see cref="T:BytecodeApi.Blob" />.</param>
            <returns>
            The <see cref="T:BytecodeApi.Blob" /> this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.Blob.FromDirectory(System.String)">
            <summary>
            Creates a <see cref="T:BytecodeApi.Blob" />[] from the specified directory.
            </summary>
            <param name="path">A <see cref="T:System.String" /> specifying the path to a directory from which to create the <see cref="T:BytecodeApi.Blob" />[]. Subdirectories are not searched.</param>
            <returns>
            The <see cref="T:BytecodeApi.Blob" />[] this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.Blob.FromDirectory(System.String,System.Boolean)">
            <summary>
            Creates a <see cref="T:BytecodeApi.Blob" />[] from the specified directory.
            </summary>
            <param name="path">A <see cref="T:System.String" /> specifying the path to a directory from which to create the <see cref="T:BytecodeApi.Blob" />[].</param>
            <param name="recursive"><see langword="true" /> to search subdirectories recursively.</param>
            <returns>
            The <see cref="T:BytecodeApi.Blob" />[] this method creates.
            </returns>
        </member>
        <member name="T:BytecodeApi.HttpClient">
            <summary>
            Provides a base class for sending HTTP requests and receiving HTTP responses from a resource identified by a URI.
            </summary>
        </member>
        <member name="F:BytecodeApi.HttpClient.Default">
            <summary>
            Represents a singleton <see cref="T:BytecodeApi.HttpClient" /> object. This field is read-only.
            </summary>
        </member>
        <member name="F:BytecodeApi.HttpClient.DefaultWithCookies">
            <summary>
            Represents a singleton <see cref="T:BytecodeApi.HttpClient" /> object with a cookie container. This field is read-only.
            </summary>
        </member>
        <member name="F:BytecodeApi.HttpClient.DefaultWebClient">
            <summary>
            Represents a singleton <see cref="T:System.Net.WebClient" /> object. This field is read-only.
            </summary>
        </member>
        <member name="F:BytecodeApi.HttpClient.AlwaysValidCertificateValidationCallback">
            <summary>
            Specifies a <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> callback that always returns <see langword="true" />, thus always validating the certificate.
            </summary>
        </member>
        <member name="P:BytecodeApi.HttpClient.UseCookies">
            <summary>
            Gets or sets a value indicating whether to use a <see cref="P:BytecodeApi.HttpClient.CookieContainer" /> or not. Changing the value will not empty the <see cref="P:BytecodeApi.HttpClient.CookieContainer" />, until <see cref="M:BytecodeApi.HttpClient.ClearCookies" /> is called.
            </summary>
        </member>
        <member name="P:BytecodeApi.HttpClient.UserAgent">
            <summary>
            Gets or sets the user agent that is used for HTTP requests.
            </summary>
        </member>
        <member name="P:BytecodeApi.HttpClient.AllowAutoRedirect">
            <summary>
            Gets or sets a value that indicates whether the request should follow redirection responses.
            </summary>
        </member>
        <member name="P:BytecodeApi.HttpClient.CookieContainer">
            <summary>
            Gets the collection of cookies that is used for HTTP requests. If <see cref="P:BytecodeApi.HttpClient.UserAgent" /> is set to <see langword="true" />, <see cref="P:BytecodeApi.HttpClient.CookieContainer" /> is used; otherwise, it is ignored, however cookies will not be deleted.
            </summary>
        </member>
        <member name="E:BytecodeApi.HttpClient.WebRequestCreated">
            <summary>
            Occurs when a <see cref="T:System.Net.HttpWebRequest" /> is created, prior to sending of the request. This can be used as a hook to modify the internal <see cref="T:System.Net.HttpWebRequest" /> object that is temporarily created with each HTTP request.
            </summary>
        </member>
        <member name="M:BytecodeApi.HttpClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.HttpClient" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.HttpClient.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.HttpClient" /> class.
            </summary>
            <param name="useCookies"><see langword="true" /> to use cookies; otherwise, <see langword="false" />.</param>
        </member>
        <member name="M:BytecodeApi.HttpClient.#ctor(System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.HttpClient" /> class.
            </summary>
            <param name="useCookies"><see langword="true" /> to use cookies; otherwise, <see langword="false" />.</param>
            <param name="userAgent">The user agent that is used for HTTP requests.</param>
        </member>
        <member name="M:BytecodeApi.HttpClient.GetString(System.String)">
            <summary>
            Sends a GET request to the specified URL.
            </summary>
            <param name="url">The URL the request is sent to.</param>
            <returns>
            A <see cref="T:System.String" /> containing the body of the HTTP response.
            </returns>
        </member>
        <member name="M:BytecodeApi.HttpClient.GetBytes(System.String)">
            <summary>
            Sends a GET request to the specified URL.
            </summary>
            <param name="url">The URL the request is sent to.</param>
            <returns>
            A <see cref="T:System.Byte" />[] containing the body of the HTTP response.
            </returns>
        </member>
        <member name="M:BytecodeApi.HttpClient.ClearCookies">
            <summary>
            Removes all cookies from the <see cref="P:BytecodeApi.HttpClient.CookieContainer" /> object.
            </summary>
        </member>
        <member name="M:BytecodeApi.HttpClient.OnWebRequestCreated(System.Net.HttpWebRequest)">
            <summary>
            Raises the <see cref="E:BytecodeApi.HttpClient.WebRequestCreated" /> event.
            </summary>
            <param name="request">The internal <see cref="T:System.Net.HttpWebRequest" /> object that is temporarily created with each HTTP request.</param>
        </member>
        <member name="T:BytecodeApi.PostValue">
            <summary>
            Represents an HTTP POST value as a key value pair, used by the <see cref="T:BytecodeApi.HttpClient" /> class.
            </summary>
        </member>
        <member name="P:BytecodeApi.PostValue.Key">
            <summary>
            Gets or sets the key of the HTTP POST value.
            </summary>
        </member>
        <member name="P:BytecodeApi.PostValue.Value">
            <summary>
            Gets or sets the value of the HTTP POST value.
            </summary>
        </member>
        <member name="M:BytecodeApi.PostValue.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.PostValue" /> struct with the specified key and value.
            </summary>
            <param name="key">A <see cref="T:System.String" /> specifying the key of the HTTP POST value.</param>
            <param name="value">A <see cref="T:System.String" /> specifying the value of the HTTP POST value.</param>
        </member>
        <member name="M:BytecodeApi.PostValue.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:BytecodeApi.CsvCell">
            <summary>
            Represents a cell in a <see cref="T:BytecodeApi.CsvRow" /> of a flat file database.
            </summary>
        </member>
        <member name="P:BytecodeApi.CsvCell.Value">
            <summary>
            Gets or sets the cell content of a flat file database.
            </summary>
        </member>
        <member name="P:BytecodeApi.CsvCell.Int32Value">
            <summary>
            Gets or sets the parsed <see cref="T:System.Int32" /> value of the <see cref="P:BytecodeApi.CsvCell.Value" /> property. If conversion fails, <see langword="null" /> is returned. Assigning a value sets the <see cref="P:BytecodeApi.CsvCell.Value" /> property by converting the value to a <see cref="T:System.String" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.CsvCell.Int64Value">
            <summary>
            Gets or sets the parsed <see cref="T:System.Int64" /> value of the <see cref="P:BytecodeApi.CsvCell.Value" /> property. If conversion fails, <see langword="null" /> is returned. Assigning a value sets the <see cref="P:BytecodeApi.CsvCell.Value" /> property by converting the value to a <see cref="T:System.String" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.CsvCell.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.CsvCell" /> struct with the specified value.
            </summary>
            <param name="value">The <see cref="T:System.String" /> value of this cell.</param>
        </member>
        <member name="M:BytecodeApi.CsvCell.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> whose value was parsed from the flat file database.
            </summary>
            <returns>
            A <see cref="T:System.String" /> whose value was parsed from the flat file database.
            </returns>
        </member>
        <member name="T:BytecodeApi.CsvFile">
            <summary>
            Represents a flat file database, typically a CSV file with lines separated by a separator.
            </summary>
        </member>
        <member name="P:BytecodeApi.CsvFile.Headers">
            <summary>
            Gets or sets a <see cref="T:System.String" />[] that contains the headers of this flat file database or <see langword="null" />, if the hasHeaderRow parameter was set to <see langword="false" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.CsvFile.Rows">
            <summary>
            Gets a collection of <see cref="T:BytecodeApi.CsvRow" /> objects that represents the content of this flat file database.
            </summary>
        </member>
        <member name="P:BytecodeApi.CsvFile.HasErrors">
            <summary>
            Gets a <see cref="T:System.Boolean" /> value indicating whether this <see cref="T:BytecodeApi.CsvFile" /> contains rows that could not be parsed. Rows that could not be parsed are represented as <see cref="T:BytecodeApi.CsvErrorRow" /> objects.
            </summary>
        </member>
        <member name="P:BytecodeApi.CsvFile.IsColumnCountConsistent">
            <summary>
            Gets a <see cref="T:System.Boolean" /> value indicating whether all rows in this <see cref="T:BytecodeApi.CsvFile" /> have the same amount of columns, excluding the <see cref="P:BytecodeApi.CsvFile.Headers" /> property and <see cref="T:BytecodeApi.CsvErrorRow" /> objects. Returns <see langword="true" />, if no rows or only error rows were loaded.
            </summary>
        </member>
        <member name="M:BytecodeApi.CsvFile.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.CsvFile" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.CsvFile.FromFile(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="T:BytecodeApi.CsvFile" /> object from the specified file.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a flat file database, such as a CSV file.</param>
            <param name="delimiter">A <see cref="T:System.String" /> specifying the delimiter to be used during flat file parsing. If <see langword="null" /> is provided, the delimiter is automatically detected. If automatic detection fails, an <see cref="T:System.Exception" /> is thrown.</param>
            <param name="hasHeaderRow"><see langword="true" /> to treat the first row as a header row and load its contents into the <see cref="P:BytecodeApi.CsvFile.Headers" /> property.</param>
            <returns>
            The <see cref="T:BytecodeApi.CsvFile" /> object this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.CsvFile.FromFile(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a <see cref="T:BytecodeApi.CsvFile" /> object from the specified file.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a flat file database, such as a CSV file.</param>
            <param name="delimiter">A <see cref="T:System.String" /> specifying the delimiter to be used during flat file parsing. If <see langword="null" /> is provided, the delimiter is automatically detected. If automatic detection fails, an <see cref="T:System.Exception" /> is thrown.</param>
            <param name="hasHeaderRow"><see langword="true" /> to treat the first row as a header row and load its contents into the <see cref="P:BytecodeApi.CsvFile.Headers" /> property.</param>
            <param name="ignoreEmptyLines"><see langword="true" /> to ignore empty lines and lines where all columns are empty.</param>
            <returns>
            The <see cref="T:BytecodeApi.CsvFile" /> object this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.CsvFile.FromFile(System.String,System.String,System.Boolean,System.Boolean,System.Text.Encoding)">
            <summary>
            Creates a <see cref="T:BytecodeApi.CsvFile" /> object from the specified file.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a flat file database, such as a CSV file.</param>
            <param name="delimiter">A <see cref="T:System.String" /> specifying the delimiter to be used during flat file parsing. If <see langword="null" /> is provided, the delimiter is automatically detected. If automatic detection fails, an <see cref="T:System.Exception" /> is thrown.</param>
            <param name="hasHeaderRow"><see langword="true" /> to treat the first row as a header row and load its contents into the <see cref="P:BytecodeApi.CsvFile.Headers" /> property.</param>
            <param name="ignoreEmptyLines"><see langword="true" /> to ignore empty lines and lines where all columns are empty.</param>
            <param name="encoding">The encoding to use if encoding is not determined from the file. Specify <see langword="null" /> to detect encoding automatically or provide a value to explicitly parse with a specific <see cref="T:System.Text.Encoding" />.</param>
            <returns>
            The <see cref="T:BytecodeApi.CsvFile" /> object this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.CsvFile.FromBinary(System.Byte[],System.String,System.Boolean)">
            <summary>
            Creates a <see cref="T:BytecodeApi.CsvFile" /> object from the specified <see cref="T:System.Byte" />[] that represents a flat file database.
            </summary>
            <param name="file">The <see cref="T:System.Byte" />[] that represents a flat file database to read from.</param>
            <param name="delimiter">A <see cref="T:System.String" /> specifying the delimiter to be used during flat file parsing. If <see langword="null" /> is provided, the delimiter is automatically detected. If automatic detection fails, an <see cref="T:System.Exception" /> is thrown.</param>
            <param name="hasHeaderRow"><see langword="true" /> to treat the first row as a header row and load its contents into the <see cref="P:BytecodeApi.CsvFile.Headers" /> property.</param>
            <returns>
            The <see cref="T:BytecodeApi.CsvFile" /> object this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.CsvFile.FromBinary(System.Byte[],System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a <see cref="T:BytecodeApi.CsvFile" /> object from the specified <see cref="T:System.Byte" />[] that represents a flat file database.
            </summary>
            <param name="file">The <see cref="T:System.Byte" />[] that represents a flat file database to read from.</param>
            <param name="delimiter">A <see cref="T:System.String" /> specifying the delimiter to be used during flat file parsing. If <see langword="null" /> is provided, the delimiter is automatically detected. If automatic detection fails, an <see cref="T:System.Exception" /> is thrown.</param>
            <param name="hasHeaderRow"><see langword="true" /> to treat the first row as a header row and load its contents into the <see cref="P:BytecodeApi.CsvFile.Headers" /> property.</param>
            <param name="ignoreEmptyLines"><see langword="true" /> to ignore empty lines and lines where all columns are empty.</param>
            <returns>
            The <see cref="T:BytecodeApi.CsvFile" /> object this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.CsvFile.FromBinary(System.Byte[],System.String,System.Boolean,System.Boolean,System.Text.Encoding)">
            <summary>
            Creates a <see cref="T:BytecodeApi.CsvFile" /> object from the specified <see cref="T:System.Byte" />[] that represents a flat file database.
            </summary>
            <param name="file">The <see cref="T:System.Byte" />[] that represents a flat file database to read from.</param>
            <param name="delimiter">A <see cref="T:System.String" /> specifying the delimiter to be used during flat file parsing. If <see langword="null" /> is provided, the delimiter is automatically detected. If automatic detection fails, an <see cref="T:System.Exception" /> is thrown.</param>
            <param name="hasHeaderRow"><see langword="true" /> to treat the first row as a header row and load its contents into the <see cref="P:BytecodeApi.CsvFile.Headers" /> property.</param>
            <param name="ignoreEmptyLines"><see langword="true" /> to ignore empty lines and lines where all columns are empty.</param>
            <param name="encoding">The encoding to use if encoding is not determined from the file. Specify <see langword="null" /> to detect encoding automatically or provide a value to explicitly parse with a specific <see cref="T:System.Text.Encoding" />.</param>
            <returns>
            The <see cref="T:BytecodeApi.CsvFile" /> object this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.CsvFile.FromStream(System.IO.Stream,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="T:BytecodeApi.CsvFile" /> object from the specified <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> from which to read the flat file database from.</param>
            <param name="delimiter">A <see cref="T:System.String" /> specifying the delimiter to be used during flat file parsing. If <see langword="null" /> is provided, the delimiter is automatically detected. If automatic detection fails, an <see cref="T:System.Exception" /> is thrown.</param>
            <param name="hasHeaderRow"><see langword="true" /> to treat the first row as a header row and load its contents into the <see cref="P:BytecodeApi.CsvFile.Headers" /> property.</param>
            <returns>
            The <see cref="T:BytecodeApi.CsvFile" /> object this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.CsvFile.FromStream(System.IO.Stream,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a <see cref="T:BytecodeApi.CsvFile" /> object from the specified <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> from which to read the flat file database from.</param>
            <param name="delimiter">A <see cref="T:System.String" /> specifying the delimiter to be used during flat file parsing. If <see langword="null" /> is provided, the delimiter is automatically detected. If automatic detection fails, an <see cref="T:System.Exception" /> is thrown.</param>
            <param name="hasHeaderRow"><see langword="true" /> to treat the first row as a header row and load its contents into the <see cref="P:BytecodeApi.CsvFile.Headers" /> property.</param>
            <param name="ignoreEmptyLines"><see langword="true" /> to ignore empty lines and lines where all columns are empty.</param>
            <returns>
            The <see cref="T:BytecodeApi.CsvFile" /> object this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.CsvFile.FromStream(System.IO.Stream,System.String,System.Boolean,System.Boolean,System.Text.Encoding)">
            <summary>
            Creates a <see cref="T:BytecodeApi.CsvFile" /> object from the specified <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> from which to read the flat file database from.</param>
            <param name="delimiter">A <see cref="T:System.String" /> specifying the delimiter to be used during flat file parsing. If <see langword="null" /> is provided, the delimiter is automatically detected. If automatic detection fails, an <see cref="T:System.Exception" /> is thrown.</param>
            <param name="hasHeaderRow"><see langword="true" /> to treat the first row as a header row and load its contents into the <see cref="P:BytecodeApi.CsvFile.Headers" /> property.</param>
            <param name="ignoreEmptyLines"><see langword="true" /> to ignore empty lines and lines where all columns are empty.</param>
            <param name="encoding">The encoding to use if encoding is not determined from the file. Specify <see langword="null" /> to detect encoding automatically or provide a value to explicitly parse with a specific <see cref="T:System.Text.Encoding" />.</param>
            <returns>
            The <see cref="T:BytecodeApi.CsvFile" /> object this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.CsvFile.FromStream(System.IO.Stream,System.String,System.Boolean,System.Boolean,System.Text.Encoding,System.Boolean)">
            <summary>
            Creates a <see cref="T:BytecodeApi.CsvFile" /> object from the specified <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> from which to read the flat file database from.</param>
            <param name="delimiter">A <see cref="T:System.String" /> specifying the delimiter to be used during flat file parsing. If <see langword="null" /> is provided, the delimiter is automatically detected. If automatic detection fails, an <see cref="T:System.Exception" /> is thrown.</param>
            <param name="hasHeaderRow"><see langword="true" /> to treat the first row as a header row and load its contents into the <see cref="P:BytecodeApi.CsvFile.Headers" /> property.</param>
            <param name="ignoreEmptyLines"><see langword="true" /> to ignore empty lines and lines where all columns are empty.</param>
            <param name="encoding">The encoding to use if encoding is not determined from the file. Specify <see langword="null" /> to detect encoding automatically or provide a value to explicitly parse with a specific <see cref="T:System.Text.Encoding" />.</param>
            <param name="leaveOpen">A <see cref="T:System.Boolean" /> value indicating whether to leave <paramref name="stream" /> open.</param>
            <returns>
            The <see cref="T:BytecodeApi.CsvFile" /> object this method creates.
            </returns>
        </member>
        <member name="M:BytecodeApi.CsvFile.EnumerateFile(System.String,System.String,System.Boolean)">
            <summary>
            Returns an enumerable collection of <see cref="T:BytecodeApi.CsvRowBase" /> objects from the specified file. This method streams the file and does not load it into memory and is typically used for large files that are processed in a <see langword="foreach" /> loop.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a flat file database, such as a CSV file.</param>
            <param name="delimiter">A <see cref="T:System.String" /> specifying the delimiter to be used during flat file parsing.</param>
            <param name="hasHeaderRow"><see langword="true" /> to treat the first row as a header row and load its contents into the <see cref="P:BytecodeApi.CsvFile.Headers" /> property.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> with the <see cref="T:BytecodeApi.CsvRowBase" /> objects from the specified file.
            </returns>
        </member>
        <member name="M:BytecodeApi.CsvFile.EnumerateFile(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Returns an enumerable collection of <see cref="T:BytecodeApi.CsvRowBase" /> objects from the specified file. This method streams the file and does not load it into memory and is typically used for large files that are processed in a <see langword="foreach" /> loop.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a flat file database, such as a CSV file.</param>
            <param name="delimiter">A <see cref="T:System.String" /> specifying the delimiter to be used during flat file parsing.</param>
            <param name="hasHeaderRow"><see langword="true" /> to treat the first row as a header row and load its contents into the <see cref="P:BytecodeApi.CsvFile.Headers" /> property.</param>
            <param name="ignoreEmptyLines"><see langword="true" /> to ignore empty lines and lines where all columns are empty.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> with the <see cref="T:BytecodeApi.CsvRowBase" /> objects from the specified file.
            </returns>
        </member>
        <member name="M:BytecodeApi.CsvFile.EnumerateFile(System.String,System.String,System.Boolean,System.Boolean,System.Text.Encoding)">
            <summary>
            Returns an enumerable collection of <see cref="T:BytecodeApi.CsvRowBase" /> objects from the specified file. This method streams the file and does not load it into memory and is typically used for large files that are processed in a <see langword="foreach" /> loop.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a flat file database, such as a CSV file.</param>
            <param name="delimiter">A <see cref="T:System.String" /> specifying the delimiter to be used during flat file parsing.</param>
            <param name="hasHeaderRow"><see langword="true" /> to treat the first row as a header row and load its contents into the <see cref="P:BytecodeApi.CsvFile.Headers" /> property.</param>
            <param name="ignoreEmptyLines"><see langword="true" /> to ignore empty lines and lines where all columns are empty.</param>
            <param name="encoding">The encoding to use if encoding is not determined from the file. Specify <see langword="null" /> to detect encoding automatically or provide a value to explicitly parse with a specific <see cref="T:System.Text.Encoding" />.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> with the <see cref="T:BytecodeApi.CsvRowBase" /> objects from the specified file.
            </returns>
        </member>
        <member name="M:BytecodeApi.CsvFile.EnumerateBinary(System.Byte[],System.String,System.Boolean)">
            <summary>
            Returns an enumerable collection of <see cref="T:BytecodeApi.CsvRowBase" /> objects from the specified <see cref="T:System.Byte" />[] that represents a flat file database. This method streams the file and does not load it into memory and is typically used for large files that are processed in a <see langword="foreach" /> loop.
            </summary>
            <param name="file">The <see cref="T:System.Byte" />[] that represents a flat file database to read from.</param>
            <param name="delimiter">A <see cref="T:System.String" /> specifying the delimiter to be used during flat file parsing.</param>
            <param name="hasHeaderRow"><see langword="true" /> to treat the first row as a header row and load its contents into the <see cref="P:BytecodeApi.CsvFile.Headers" /> property.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> with the <see cref="T:BytecodeApi.CsvRowBase" /> objects from the specified file.
            </returns>
        </member>
        <member name="M:BytecodeApi.CsvFile.EnumerateBinary(System.Byte[],System.String,System.Boolean,System.Boolean)">
            <summary>
            Returns an enumerable collection of <see cref="T:BytecodeApi.CsvRowBase" /> objects from the specified <see cref="T:System.Byte" />[] that represents a flat file database. This method streams the file and does not load it into memory and is typically used for large files that are processed in a <see langword="foreach" /> loop.
            </summary>
            <param name="file">The <see cref="T:System.Byte" />[] that represents a flat file database to read from.</param>
            <param name="delimiter">A <see cref="T:System.String" /> specifying the delimiter to be used during flat file parsing.</param>
            <param name="hasHeaderRow"><see langword="true" /> to treat the first row as a header row and load its contents into the <see cref="P:BytecodeApi.CsvFile.Headers" /> property.</param>
            <param name="ignoreEmptyLines"><see langword="true" /> to ignore empty lines and lines where all columns are empty.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> with the <see cref="T:BytecodeApi.CsvRowBase" /> objects from the specified file.
            </returns>
        </member>
        <member name="M:BytecodeApi.CsvFile.EnumerateBinary(System.Byte[],System.String,System.Boolean,System.Boolean,System.Text.Encoding)">
            <summary>
            Returns an enumerable collection of <see cref="T:BytecodeApi.CsvRowBase" /> objects from the specified <see cref="T:System.Byte" />[] that represents a flat file database. This method streams the file and does not load it into memory and is typically used for large files that are processed in a <see langword="foreach" /> loop.
            </summary>
            <param name="file">The <see cref="T:System.Byte" />[] that represents a flat file database to read from.</param>
            <param name="delimiter">A <see cref="T:System.String" /> specifying the delimiter to be used during flat file parsing.</param>
            <param name="hasHeaderRow"><see langword="true" /> to treat the first row as a header row and load its contents into the <see cref="P:BytecodeApi.CsvFile.Headers" /> property.</param>
            <param name="ignoreEmptyLines"><see langword="true" /> to ignore empty lines and lines where all columns are empty.</param>
            <param name="encoding">The encoding to use if encoding is not determined from the file. Specify <see langword="null" /> to detect encoding automatically or provide a value to explicitly parse with a specific <see cref="T:System.Text.Encoding" />.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> with the <see cref="T:BytecodeApi.CsvRowBase" /> objects from the specified file.
            </returns>
        </member>
        <member name="M:BytecodeApi.CsvFile.EnumerateStream(System.IO.Stream,System.String,System.Boolean)">
            <summary>
            Returns an enumerable collection of <see cref="T:BytecodeApi.CsvRowBase" /> objects from the specified <see cref="T:System.IO.Stream" />. This method streams the file and does not load it into memory and is typically used for large files that are processed in a <see langword="foreach" /> loop.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> from which to read the flat file database from.</param>
            <param name="delimiter">A <see cref="T:System.String" /> specifying the delimiter to be used during flat file parsing.</param>
            <param name="hasHeaderRow"><see langword="true" /> to treat the first row as a header row and load its contents into the <see cref="P:BytecodeApi.CsvFile.Headers" /> property.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> with the <see cref="T:BytecodeApi.CsvRowBase" /> objects from the specified file.
            </returns>
        </member>
        <member name="M:BytecodeApi.CsvFile.EnumerateStream(System.IO.Stream,System.String,System.Boolean,System.Boolean)">
            <summary>
            Returns an enumerable collection of <see cref="T:BytecodeApi.CsvRowBase" /> objects from the specified <see cref="T:System.IO.Stream" />. This method streams the file and does not load it into memory and is typically used for large files that are processed in a <see langword="foreach" /> loop.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> from which to read the flat file database from.</param>
            <param name="delimiter">A <see cref="T:System.String" /> specifying the delimiter to be used during flat file parsing.</param>
            <param name="hasHeaderRow"><see langword="true" /> to treat the first row as a header row and load its contents into the <see cref="P:BytecodeApi.CsvFile.Headers" /> property.</param>
            <param name="ignoreEmptyLines"><see langword="true" /> to ignore empty lines and lines where all columns are empty.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> with the <see cref="T:BytecodeApi.CsvRowBase" /> objects from the specified file.
            </returns>
        </member>
        <member name="M:BytecodeApi.CsvFile.EnumerateStream(System.IO.Stream,System.String,System.Boolean,System.Boolean,System.Text.Encoding)">
            <summary>
            Returns an enumerable collection of <see cref="T:BytecodeApi.CsvRowBase" /> objects from the specified <see cref="T:System.IO.Stream" />. This method streams the file and does not load it into memory and is typically used for large files that are processed in a <see langword="foreach" /> loop.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> from which to read the flat file database from.</param>
            <param name="delimiter">A <see cref="T:System.String" /> specifying the delimiter to be used during flat file parsing.</param>
            <param name="hasHeaderRow"><see langword="true" /> to treat the first row as a header row and load its contents into the <see cref="P:BytecodeApi.CsvFile.Headers" /> property.</param>
            <param name="ignoreEmptyLines"><see langword="true" /> to ignore empty lines and lines where all columns are empty.</param>
            <param name="encoding">The encoding to use if encoding is not determined from the file. Specify <see langword="null" /> to detect encoding automatically or provide a value to explicitly parse with a specific <see cref="T:System.Text.Encoding" />.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> with the <see cref="T:BytecodeApi.CsvRowBase" /> objects from the specified file.
            </returns>
        </member>
        <member name="M:BytecodeApi.CsvFile.EnumerateStream(System.IO.Stream,System.String,System.Boolean,System.Boolean,System.Text.Encoding,System.Boolean)">
            <summary>
            Returns an enumerable collection of <see cref="T:BytecodeApi.CsvRowBase" /> objects from the specified <see cref="T:System.IO.Stream" />. This method streams the file and does not load it into memory and is typically used for large files that are processed in a <see langword="foreach" /> loop.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> from which to read the flat file database from.</param>
            <param name="delimiter">A <see cref="T:System.String" /> specifying the delimiter to be used during flat file parsing.</param>
            <param name="hasHeaderRow"><see langword="true" /> to treat the first row as a header row and load its contents into the <see cref="P:BytecodeApi.CsvFile.Headers" /> property.</param>
            <param name="ignoreEmptyLines"><see langword="true" /> to ignore empty lines and lines where all columns are empty.</param>
            <param name="encoding">The encoding to use if encoding is not determined from the file. Specify <see langword="null" /> to detect encoding automatically or provide a value to explicitly parse with a specific <see cref="T:System.Text.Encoding" />.</param>
            <param name="leaveOpen">A <see cref="T:System.Boolean" /> value indicating whether to leave <paramref name="stream" /> open.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> with the <see cref="T:BytecodeApi.CsvRowBase" /> objects from the specified file.
            </returns>
        </member>
        <member name="M:BytecodeApi.CsvFile.DetectDelimiter(System.String)">
            <summary>
            Tries to detect the delimiter of a CSV file and returns a <see cref="T:System.String" /> indicating the delimiter, or <see langword="null" />, if it could not be detected.
            For detection, a specified number of rows is tested for various delimiters. By default, a minimum of 2 rows is required and up to 10 rows are tested. The tested delimiters are ",", ";", "\t" and "|". If all rows have the same column count and the column count is greater than 1, the tested delimiter is considered correct.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a flat file database, such as a CSV file.</param>
            <returns>
            The detected delimiter, or <see langword="null" />, if no definite delimiter was detected.
            </returns>
        </member>
        <member name="M:BytecodeApi.CsvFile.DetectDelimiter(System.String,System.Text.Encoding)">
            <summary>
            Tries to detect the delimiter of a CSV file and returns a <see cref="T:System.String" /> indicating the delimiter, or <see langword="null" />, if it could not be detected.
            For detection, a specified number of rows is tested for various delimiters. By default, a minimum of 2 rows is required and up to 10 rows are tested. The tested delimiters are ",", ";", "\t" and "|". If all rows have the same column count and the column count is greater than 1, the tested delimiter is considered correct.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a flat file database, such as a CSV file.</param>
            <param name="encoding">The encoding to use if encoding is not determined from the file. Specify <see langword="null" /> to detect encoding automatically or provide a value to explicitly parse with a specific <see cref="T:System.Text.Encoding" />.</param>
            <returns>
            The detected delimiter, or <see langword="null" />, if no definite delimiter was detected.
            </returns>
        </member>
        <member name="M:BytecodeApi.CsvFile.DetectDelimiter(System.String,System.Text.Encoding,System.Int32,System.Int32,System.String[])">
            <summary>
            Tries to detect the delimiter of a CSV file and returns a <see cref="T:System.String" /> indicating the delimiter, or <see langword="null" />, if it could not be detected.
            For detection, a specified number of rows is tested for various delimiters. By default, a minimum of 2 rows is required and up to 10 rows are tested. The tested delimiters are ",", ";", "\t" and "|". If all rows have the same column count and the column count is greater than 1, the tested delimiter is considered correct.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a flat file database, such as a CSV file.</param>
            <param name="encoding">The encoding to use if encoding is not determined from the file. Specify <see langword="null" /> to detect encoding automatically or provide a value to explicitly parse with a specific <see cref="T:System.Text.Encoding" />.</param>
            <param name="minimumRowsToTest">A <see cref="T:System.Int32" /> value specifying the minimum number of rows that the CSV file must have. The default value is 2.</param>
            <param name="maximumToTest">A <see cref="T:System.Int32" /> value specifying the maximum number of rows that will be tested. If the file has less rows, the complete file is tested. The default value is 10.</param>
            <param name="delimitersToTest">A <see cref="T:System.String" />[] specifying the delimiters to test for in the specified order. By default, ",", ";", "\t" and "|" are tested.</param>
            <returns>
            The detected delimiter, or <see langword="null" />, if no definite delimiter was detected.
            </returns>
        </member>
        <member name="M:BytecodeApi.CsvFile.DetectDelimiter(System.Byte[])">
            <summary>
            Tries to detect the delimiter of a CSV file and returns a <see cref="T:System.String" /> indicating the delimiter, or <see langword="null" />, if it could not be detected.
            For detection, a specified number of rows is tested for various delimiters. By default, a minimum of 2 rows is required and up to 10 rows are tested. The tested delimiters are ",", ";", "\t" and "|". If all rows have the same column count and the column count is greater than 1, the tested delimiter is considered correct.
            </summary>
            <param name="file">The <see cref="T:System.Byte" />[] that represents a flat file database to read from.</param>
            <returns>
            The detected delimiter, or <see langword="null" />, if no definite delimiter was detected.
            </returns>
        </member>
        <member name="M:BytecodeApi.CsvFile.DetectDelimiter(System.Byte[],System.Text.Encoding)">
            <summary>
            Tries to detect the delimiter of a CSV file and returns a <see cref="T:System.String" /> indicating the delimiter, or <see langword="null" />, if it could not be detected.
            For detection, a specified number of rows is tested for various delimiters. By default, a minimum of 2 rows is required and up to 10 rows are tested. The tested delimiters are ",", ";", "\t" and "|". If all rows have the same column count and the column count is greater than 1, the tested delimiter is considered correct.
            </summary>
            <param name="file">The <see cref="T:System.Byte" />[] that represents a flat file database to read from.</param>
            <param name="encoding">The encoding to use if encoding is not determined from the file. Specify <see langword="null" /> to detect encoding automatically or provide a value to explicitly parse with a specific <see cref="T:System.Text.Encoding" />.</param>
            <returns>
            The detected delimiter, or <see langword="null" />, if no definite delimiter was detected.
            </returns>
        </member>
        <member name="M:BytecodeApi.CsvFile.DetectDelimiter(System.Byte[],System.Text.Encoding,System.Int32,System.Int32,System.String[])">
            <summary>
            Tries to detect the delimiter of a CSV file and returns a <see cref="T:System.String" /> indicating the delimiter, or <see langword="null" />, if it could not be detected.
            For detection, a specified number of rows is tested for various delimiters. By default, a minimum of 2 rows is required and up to 10 rows are tested. The tested delimiters are ",", ";", "\t" and "|". If all rows have the same column count and the column count is greater than 1, the tested delimiter is considered correct.
            </summary>
            <param name="file">The <see cref="T:System.Byte" />[] that represents a flat file database to read from.</param>
            <param name="encoding">The encoding to use if encoding is not determined from the file. Specify <see langword="null" /> to detect encoding automatically or provide a value to explicitly parse with a specific <see cref="T:System.Text.Encoding" />.</param>
            <param name="minimumRowsToTest">A <see cref="T:System.Int32" /> value specifying the minimum number of rows that the CSV file must have. The default value is 2.</param>
            <param name="maximumToTest">A <see cref="T:System.Int32" /> value specifying the maximum number of rows that will be tested. If the file has less rows, the complete file is tested. The default value is 10.</param>
            <param name="delimitersToTest">A <see cref="T:System.String" />[] specifying the delimiters to test for in the specified order. By default, ",", ";", "\t" and "|" are tested.</param>
            <returns>
            The detected delimiter, or <see langword="null" />, if no definite delimiter was detected.
            </returns>
        </member>
        <member name="M:BytecodeApi.CsvFile.DetectDelimiter(System.IO.Stream)">
            <summary>
            Tries to detect the delimiter of a CSV file and returns a <see cref="T:System.String" /> indicating the delimiter, or <see langword="null" />, if it could not be detected.
            For detection, a specified number of rows is tested for various delimiters. By default, a minimum of 2 rows is required and up to 10 rows are tested. The tested delimiters are ",", ";", "\t" and "|". If all rows have the same column count and the column count is greater than 1, the tested delimiter is considered correct.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> from which to read the flat file database from. The <see cref="T:System.IO.Stream" /> is read multiple times and the position is reset before this method returns.</param>
            <returns>
            The detected delimiter, or <see langword="null" />, if no definite delimiter was detected.
            </returns>
        </member>
        <member name="M:BytecodeApi.CsvFile.DetectDelimiter(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Tries to detect the delimiter of a CSV file and returns a <see cref="T:System.String" /> indicating the delimiter, or <see langword="null" />, if it could not be detected.
            For detection, a specified number of rows is tested for various delimiters. By default, a minimum of 2 rows is required and up to 10 rows are tested. The tested delimiters are ",", ";", "\t" and "|". If all rows have the same column count and the column count is greater than 1, the tested delimiter is considered correct.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> from which to read the flat file database from. The <see cref="T:System.IO.Stream" /> is read multiple times and the position is reset before this method returns.</param>
            <param name="encoding">The encoding to use if encoding is not determined from the file. Specify <see langword="null" /> to detect encoding automatically or provide a value to explicitly parse with a specific <see cref="T:System.Text.Encoding" />.</param>
            <returns>
            The detected delimiter, or <see langword="null" />, if no definite delimiter was detected.
            </returns>
        </member>
        <member name="M:BytecodeApi.CsvFile.DetectDelimiter(System.IO.Stream,System.Text.Encoding,System.Int32,System.Int32,System.String[])">
            <summary>
            Tries to detect the delimiter of a CSV file and returns a <see cref="T:System.String" /> indicating the delimiter, or <see langword="null" />, if it could not be detected.
            For detection, a specified number of rows is tested for various delimiters. By default, a minimum of 2 rows is required and up to 10 rows are tested. The tested delimiters are ",", ";", "\t" and "|". If all rows have the same column count and the column count is greater than 1, the tested delimiter is considered correct.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> from which to read the flat file database from. The <see cref="T:System.IO.Stream" /> is read multiple times and the position is reset before this method returns.</param>
            <param name="encoding">The encoding to use if encoding is not determined from the file. Specify <see langword="null" /> to detect encoding automatically or provide a value to explicitly parse with a specific <see cref="T:System.Text.Encoding" />.</param>
            <param name="minimumRowsToTest">A <see cref="T:System.Int32" /> value specifying the minimum number of rows that the CSV file must have. The default value is 2.</param>
            <param name="maximumToTest">A <see cref="T:System.Int32" /> value specifying the maximum number of rows that will be tested. If the file has less rows, the complete file is tested. The default value is 10.</param>
            <param name="delimitersToTest">A <see cref="T:System.String" />[] specifying the delimiters to test for in the specified order. By default, ",", ";", "\t" and "|" are tested.</param>
            <returns>
            The detected delimiter, or <see langword="null" />, if no definite delimiter was detected.
            </returns>
        </member>
        <member name="M:BytecodeApi.CsvFile.CheckColumnCount(System.Int32)">
            <summary>
            Checks whether the column count of all rows is equal to <paramref name="columnCount" />, excluding the <see cref="P:BytecodeApi.CsvFile.Headers" /> property and <see cref="T:BytecodeApi.CsvErrorRow" /> objects.
            </summary>
            <param name="columnCount">A <see cref="T:System.Int32" /> value specifying the expected column count for all rows.</param>
            <returns>
            <see langword="true" />, if the column count of all rows is equal to <paramref name="columnCount" />;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.CsvRow">
            <summary>
            Represents a row of a <see cref="T:BytecodeApi.CsvFile" /> flat file database.
            </summary>
        </member>
        <member name="P:BytecodeApi.CsvRow.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:BytecodeApi.CsvCell" /> at the specified column index.
            </summary>
            <param name="index">The zero-based column index.</param>
            <returns>
            The <see cref="T:BytecodeApi.CsvCell" /> at the specified column index.
            </returns>
        </member>
        <member name="P:BytecodeApi.CsvRow.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:BytecodeApi.CsvCell" /> at the specified column name, represented as an Excel column name (like A, B, ... AA, AB, ...).
            </summary>
            <param name="column">A <see cref="T:System.String" /> specifying the one-based column index, represented as an Excel column name (like A, B, ... AA, AB, ...).</param>
            <returns>
            The <see cref="T:BytecodeApi.CsvCell" /> at the specified column index.
            </returns>
        </member>
        <member name="P:BytecodeApi.CsvRow.Count">
            <summary>
            Gets the number of cells in this <see cref="T:BytecodeApi.CsvRow" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.CsvRow.#ctor(System.Collections.Generic.IEnumerable{BytecodeApi.CsvCell})">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.CsvRow" /> class with a collection of cells.
            </summary>
            <param name="cells">The collection of cells to be added to this <see cref="T:BytecodeApi.CsvRow" />.</param>
        </member>
        <member name="M:BytecodeApi.CsvRow.#ctor(BytecodeApi.CsvCell[])">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.CsvRow" /> class with a collection of cells.
            </summary>
            <param name="cells">The collection of cells to be added to this <see cref="T:BytecodeApi.CsvRow" />.</param>
        </member>
        <member name="M:BytecodeApi.CsvRow.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.CsvRow" /> class with a collection of cells.
            </summary>
            <param name="cells">The collection of cells to be added to this <see cref="T:BytecodeApi.CsvRow" />, represented as <see cref="T:System.String" /> objects.</param>
        </member>
        <member name="M:BytecodeApi.CsvRow.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.CsvRow" /> class with a collection of cells.
            </summary>
            <param name="cells">The collection of cells to be added to this <see cref="T:BytecodeApi.CsvRow" />, represented as <see cref="T:System.String" /> objects.</param>
        </member>
        <member name="M:BytecodeApi.CsvRow.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            An enumerator that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:BytecodeApi.Desktop">
            <summary>
            Provides a set of <see langword="static" /> methods for Windows desktop interaction.
            </summary>
        </member>
        <member name="M:BytecodeApi.Desktop.Beep">
            <summary>
            Plays the <see cref="P:System.Media.SystemSounds.Beep" /> sound.
            </summary>
        </member>
        <member name="M:BytecodeApi.Desktop.Beep(System.Boolean)">
            <summary>
            Plays the <see cref="P:System.Media.SystemSounds.Beep" /> or the <see cref="P:System.Media.SystemSounds.Hand" /> sound, depending on the <paramref name="success" /> parameter.
            </summary>
            <param name="success"><see langword="true" /> to play <see cref="P:System.Media.SystemSounds.Beep" />; <see langword="false" /> to play <see cref="P:System.Media.SystemSounds.Hand" />.</param>
        </member>
        <member name="M:BytecodeApi.Desktop.TurnOnScreenSaver">
            <summary>
            Turns on the Windows screensaver using a HWND broadcast message, if a screensaver is configured.
            </summary>
        </member>
        <member name="M:BytecodeApi.Desktop.ChangeWallpaper(System.String)">
            <summary>
            Changes the Windows wallpaper to an image from the specified file.
            </summary>
            <param name="path">A <see cref="T:System.String" /> specifying the path to an image file.</param>
            <returns>
            <see langword="true" /> on success;
            otherwise, <see langword="false" />
            </returns>
        </member>
        <member name="M:BytecodeApi.Desktop.CaptureScreen">
            <summary>
            Captures the entire virutal screen and returns a <see cref="T:System.Drawing.Bitmap" /> with the image.
            </summary>
            <returns>
            A <see cref="T:System.Drawing.Bitmap" /> with the image of the virtual screen.
            </returns>
        </member>
        <member name="T:BytecodeApi.FileEx">
            <summary>
            Provides constants and <see langword="static" /> methods that extend the <see cref="T:System.IO.File" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.FileEx.SendToRecycleBin(System.String)">
            <summary>
            Sends the specified file to the recycle bin.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a file.</param>
        </member>
        <member name="M:BytecodeApi.FileEx.GetAlternateStreamNames(System.String)">
            <summary>
            Returns an enumerable collection of alternate data streams names of the specified file.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a file.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> with the names of all alternate data streams of the specified file.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileEx.Unblock(System.String)">
            <summary>
            Deletes the :Zone.Identifier alternate data stream for the specified file.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a file.</param>
            <returns>
            <see langword="true" />, if the :Zone.Identifier alternate data stream was present and could be deleted;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileEx.GetIcon(System.String,System.Boolean)">
            <summary>
            Extracts the icon of the specified file.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a file.</param>
            <param name="large"><see langword="true" /> to extract the large icon; otherwise, <see langword="false" />.</param>
            <returns>
            A new <see cref="T:System.Drawing.Icon" /> that has been extracted from the specified file.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileEx.GetCaseSensitiveName(System.String)">
            <summary>
            Gets the name of the specified file with character casing according to the original and existing file.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a file.</param>
            <returns>
            A <see cref="T:System.String" /> that contains the actual name of the specified file.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileEx.GetCaseSensitiveFullName(System.String)">
            <summary>
            Gets the full path of the specified file with character casing according to the original and existing file.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a file.</param>
            <returns>
            A <see cref="T:System.String" /> that contains the actual full path of the specified file.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileEx.ShowPropertiesDialog(System.String)">
            <summary>
            Shows the properties dialog for the specified file.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a file.</param>
        </member>
        <member name="T:BytecodeApi.DirectoryEx">
            <summary>
            Provides constants and <see langword="static" /> methods that extend the <see cref="T:System.IO.Directory" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.DirectoryEx.SendToRecycleBin(System.String)">
            <summary>
            Sends this directory and all of its contents to recycle bin.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a directory.</param>
        </member>
        <member name="M:BytecodeApi.DirectoryEx.GetCaseSensitiveName(System.String)">
            <summary>
            Gets the name of this directory with character casing according to the original and existing directory.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a directory.</param>
            <returns>
            A <see cref="T:System.String" /> that contains the actual name of this directory.
            </returns>
        </member>
        <member name="M:BytecodeApi.DirectoryEx.GetCaseSensitiveFullName(System.String)">
            <summary>
            Gets the full path of this directory with character casing according to the original and existing directory.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a directory.</param>
            <returns>
            A <see cref="T:System.String" /> that contains the actual full path of this directory.
            </returns>
        </member>
        <member name="M:BytecodeApi.DirectoryEx.ToUncPath(System.String)">
            <summary>
            Gets the UNC path of this directory. If the path cannot be converted to a UNC path, the original path is returned.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a directory.</param>
            <returns>
            The UNC path of this directory, if conversion is possible;
            otherwise, the original path.
            </returns>
        </member>
        <member name="M:BytecodeApi.DirectoryEx.ComputeDirectorySize(System.String)">
            <summary>
            Computes the size of this directory including all of its subdirectories.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a directory.</param>
            <returns>
            The total size in bytes of this directory.
            </returns>
        </member>
        <member name="M:BytecodeApi.DirectoryEx.CopyTo(System.String,System.String)">
            <summary>
            Copies this directory to a new location including all files and subdirectories recursively.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a directory.</param>
            <param name="destDirectoryName">The path of the new location including the top directory name.</param>
        </member>
        <member name="M:BytecodeApi.DirectoryEx.CopyTo(System.String,System.String,System.Boolean)">
            <summary>
            Copies this directory to a new location including all files and subdirectories recursively.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a directory.</param>
            <param name="destDirectoryName">The path of the new location including the top directory name.</param>
            <param name="overwrite"><see langword="true" /> to overwrite contents. Existing files in the destination directory that do not exist in the source directory are not deleted.</param>
        </member>
        <member name="M:BytecodeApi.DirectoryEx.DeleteContents(System.String)">
            <summary>
            Deletes all files and directories from this directory.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a directory.</param>
        </member>
        <member name="M:BytecodeApi.DirectoryEx.DeleteContents(System.String,System.Boolean)">
            <summary>
            Deletes all files and directories from this directory.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a directory.</param>
            <param name="create"><see langword="true" /> to create the directory, if it does not exist.</param>
        </member>
        <member name="M:BytecodeApi.DirectoryEx.ShowPropertiesDialog(System.String)">
            <summary>
            Shows the properties dialog for the directory.
            </summary>
            <param name="path">A <see cref="T:System.String" /> representing the path to a directory.</param>
        </member>
        <member name="T:BytecodeApi.NetworkIO">
            <summary>
            Provides a set of <see langword="static" /> methods for network operations.
            </summary>
        </member>
        <member name="M:BytecodeApi.NetworkIO.DisableCertificateValidation">
            <summary>
            Sets up the <see cref="P:System.Net.ServicePointManager.ServerCertificateValidationCallback" /> to validate all certificates without checking.
            </summary>
        </member>
        <member name="M:BytecodeApi.NetworkIO.WakeOnLan(System.Net.NetworkInformation.PhysicalAddress)">
            <summary>
            Sends a Wake-on-LAN magic packet containing the specified <see cref="T:System.Net.NetworkInformation.PhysicalAddress" /> to UDP broadcast on port 9.
            <para />Packet bytes: FF FF FF FF FF FF | 16 repetitions of <see cref="T:System.Net.NetworkInformation.PhysicalAddress" />
            <para />Total number of bytes: 102.
            </summary>
            <param name="physicalAddress">The <see cref="T:System.Net.NetworkInformation.PhysicalAddress" /> which is contained within the UDP broadcast packet.</param>
        </member>
        <member name="M:BytecodeApi.NetworkIO.WakeOnLan(System.Net.NetworkInformation.PhysicalAddress,System.Byte[])">
            <summary>
            Sends a Wake-on-LAN magic packet containing the specified <see cref="T:System.Net.NetworkInformation.PhysicalAddress" /> to UDP broadcast on port 9 including a password.
            <para />Packet bytes: FF FF FF FF FF FF | 16 repetitions of <see cref="T:System.Net.NetworkInformation.PhysicalAddress" /> | contents of <paramref name="password" />
            <para />Total number of bytes: 102.
            </summary>
            <param name="physicalAddress">The <see cref="T:System.Net.NetworkInformation.PhysicalAddress" /> which is contained within the UDP broadcast packet.</param>
            <param name="password">The binary representation of the password. <paramref name="password" /> must either contain 4 or 6 bytes, or be <see langword="null" />.</param>
        </member>
        <member name="M:BytecodeApi.NetworkIO.GetHostsFileEntries">
            <summary>
            Retrieves all entries from the Windows hosts file and returns a <see cref="T:System.Tuple`2" />[] containing the IP address and the DNS address, respectively. This includes invalid entries. The IP address and the DNS address are separated by the first whitespace character. Empty lines, lines with no whitespace characters and comments are ignored.
            </summary>
            <returns>
            A <see cref="T:System.Tuple`2" />[] with all entries form the Windows hosts file.
            </returns>
        </member>
        <member name="T:BytecodeApi.TempDirectory">
            <summary>
            Helper class for interoperability with the current user's temporary folder.
            </summary>
        </member>
        <member name="M:BytecodeApi.TempDirectory.CreateFile(System.String,System.Byte[])">
            <summary>
            Creates a file in the current user's temporary folder with the specified filename and writes the value of <paramref name="content" /> to it. The file is created in a subdirectory named by a <see cref="T:System.Guid" /> with the <see cref="F:BytecodeApi.GuidFormat.Braces" /> format. The subdirectory is created with <see cref="F:System.IO.FileAttributes.NotContentIndexed" /> and the file's attributes are set to <see cref="F:System.IO.FileAttributes.NotContentIndexed" /> | <see cref="F:System.IO.FileAttributes.Temporary" />.
            </summary>
            <param name="fileName">A <see cref="T:System.String" /> value specifying the filename.</param>
            <param name="content">A <see cref="T:System.Byte" />[] object specifying the content that is written to the file.</param>
            <returns>
            A <see cref="T:System.String" /> value with the full path to the created file.
            </returns>
        </member>
        <member name="M:BytecodeApi.TempDirectory.ExecuteFile(System.String,System.Byte[])">
            <summary>
            Creates a file in the current user's temporary folder with the specified filename and writes the value of <paramref name="content" /> to it. The file is created in a subdirectory named by a <see cref="T:System.Guid" /> with the <see cref="F:BytecodeApi.GuidFormat.Braces" /> format. The subdirectory is created with <see cref="F:System.IO.FileAttributes.NotContentIndexed" /> and the file's attributes are set to <see cref="F:System.IO.FileAttributes.NotContentIndexed" /> | <see cref="F:System.IO.FileAttributes.Temporary" />. The file is then executed and the <see cref="T:System.Diagnostics.Process" /> is returned and <see langword="null" />, if the file could not be executed.
            </summary>
            <param name="fileName">A <see cref="T:System.String" /> value specifying the filename.</param>
            <param name="content">A <see cref="T:System.Byte" />[] object specifying the content that is written to the file.</param>
            <returns>
            The <see cref="T:System.Diagnostics.Process" /> of the executed file and
            <see langword="null" />, if there was an <see cref="T:System.Exception" /> during <see cref="T:System.Diagnostics.Process" /> creation.
            </returns>
        </member>
        <member name="M:BytecodeApi.TempDirectory.ExecuteFile(System.String,System.Byte[],System.Boolean)">
            <summary>
            Creates a file in the current user's temporary folder with the specified filename and writes the value of <paramref name="content" /> to it. The file is created in a subdirectory named by a <see cref="T:System.Guid" /> with the <see cref="F:BytecodeApi.GuidFormat.Braces" /> format. The subdirectory is created with <see cref="F:System.IO.FileAttributes.NotContentIndexed" /> and the file's attributes are set to <see cref="F:System.IO.FileAttributes.NotContentIndexed" /> | <see cref="F:System.IO.FileAttributes.Temporary" />. The file is then executed and the <see cref="T:System.Diagnostics.Process" /> is returned and <see langword="null" />, if the file could not be executed.
            </summary>
            <param name="fileName">A <see cref="T:System.String" /> value specifying the filename.</param>
            <param name="content">A <see cref="T:System.Byte" />[] object specifying the content that is written to the file.</param>
            <param name="runas"><see langword="true" /> to execute this file with the "runas" verb.</param>
            <returns>
            The <see cref="T:System.Diagnostics.Process" /> of the executed file and
            <see langword="null" />, if there was an <see cref="T:System.Exception" /> during <see cref="T:System.Diagnostics.Process" /> creation.
            </returns>
        </member>
        <member name="T:BytecodeApi.WmiPropertyCollection">
            <summary>
            Represents a collection of WMI properties.
            </summary>
        </member>
        <member name="P:BytecodeApi.WmiPropertyCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:BytecodeApi.WmiProperty" /> with the specified name and throws an <see cref="T:System.Exception" />, if it was not found.
            </summary>
            <param name="name">A <see cref="T:System.String" /> specifying the WMI property name.</param>
        </member>
        <member name="P:BytecodeApi.WmiPropertyCollection.Item(System.String,System.Object)">
            <summary>
            Gets the <see cref="T:BytecodeApi.WmiProperty" /> with the specified name and returns a new <see cref="T:BytecodeApi.WmiProperty" /> with a default value, if it was not found.
            </summary>
            <param name="name">A <see cref="T:System.String" /> specifying the WMI property name.</param>
            <param name="defaultValue">The value that is used if the property with the specified name was not found.</param>
        </member>
        <member name="P:BytecodeApi.WmiPropertyCollection.Count">
            <summary>
            Gets the number of properties in this <see cref="T:BytecodeApi.WmiPropertyCollection" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.WmiPropertyCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.WmiPropertyCollection" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.WmiPropertyCollection.#ctor(System.Collections.Generic.IEnumerable{BytecodeApi.WmiProperty})">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.WmiPropertyCollection" /> class with the specified collection of properties.
            </summary>
            <param name="properties">A collection of <see cref="T:BytecodeApi.WmiProperty" /> structures to add to this <see cref="T:BytecodeApi.WmiPropertyCollection" />.</param>
        </member>
        <member name="M:BytecodeApi.WmiPropertyCollection.#ctor(BytecodeApi.WmiProperty[])">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.WmiPropertyCollection" /> class with the specified collection of properties.
            </summary>
            <param name="properties">A collection of <see cref="T:BytecodeApi.WmiProperty" /> structures to add to this <see cref="T:BytecodeApi.WmiPropertyCollection" />.</param>
        </member>
        <member name="M:BytecodeApi.WmiPropertyCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            An enumerator that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:BytecodeApi.WmiProperty">
            <summary>
            Represents a WMI property, composed of a name and a value.
            </summary>
        </member>
        <member name="P:BytecodeApi.WmiProperty.Name">
            <summary>
            Gets the name of the <see cref="T:BytecodeApi.WmiProperty" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.WmiProperty.Value">
            <summary>
            Gets the value of the <see cref="T:BytecodeApi.WmiProperty" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.WmiProperty.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.WmiProperty" /> struct with the specified name and value.
            </summary>
            <param name="name">The name of the <see cref="T:BytecodeApi.WmiProperty" />.</param>
            <param name="value">The value of the <see cref="T:BytecodeApi.WmiProperty" />.</param>
        </member>
        <member name="M:BytecodeApi.WmiProperty.GetValue``1">
            <summary>
            Returns the strongly typed representation of <see cref="P:BytecodeApi.WmiProperty.Value" />. If <see cref="P:BytecodeApi.WmiProperty.Value" /> is of another type, an <see cref="T:System.Exception" /> is thrown.
            </summary>
            <typeparam name="T">The value type to use for conversion.</typeparam>
            <returns>
            The strongly typed representation of <see cref="P:BytecodeApi.WmiProperty.Value" />. If <see cref="P:BytecodeApi.WmiProperty.Value" /> is of another type, an <see cref="T:System.Exception" /> is thrown.
            </returns>
        </member>
        <member name="M:BytecodeApi.WmiProperty.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:BytecodeApi.WmiObject">
            <summary>
            Represents a WMI object instance.
            </summary>
        </member>
        <member name="P:BytecodeApi.WmiObject.Class">
            <summary>
            Gets the <see cref="T:BytecodeApi.WmiClass" /> that this <see cref="T:BytecodeApi.WmiObject" /> was created from.
            </summary>
        </member>
        <member name="P:BytecodeApi.WmiObject.Properties">
            <summary>
            Gets the collection of properties of this <see cref="T:BytecodeApi.WmiObject" /> instance.
            </summary>
        </member>
        <member name="M:BytecodeApi.WmiObject.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:BytecodeApi.WmiClass">
            <summary>
            Represents a WMI class.
            </summary>
        </member>
        <member name="P:BytecodeApi.WmiClass.Namespace">
            <summary>
            Gets the <see cref="T:BytecodeApi.WmiNamespace" /> that this <see cref="T:BytecodeApi.WmiClass" /> was created from.
            </summary>
        </member>
        <member name="P:BytecodeApi.WmiClass.Name">
            <summary>
            Gets the name of the <see cref="T:BytecodeApi.WmiClass" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.WmiClass.#ctor(BytecodeApi.WmiNamespace,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.WmiClass" /> class with the specified <see cref="T:BytecodeApi.WmiNamespace" /> and the specified name.
            </summary>
            <param name="wmiNamespace">The WMI namespace of this class, in accordance to the <paramref name="name" /> parameter.</param>
            <param name="name">The name of the <see cref="T:BytecodeApi.WmiClass" />.</param>
        </member>
        <member name="M:BytecodeApi.WmiClass.GetObjects">
            <summary>
            Retrieves all objects of this <see cref="T:BytecodeApi.WmiClass" /> including all columns.
            </summary>
            <returns>
            A new <see cref="T:BytecodeApi.WmiObject" />[] containing all objects of this <see cref="T:BytecodeApi.WmiClass" /> including all columns.
            </returns>
        </member>
        <member name="M:BytecodeApi.WmiClass.GetObjects(System.String[])">
            <summary>
            Retrieves all objects of this <see cref="T:BytecodeApi.WmiClass" /> including the specified columns. If <paramref name="columns" /> is <see langword="null" />, all columns are retrieved.
            </summary>
            <param name="columns">A <see cref="T:System.String" />[] specifying the columns to select. If <see langword="null" />, all columns are retrieved.</param>
            <returns>
            A new <see cref="T:BytecodeApi.WmiObject" />[] containing all objects of this <see cref="T:BytecodeApi.WmiClass" /> including the specified columns.
            </returns>
        </member>
        <member name="M:BytecodeApi.WmiClass.GetObjects(System.String[],System.String)">
            <summary>
            Retrieves objects of this <see cref="T:BytecodeApi.WmiClass" /> including the specified columns using a WHERE condition. If <paramref name="columns" /> is <see langword="null" />, all columns are retrieved. If <paramref name="where" /> is <see langword="null" /> or empty, no filter is applied.
            </summary>
            <param name="columns">A <see cref="T:System.String" />[] specifying the columns to select. If <see langword="null" />, all columns are retrieved.</param>
            <param name="where">A <see cref="T:System.String" /> specifying a WMI query that is appended after a "WHERE". If <see langword="null" /> or empty, no filter is applied.</param>
            <returns>
            A new <see cref="T:BytecodeApi.WmiObject" />[] containing objects of this <see cref="T:BytecodeApi.WmiClass" /> including the specified columns using the specified WHERE condition.
            </returns>
        </member>
        <member name="M:BytecodeApi.WmiClass.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> whose value is the name of this <see cref="T:BytecodeApi.WmiClass" />.
            </summary>
            <returns>
            A <see cref="T:System.String" /> whose value is the name of this <see cref="T:BytecodeApi.WmiClass" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.WmiNamespace">
            <summary>
            Represents a WMI namespace.
            </summary>
        </member>
        <member name="P:BytecodeApi.WmiNamespace.Name">
            <summary>
            Gets the name of the <see cref="T:BytecodeApi.WmiNamespace" />. The "ROOT" namespace name is represented as <see cref="F:System.String.Empty" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.WmiNamespace.Path">
            <summary>
            Gets the path of the <see cref="T:BytecodeApi.WmiNamespace" />, including all parent namespaces except "ROOT", separated by a backslash.
            </summary>
        </member>
        <member name="P:BytecodeApi.WmiNamespace.FullName">
            <summary>
            Gets the full path of the <see cref="T:BytecodeApi.WmiNamespace" />, including all parent namespaces, the "ROOT" element and the workstation name.
            <para />Example: \\WORKSTATION-NAME\ROOT\CIMV2
            </summary>
        </member>
        <member name="P:BytecodeApi.WmiNamespace.Namespaces">
            <summary>
            Gets an array containing all child namespaces. This property is <see langword="null" />, if the loadNamespaces parameter was set to <see langword="false" /> in the constructor.
            </summary>
        </member>
        <member name="M:BytecodeApi.WmiNamespace.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.WmiNamespace" /> class from the specified path. The <paramref name="path" /> parameter starts after "\\WORKSTATION-NAME\ROOT\" and excludes "ROOT". Child namespaces are not loaded.
            <para />Example: CIMV2
            </summary>
            <param name="path">The relative path of the <see cref="T:BytecodeApi.WmiNamespace" />, excluding workstation name and "ROOT".</param>
        </member>
        <member name="M:BytecodeApi.WmiNamespace.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.WmiNamespace" /> class from the specified path. The <paramref name="path" /> parameter starts after "\\WORKSTATION-NAME\ROOT\" and excludes "ROOT".
            <para />Example: CIMV2
            </summary>
            <param name="path">The relative path of the <see cref="T:BytecodeApi.WmiNamespace" />, excluding workstation name and "ROOT".</param>
            <param name="loadNamespaces"><see langword="true" /> to load child namespaces recursively.</param>
        </member>
        <member name="M:BytecodeApi.WmiNamespace.GetRoot">
            <summary>
            Retrieves all WMI namespaces, starting from ROOT\ recursively. This is equivalent to <see langword="new" /> <see cref="T:BytecodeApi.WmiNamespace" />(<see langword="null" />).
            </summary>
            <returns>
            A <see cref="T:BytecodeApi.WmiNamespace" /> that is equivalent to <see langword="new" /> <see cref="T:BytecodeApi.WmiNamespace" />(<see langword="null" />).
            </returns>
        </member>
        <member name="M:BytecodeApi.WmiNamespace.GetClasses">
            <summary>
            Retrieves all classes of this <see cref="T:BytecodeApi.WmiNamespace" />.
            </summary>
            <returns>
            A new <see cref="T:BytecodeApi.WmiClass" />[] containing all classes of this <see cref="T:BytecodeApi.WmiNamespace" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.WmiNamespace.GetClass(System.String)">
            <summary>
            Finds a class of this <see cref="T:BytecodeApi.WmiNamespace" /> by the specified name. An <see cref="T:System.Exception" /> is thrown, if the class could not be created.
            </summary>
            <returns>
            A new <see cref="T:BytecodeApi.WmiClass" /> created from the specified name. An <see cref="T:System.Exception" /> is thrown, if the class could not be created.
            </returns>
        </member>
        <member name="M:BytecodeApi.WmiNamespace.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> whose value is the name of this <see cref="T:BytecodeApi.WmiNamespace" />.
            </summary>
            <returns>
            A <see cref="T:System.String" /> whose value is the name of this <see cref="T:BytecodeApi.WmiNamespace" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.Paths">
            <summary>
            Represents a static set common system paths.
            </summary>
        </member>
        <member name="F:BytecodeApi.Paths.HostsFile">
            <summary>
            Represents the path to the Windows hosts file. This field is read-only.
            <para />Example: C:\Windows\System32\drivers\etc\hosts
            </summary>
        </member>
        <member name="F:BytecodeApi.Paths.ServicesFile">
            <summary>
            Represents the path to the Windows services file. This field is read-only.
            <para />Example: C:\Windows\System32\drivers\etc\services
            </summary>
        </member>
        <member name="T:BytecodeApi.RegistryKeys">
            <summary>
            Container class for <see cref="T:BytecodeApi.RegistryKeys.CurrentUser" />, and <see cref="T:BytecodeApi.RegistryKeys.LocalMachine" /> classes.
            </summary>
        </member>
        <member name="T:BytecodeApi.RegistryKeys.CurrentUser">
            <summary>
            Represents a static set of <see cref="T:Microsoft.Win32.RegistryKey" /> objects to common locations in the Windows registry in the HKEY_CURRENT_USER hive.
            </summary>
        </member>
        <member name="M:BytecodeApi.RegistryKeys.CurrentUser.Software(System.Boolean)">
            <summary>
            Creates a new <see cref="T:Microsoft.Win32.RegistryKey" /> object pointing to HKEY_CURRENT_USER\Software.
            </summary>
            <param name="writable"><see langword="true" /> to create this <see cref="T:Microsoft.Win32.RegistryKey" /> object with write permissions.</param>
            <returns>
            A new <see cref="T:Microsoft.Win32.RegistryKey" /> object pointing to HKEY_CURRENT_USER\Software.
            </returns>
        </member>
        <member name="M:BytecodeApi.RegistryKeys.CurrentUser.WindowsCurrentVersion(System.Boolean)">
            <summary>
            Creates a new <see cref="T:Microsoft.Win32.RegistryKey" /> object pointing to HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion.
            </summary>
            <param name="writable"><see langword="true" /> to create this <see cref="T:Microsoft.Win32.RegistryKey" /> object with write permissions.</param>
            <returns>
            A new <see cref="T:Microsoft.Win32.RegistryKey" /> object pointing to HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion.
            </returns>
        </member>
        <member name="M:BytecodeApi.RegistryKeys.CurrentUser.Run(System.Boolean)">
            <summary>
            Creates a new <see cref="T:Microsoft.Win32.RegistryKey" /> object pointing to HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run.
            </summary>
            <param name="writable"><see langword="true" /> to create this <see cref="T:Microsoft.Win32.RegistryKey" /> object with write permissions.</param>
            <returns>
            A new <see cref="T:Microsoft.Win32.RegistryKey" /> object pointing to HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run.
            </returns>
        </member>
        <member name="T:BytecodeApi.RegistryKeys.LocalMachine">
            <summary>
            Represents a static set of <see cref="T:Microsoft.Win32.RegistryKey" /> objects to common locations in the Windows registry in the HKEY_LOCAL_MACHINE hive.
            </summary>
        </member>
        <member name="M:BytecodeApi.RegistryKeys.LocalMachine.Software(System.Boolean)">
            <summary>
            Creates a new <see cref="T:Microsoft.Win32.RegistryKey" /> object pointing to HKEY_LOCAL_MACHINE\Software.
            </summary>
            <param name="writable"><see langword="true" /> to create this <see cref="T:Microsoft.Win32.RegistryKey" /> object with write permissions.</param>
            <returns>
            A new <see cref="T:Microsoft.Win32.RegistryKey" /> object pointing to HKEY_LOCAL_MACHINE\Software.
            </returns>
        </member>
        <member name="M:BytecodeApi.RegistryKeys.LocalMachine.WindowsCurrentVersion(System.Boolean)">
            <summary>
            Creates a new <see cref="T:Microsoft.Win32.RegistryKey" /> object pointing to HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion.
            </summary>
            <param name="writable"><see langword="true" /> to create this <see cref="T:Microsoft.Win32.RegistryKey" /> object with write permissions.</param>
            <returns>
            A new <see cref="T:Microsoft.Win32.RegistryKey" /> object pointing to HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion.
            </returns>
        </member>
        <member name="M:BytecodeApi.RegistryKeys.LocalMachine.Run(System.Boolean)">
            <summary>
            Creates a new <see cref="T:Microsoft.Win32.RegistryKey" /> object pointing to HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run.
            </summary>
            <param name="writable"><see langword="true" /> to create this <see cref="T:Microsoft.Win32.RegistryKey" /> object with write permissions.</param>
            <returns>
            A new <see cref="T:Microsoft.Win32.RegistryKey" /> object pointing to HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run.
            </returns>
        </member>
        <member name="T:BytecodeApi.Packs">
            <summary>
            Represents the URI prefixes for WPF pack URIs with the "pack://" scheme.
            </summary>
        </member>
        <member name="F:BytecodeApi.Packs.Application">
            <summary>
            Represents the "application:///" authority.
            </summary>
        </member>
        <member name="F:BytecodeApi.Packs.SiteOfOrigin">
            <summary>
            Represents the "siteoforigin:///" authority.
            </summary>
        </member>
        <member name="T:BytecodeApi.TextResources">
            <summary>
            Represents a set of reusable <see cref="T:System.String" /> and <see cref="T:System.Char" /> constants.
            </summary>
        </member>
        <member name="F:BytecodeApi.TextResources.Alphabet">
            <summary>
            Represents the alphabet in lowercase.
            </summary>
        </member>
        <member name="F:BytecodeApi.TextResources.Consonants">
            <summary>
            Represents only the consonants of alphabet in lowercase.
            </summary>
        </member>
        <member name="F:BytecodeApi.TextResources.Vovels">
            <summary>
            Represents only the vovels of alphabet in lowercase.
            </summary>
        </member>
        <member name="F:BytecodeApi.TextResources.LoremIpsum">
            <summary>
            Represents the "Lorem Ipsum" text. The length of the <see cref="T:System.String" /> is 445 characters.
            </summary>
        </member>
        <member name="F:BytecodeApi.TextResources.TheQuickBrownFox">
            <summary>
            Represents the "The quick brown fox" text. This text is human readable and contains all characters from the alphabet at least once.
            </summary>
        </member>
        <member name="F:BytecodeApi.TextResources.RightToLeftMark">
            <summary>
            Represents the right-to-left mark (U+200F). This character reverses printing direction of characters in some user interfaces.
            </summary>
        </member>
        <member name="T:BytecodeApi.Compression">
            <summary>
            Helper class to compress and decompress data.
            </summary>
        </member>
        <member name="M:BytecodeApi.Compression.Compress(System.Byte[])">
            <summary>
            Compresses the specified <see cref="T:System.Byte" />[] using GZip and returns a new <see cref="T:System.Byte" />[] that can be used with the <see cref="M:BytecodeApi.Compression.Decompress(System.Byte[])" /> method. The resulting binary is proprietary and specific to the <see cref="T:BytecodeApi.Compression" /> class.
            </summary>
            <param name="data">A <see cref="T:System.Byte" />[] that represents data to be compressed.</param>
            <returns>
            A new <see cref="T:System.Byte" />[] that can be used with the <see cref="M:BytecodeApi.Compression.Decompress(System.Byte[])" /> method. The resulting binary is proprietary and specific to the <see cref="T:BytecodeApi.Compression" /> class.
            </returns>
        </member>
        <member name="M:BytecodeApi.Compression.Decompress(System.Byte[])">
            <summary>
            Decompresses the specified <see cref="T:System.Byte" />[] using GZip and returns a new <see cref="T:System.Byte" />[] that represents the uncompressed data. The binary in the <paramref name="data" /> parameter is proprietary and specific to the <see cref="T:BytecodeApi.Compression" /> class.
            </summary>
            <param name="data">A <see cref="T:System.Byte" />[] that represents data compressed by the <see cref="M:BytecodeApi.Compression.Compress(System.Byte[])" /> method.</param>
            <returns>
            A new <see cref="T:System.Byte" />[] that represents the uncompressed data. The binary in the <paramref name="data" /> parameter is proprietary and specific to the <see cref="T:BytecodeApi.Compression" /> class.
            </returns>
        </member>
        <member name="T:BytecodeApi.Encryption">
            <summary>
            Helper class to encrypt and decrypt data.
            </summary>
        </member>
        <member name="M:BytecodeApi.Encryption.GenerateIV">
            <summary>
            Generates a 128-bit initialization vector for symmetric algorithms. The result is a <see cref="T:System.Byte" />[] with a length of 16.
            </summary>
            <returns>
            A <see cref="T:System.Byte" />[] with a length of 16, representing a 128-bit initialization vector.
            </returns>
        </member>
        <member name="M:BytecodeApi.Encryption.EncryptRaw(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Encrypts the specified <see cref="T:System.Byte" />[] using the specified IV and key and returns a <see cref="T:System.Byte" />[] representing the encrypted version of <paramref name="data" />. The resulting binary is proprietary and specific to the <see cref="T:BytecodeApi.Encryption" /> class.
            </summary>
            <param name="data">A <see cref="T:System.Byte" />[] object with the data to be encrypted.</param>
            <param name="iv">A <see cref="T:System.Byte" />[] object with the IV that is used to encrypt <paramref name="data" />.</param>
            <param name="key">A <see cref="T:System.Byte" />[] object with the key that is used to encrypt <paramref name="data" />.</param>
            <returns>
            A new <see cref="T:System.Byte" />[] representing the encrypted version of <paramref name="data" />. The resulting binary is proprietary and specific to the <see cref="T:BytecodeApi.Encryption" /> class.
            </returns>
        </member>
        <member name="M:BytecodeApi.Encryption.DecryptRaw(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Decrypts the specified <see cref="T:System.Byte" />[] using the specified IV and key and returns a <see cref="T:System.Byte" />[] representing the decrypted version of <paramref name="data" />. The <paramref name="data" /> parameter is a proprietary binary, created by the <see cref="T:BytecodeApi.Encryption" /> class.
            </summary>
            <param name="data">A <see cref="T:System.Byte" />[] object with the data to be decrypted.</param>
            <param name="iv">A <see cref="T:System.Byte" />[] object with the IV that is used to decrypt <paramref name="data" />.</param>
            <param name="key">A <see cref="T:System.Byte" />[] object with the key that is used to decrypt <paramref name="data" />.</param>
            <returns>
            A new <see cref="T:System.Byte" />[] representing the decrypted version of <paramref name="data" />. The <paramref name="data" /> parameter is a proprietary binary, created by the <see cref="T:BytecodeApi.Encryption" /> class.
            </returns>
        </member>
        <member name="M:BytecodeApi.Encryption.Encrypt(System.Byte[],System.String)">
            <summary>
            Encrypts the specified <see cref="T:System.Byte" />[] using the specified password and returns a <see cref="T:System.Byte" />[] representing the encrypted version of <paramref name="data" />. The resulting binary is proprietary and specific to the <see cref="T:BytecodeApi.Encryption" /> class.
            </summary>
            <param name="data">A <see cref="T:System.Byte" />[] object with the data to be encrypted.</param>
            <param name="password">A <see cref="T:System.String" /> representing the password to encrypt <paramref name="data" /> with. The password is hashed using SHA-256.</param>
            <returns>
            A new <see cref="T:System.Byte" />[] representing the encrypted version of <paramref name="data" />. The resulting binary is proprietary and specific to the <see cref="T:BytecodeApi.Encryption" /> class.
            </returns>
        </member>
        <member name="M:BytecodeApi.Encryption.Encrypt(System.Byte[],System.String,System.Int32)">
            <summary>
            Encrypts the specified <see cref="T:System.Byte" />[] using the specified password and returns a <see cref="T:System.Byte" />[] representing the encrypted version of <paramref name="data" />. The resulting binary is proprietary and specific to the <see cref="T:BytecodeApi.Encryption" /> class.
            </summary>
            <param name="data">A <see cref="T:System.Byte" />[] object with the data to be encrypted.</param>
            <param name="password">A <see cref="T:System.String" /> representing the password to encrypt <paramref name="data" /> with. The password is hashed using SHA-256.</param>
            <param name="passwordHashPasses">A <see cref="T:System.Int32" /> value indicating the number of hash passes for <paramref name="password" />.</param>
            <returns>
            A new <see cref="T:System.Byte" />[] representing the encrypted version of <paramref name="data" />. The resulting binary is proprietary and specific to the <see cref="T:BytecodeApi.Encryption" /> class.
            </returns>
        </member>
        <member name="M:BytecodeApi.Encryption.Decrypt(System.Byte[],System.String)">
            <summary>
            Decrypts the specified <see cref="T:System.Byte" />[] using the specified password and returns a <see cref="T:System.Byte" />[] representing the decrypted version of <paramref name="data" />. The <paramref name="data" /> parameter is a proprietary binary, created by the <see cref="T:BytecodeApi.Encryption" /> class.
            </summary>
            <param name="data">A <see cref="T:System.Byte" />[] object with the data to be decrypted.</param>
            <param name="password">A <see cref="T:System.String" /> representing the password to decrypt <paramref name="data" /> with.</param>
            <returns>
            A new <see cref="T:System.Byte" />[] representing the encrypted version of <paramref name="data" />. The resulting binary is proprietary and specific to the <see cref="T:BytecodeApi.Encryption" /> class.
            </returns>
        </member>
        <member name="M:BytecodeApi.Encryption.Rot13(System.String)">
            <summary>
            Encodes a <see cref="T:System.String" /> to its equivalent ROT13 representation. This function can either encode a <see cref="T:System.String" /> or decode an already encoded <see cref="T:System.String" />.
            <para />Example:"http://example.com/" is encoded to "uggc://rknzcyr.pbz/".
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be encoded or decoded.</param>
            <returns>
            The encoded or decoded representation of <paramref name="str" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.Hashes">
            <summary>
            Helper class to compute hashes of a specific <see cref="T:BytecodeApi.HashType" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.Hashes.ComputeRaw(System.String,BytecodeApi.HashType)">
            <summary>
            Computes the hash value for the specified <see cref="T:System.String" /> using the specified <see cref="T:BytecodeApi.HashType" />. The <see cref="T:System.String" /> is converted using the <see cref="P:System.Text.Encoding.UTF8" /> encoding.
            </summary>
            <param name="data">The <see cref="T:System.String" /> to be used in the hash computation. The <see cref="T:System.String" /> is converted using the <see cref="P:System.Text.Encoding.UTF8" /> encoding.</param>
            <param name="type">The <see cref="T:BytecodeApi.HashType" /> specifying the algorithm that is used.</param>
            <returns>
            A <see cref="T:System.Byte" />[] object representing the fixed-length binary of the hash of the <paramref name="data" /> parameter.
            </returns>
        </member>
        <member name="M:BytecodeApi.Hashes.ComputeRaw(System.String,BytecodeApi.HashType,System.Int32)">
            <summary>
            Computes the hash value for the specified <see cref="T:System.String" /> using the specified <see cref="T:BytecodeApi.HashType" /> and repeats computation a specified number of times. The <see cref="T:System.String" /> is converted using the <see cref="P:System.Text.Encoding.UTF8" /> encoding.
            </summary>
            <param name="data">The <see cref="T:System.String" /> to be used in the hash computation. The <see cref="T:System.String" /> is converted using the <see cref="P:System.Text.Encoding.UTF8" /> encoding.</param>
            <param name="type">The <see cref="T:BytecodeApi.HashType" /> specifying the algorithm that is used.</param>
            <param name="passes">A <see cref="T:System.Int32" /> value indicating the number of times <paramref name="data" /> should be processed. For successive passes, the binary result of the previous pass is used as input value for the next pass.</param>
            <returns>
            A <see cref="T:System.Byte" />[] object representing the fixed-length binary of the hash of the <paramref name="data" /> parameter.
            </returns>
        </member>
        <member name="M:BytecodeApi.Hashes.ComputeRaw(System.Byte[],BytecodeApi.HashType)">
            <summary>
            Computes the hash value for the specified <see cref="T:System.Byte" />[] using the specified <see cref="T:BytecodeApi.HashType" />.
            </summary>
            <param name="data">The <see cref="T:System.Byte" />[] to be used in the hash computation.</param>
            <param name="type">The <see cref="T:BytecodeApi.HashType" /> specifying the algorithm that is used.</param>
            <returns>
            A <see cref="T:System.Byte" />[] object representing the fixed-length binary of the hash of the <paramref name="data" /> parameter.
            </returns>
        </member>
        <member name="M:BytecodeApi.Hashes.ComputeRaw(System.Byte[],BytecodeApi.HashType,System.Int32)">
            <summary>
            Computes the hash value for the specified <see cref="T:System.Byte" />[] using the specified <see cref="T:BytecodeApi.HashType" /> and repeats computation a specified number of times.
            </summary>
            <param name="data">The <see cref="T:System.Byte" />[] to be used in the hash computation.</param>
            <param name="type">The <see cref="T:BytecodeApi.HashType" /> specifying the algorithm that is used.</param>
            <param name="passes">A <see cref="T:System.Int32" /> value indicating the number of times <paramref name="data" /> should be processed. For successive passes, the binary result of the previous pass is used as input value for the next pass.</param>
            <returns>
            A <see cref="T:System.Byte" />[] object representing the fixed-length binary of the hash of the <paramref name="data" /> parameter.
            </returns>
        </member>
        <member name="M:BytecodeApi.Hashes.Compute(System.String,BytecodeApi.HashType)">
            <summary>
            Computes the hash value for the specified <see cref="T:System.String" /> using the specified <see cref="T:BytecodeApi.HashType" />. The <see cref="T:System.String" /> is converted using the <see cref="P:System.Text.Encoding.UTF8" /> encoding. The result is the lowercase hexadecimal hash representation of the <paramref name="data" /> parameter.
            </summary>
            <param name="data">The <see cref="T:System.String" /> to be used in the hash computation. The <see cref="T:System.String" /> is converted using the <see cref="P:System.Text.Encoding.UTF8" /> encoding.</param>
            <param name="type">The <see cref="T:BytecodeApi.HashType" /> specifying the algorithm that is used.</param>
            <returns>
            The lowercase hexadecimal hash representation of the <paramref name="data" /> parameter.
            </returns>
        </member>
        <member name="M:BytecodeApi.Hashes.Compute(System.String,BytecodeApi.HashType,System.Boolean)">
            <summary>
            Computes the hash value for the specified <see cref="T:System.String" /> using the specified <see cref="T:BytecodeApi.HashType" />. The <see cref="T:System.String" /> is converted using the <see cref="P:System.Text.Encoding.UTF8" /> encoding. The result is the hexadecimal hash representation of the <paramref name="data" /> parameter.
            </summary>
            <param name="data">The <see cref="T:System.String" /> to be used in the hash computation. The <see cref="T:System.String" /> is converted using the <see cref="P:System.Text.Encoding.UTF8" /> encoding.</param>
            <param name="type">The <see cref="T:BytecodeApi.HashType" /> specifying the algorithm that is used.</param>
            <param name="upperCase"><see langword="true" /> to use uppercase characters for the result <see cref="T:System.String" />; otherwise, <see langword="false" />.</param>
            <returns>
            The hexadecimal hash representation of the <paramref name="data" /> parameter.
            </returns>
        </member>
        <member name="M:BytecodeApi.Hashes.Compute(System.String,BytecodeApi.HashType,System.Boolean,System.Int32)">
            <summary>
            Computes the hash value for the specified <see cref="T:System.String" /> using the specified <see cref="T:BytecodeApi.HashType" /> and repeats computation a specified number of times. The <see cref="T:System.String" /> is converted using the <see cref="P:System.Text.Encoding.UTF8" /> encoding. The result is the hexadecimal hash representation of the <paramref name="data" /> parameter.
            </summary>
            <param name="data">The <see cref="T:System.String" /> to be used in the hash computation. The <see cref="T:System.String" /> is converted using the <see cref="P:System.Text.Encoding.UTF8" /> encoding.</param>
            <param name="type">The <see cref="T:BytecodeApi.HashType" /> specifying the algorithm that is used.</param>
            <param name="upperCase"><see langword="true" /> to use uppercase characters for the result <see cref="T:System.String" />; otherwise, <see langword="false" />.</param>
            <param name="passes">A <see cref="T:System.Int32" /> value indicating the number of times <paramref name="data" /> should be processed. For successive passes, the binary result of the previous pass is used as input value for the next pass.</param>
            <returns>
            The hexadecimal hash representation of the <paramref name="data" /> parameter.
            </returns>
        </member>
        <member name="M:BytecodeApi.Hashes.Compute(System.Byte[],BytecodeApi.HashType)">
            <summary>
            Computes the hash value for the specified <see cref="T:System.Byte" />[] using the specified <see cref="T:BytecodeApi.HashType" />. The result is the lowercase hexadecimal hash representation of the <paramref name="data" /> parameter.
            </summary>
            <param name="data">The <see cref="T:System.Byte" />[] to be used in the hash computation.</param>
            <param name="type">The <see cref="T:BytecodeApi.HashType" /> specifying the algorithm that is used.</param>
            <returns>
            The lowercase hexadecimal hash representation of the <paramref name="data" /> parameter.
            </returns>
        </member>
        <member name="M:BytecodeApi.Hashes.Compute(System.Byte[],BytecodeApi.HashType,System.Boolean)">
            <summary>
            Computes the hash value for the specified <see cref="T:System.Byte" />[] using the specified <see cref="T:BytecodeApi.HashType" />. The result is the hexadecimal hash representation of the <paramref name="data" /> parameter.
            </summary>
            <param name="data">The <see cref="T:System.Byte" />[] to be used in the hash computation.</param>
            <param name="type">The <see cref="T:BytecodeApi.HashType" /> specifying the algorithm that is used.</param>
            <param name="upperCase"><see langword="true" /> to use uppercase characters for the result <see cref="T:System.String" />; otherwise, <see langword="false" />.</param>
            <returns>
            The hexadecimal hash representation of the <paramref name="data" /> parameter.
            </returns>
        </member>
        <member name="M:BytecodeApi.Hashes.Compute(System.Byte[],BytecodeApi.HashType,System.Boolean,System.Int32)">
            <summary>
            Computes the hash value for the specified <see cref="T:System.Byte" />[] using the specified <see cref="T:BytecodeApi.HashType" /> and repeats computation a specified number of times. The result is the hexadecimal hash representation of the <paramref name="data" /> parameter.
            </summary>
            <param name="data">The <see cref="T:System.Byte" />[] to be used in the hash computation.</param>
            <param name="type">The <see cref="T:BytecodeApi.HashType" /> specifying the algorithm that is used.</param>
            <param name="upperCase"><see langword="true" /> to use uppercase characters for the result <see cref="T:System.String" />; otherwise, <see langword="false" />.</param>
            <param name="passes">A <see cref="T:System.Int32" /> value indicating the number of times <paramref name="data" /> should be processed. For successive passes, the binary result of the previous pass is used as input value for the next pass.</param>
            <returns>
            The hexadecimal hash representation of the <paramref name="data" /> parameter.
            </returns>
        </member>
        <member name="T:BytecodeApi.MathEx">
            <summary>
            Provides constants and <see langword="static" /> methods that extend the <see cref="T:System.Math" /> class.
            </summary>
        </member>
        <member name="F:BytecodeApi.MathEx.AverageDaysInYear">
            <summary>
            Represents the average days per year as a <see cref="T:System.Double" /> value. This field is constant.
            </summary>
        </member>
        <member name="F:BytecodeApi.MathEx.AverageDaysInMonth">
            <summary>
            Represents the average days per month as a <see cref="T:System.Double" /> value. This field is constant.
            </summary>
        </member>
        <member name="F:BytecodeApi.MathEx.Random">
            <summary>
            Represents a singleton <see cref="T:System.Random" /> object. This field is read-only.
            </summary>
        </member>
        <member name="F:BytecodeApi.MathEx.RandomNumberGenerator">
            <summary>
            Represents a singleton <see cref="T:System.Security.Cryptography.RandomNumberGenerator" /> object. This field is read-only.
            </summary>
        </member>
        <member name="M:BytecodeApi.MathEx.Sin(System.Double,BytecodeApi.AngleType)">
            <summary>
            Returns the sine of the specified angle, considering the specified <see cref="T:BytecodeApi.AngleType" />.
            </summary>
            <param name="value">A <see cref="T:System.Double" /> value representing an angle, measured in the specified <see cref="T:BytecodeApi.AngleType" />.</param>
            <param name="angleType">An <see cref="T:BytecodeApi.AngleType" /> specifying the type of angle to be measured.</param>
            <returns>
            The sine of <paramref name="value" />.
            If <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, <see cref="F:System.Double.PositiveInfinity" />, this method returns <see cref="F:System.Double.NaN" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.Sinh(System.Double,BytecodeApi.AngleType)">
            <summary>
            Returns the hyperbolic sine of the specified angle, considering the specified <see cref="T:BytecodeApi.AngleType" />.
            </summary>
            <param name="value">A <see cref="T:System.Double" /> value representing an angle, measured in the specified <see cref="T:BytecodeApi.AngleType" />.</param>
            <param name="angleType">An <see cref="T:BytecodeApi.AngleType" /> specifying the type of angle to be measured.</param>
            <returns>
            The hyperbolic sine of <paramref name="value" />.
            If <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, <see cref="F:System.Double.PositiveInfinity" />, this method returns a <see cref="T:System.Double" /> equal to <paramref name="value" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.Cos(System.Double,BytecodeApi.AngleType)">
            <summary>
            Returns the cosine of the specified angle, considering the specified <see cref="T:BytecodeApi.AngleType" />.
            </summary>
            <param name="value">A <see cref="T:System.Double" /> value representing an angle, measured in the specified <see cref="T:BytecodeApi.AngleType" />.</param>
            <param name="angleType">An <see cref="T:BytecodeApi.AngleType" /> specifying the type of angle to be measured.</param>
            <returns>
            The cosine of <paramref name="value" />.
            If <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, <see cref="F:System.Double.PositiveInfinity" />, this method returns <see cref="F:System.Double.NaN" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.Cosh(System.Double,BytecodeApi.AngleType)">
            <summary>
            Returns the hyperbolic cosine of the specified angle, considering the specified <see cref="T:BytecodeApi.AngleType" />.
            </summary>
            <param name="value">A <see cref="T:System.Double" /> value representing an angle, measured in the specified <see cref="T:BytecodeApi.AngleType" />.</param>
            <param name="angleType">An <see cref="T:BytecodeApi.AngleType" /> specifying the type of angle to be measured.</param>
            <returns>
            The hyperbolic cosine of <paramref name="value" />.
            If <paramref name="value" /> is equal to <see cref="F:System.Double.NegativeInfinity" /> or <see cref="F:System.Double.PositiveInfinity" />, <see cref="F:System.Double.PositiveInfinity" /> is returned.
            If <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> is returned.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.Tan(System.Double,BytecodeApi.AngleType)">
            <summary>
            Returns the tangent of the specified angle, considering the specified <see cref="T:BytecodeApi.AngleType" />.
            </summary>
            <param name="value">A <see cref="T:System.Double" /> value representing an angle, measured in the specified <see cref="T:BytecodeApi.AngleType" />.</param>
            <param name="angleType">An <see cref="T:BytecodeApi.AngleType" /> specifying the type of angle to be measured.</param>
            <returns>
            The tangent of <paramref name="value" />.
            If <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, <see cref="F:System.Double.PositiveInfinity" />, this method returns <see cref="F:System.Double.NaN" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.Tanh(System.Double,BytecodeApi.AngleType)">
            <summary>
            Returns the hyperbolic tangent of the specified angle, considering the specified <see cref="T:BytecodeApi.AngleType" />.
            </summary>
            <param name="value">A <see cref="T:System.Double" /> value representing an angle, measured in the specified <see cref="T:BytecodeApi.AngleType" />.</param>
            <param name="angleType">An <see cref="T:BytecodeApi.AngleType" /> specifying the type of angle to be measured.</param>
            <returns>
            The hyperbolic tangent of <paramref name="value" />.
            If <paramref name="value" /> is equal to <see cref="F:System.Double.NegativeInfinity" />, this method returns -1.0.
            If <paramref name="value" /> is equal to <see cref="F:System.Double.PositiveInfinity" />, this method returns 1.0.
            If <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />, this method returns <see cref="F:System.Double.NaN" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.Asin(System.Double,BytecodeApi.AngleType)">
            <summary>
            Returns the angle whose sine is the specified number, considering the specified <see cref="T:BytecodeApi.AngleType" />.
            </summary>
            <param name="d">A number representing a sine, where <paramref name="d" /> must be greater than or equal to -1.0 and less than or equal to 1.0.</param>
            <param name="angleType">An <see cref="T:BytecodeApi.AngleType" /> specifying the type of angle to be measured.</param>
            <returns>
            An angle,
            or <see cref="F:System.Double.NaN" />, if <paramref name="d" /> &lt; -1.0, <paramref name="d" /> &gt; 1.0 or if <paramref name="d" /> equals <see cref="F:System.Double.NaN" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.Acos(System.Double,BytecodeApi.AngleType)">
            <summary>
            Returns the angle whose cosine is the specified number, considering the specified <see cref="T:BytecodeApi.AngleType" />.
            </summary>
            <param name="d">A number representing a cosine, where <paramref name="d" /> must be greater than or equal to -1.0 and less than or equal to 1.0.</param>
            <param name="angleType">An <see cref="T:BytecodeApi.AngleType" /> specifying the type of angle to be measured.</param>
            <returns>
            An angle,
            or <see cref="F:System.Double.NaN" />, if <paramref name="d" /> &lt; -1.0, <paramref name="d" /> &gt; 1.0 or if <paramref name="d" /> equals <see cref="F:System.Double.NaN" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.Atan(System.Double,BytecodeApi.AngleType)">
            <summary>
            Returns the angle whose tangent is the specified number, considering the specified <see cref="T:BytecodeApi.AngleType" />.
            </summary>
            <param name="d">A number representing a tangent.</param>
            <param name="angleType">An <see cref="T:BytecodeApi.AngleType" /> specifying the type of angle to be measured.</param>
            <returns>
            An angle, such that -π/2 ≤ θ ≤ π/2,
            or <see cref="F:System.Double.NaN" />, if <paramref name="d" /> equals <see cref="F:System.Double.NaN" />,
            -π/2, if <paramref name="d" /> equals <see cref="F:System.Double.NegativeInfinity" />,
            or π/2, if <paramref name="d" /> equals <see cref="F:System.Double.PositiveInfinity" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.Atan2(System.Double,System.Double,BytecodeApi.AngleType)">
            <summary>
            Returns the angle whose tangent is the quotient of two specified numbers, considering the specified <see cref="T:BytecodeApi.AngleType" />.
            </summary>
            <param name="y">The y coordinate of a point.</param>
            <param name="x">The x coordinate of a point.</param>
            <param name="angleType">An <see cref="T:BytecodeApi.AngleType" /> specifying the type of angle to be measured.</param>
            <returns>
            An angle, such that -π ≤ θ ≤ π, and tan(θ) = <paramref name="y" /> / x, where (x, <paramref name="y" />) is a point in the Cartesian plane.
            If <paramref name="x" /> or <paramref name="y" /> is
            <see cref="F:System.Double.NaN" />, or if <paramref name="x" /> and <paramref name="y" /> are either <see cref="F:System.Double.PositiveInfinity" /> or
            <see cref="F:System.Double.NegativeInfinity" />, the method returns <see cref="F:System.Double.NaN" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.ConvertAngle(System.Double,BytecodeApi.AngleType,BytecodeApi.AngleType)">
            <summary>
            Converts an angle from one <see cref="T:BytecodeApi.AngleType" /> to another.
            </summary>
            <param name="angle">A <see cref="T:System.Double" /> value representing an angle, measured in the <see cref="T:BytecodeApi.AngleType" /> specifyed by <paramref name="sourceType" />.</param>
            <param name="sourceType">The <see cref="T:BytecodeApi.AngleType" /> in which <paramref name="angle" /> is represented.</param>
            <param name="destType">The <see cref="T:BytecodeApi.AngleType" /> to which <paramref name="angle" /> is converted.</param>
            <returns>
            A <see cref="T:System.Double" /> value representing the angle that has been converted from <paramref name="sourceType" /> to <paramref name="destType" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.Min(System.DateTime,System.DateTime)">
            <summary>
            Returns the smaller of two <see cref="T:System.DateTime" /> objects.
            </summary>
            <param name="val1">The first of two <see cref="T:System.DateTime" /> objects to compare.</param>
            <param name="val2">The second of two <see cref="T:System.DateTime" /> objects to compare.</param>
            <returns>
            Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.Min(System.TimeSpan,System.TimeSpan)">
            <summary>
            Returns the smaller of two <see cref="T:System.TimeSpan" /> objects.
            </summary>
            <param name="val1">The first of two <see cref="T:System.TimeSpan" /> objects to compare.</param>
            <param name="val2">The second of two <see cref="T:System.TimeSpan" /> objects to compare.</param>
            <returns>
            Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.Max(System.DateTime,System.DateTime)">
            <summary>
            Returns the larger of two <see cref="T:System.DateTime" /> objects.
            </summary>
            <param name="val1">The first of two <see cref="T:System.DateTime" /> objects to compare.</param>
            <param name="val2">The second of two <see cref="T:System.DateTime" /> objects to compare.</param>
            <returns>
            Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.Max(System.TimeSpan,System.TimeSpan)">
            <summary>
            Returns the larger of two <see cref="T:System.TimeSpan" /> objects.
            </summary>
            <param name="val1">The first of two <see cref="T:System.TimeSpan" /> objects to compare.</param>
            <param name="val2">The second of two <see cref="T:System.TimeSpan" /> objects to compare.</param>
            <returns>
            Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.Map(System.Byte,System.Byte,System.Byte)">
            <summary>
            Returns a <see cref="T:System.Byte" /> value that represents <paramref name="value" /> and is limited by the specified inclusive boundaries. The result is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="max" />.
            </summary>
            <param name="value">The <see cref="T:System.Byte" /> value to be mapped by the specified boundaries.</param>
            <param name="min">The <see cref="T:System.Byte" /> value representing the minimum of the result value.</param>
            <param name="max">The <see cref="T:System.Byte" /> value representing the maximum of the result value.</param>
            <returns>
            The original value, if <paramref name="value" /> is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="min" />;
            <paramref name="min" />, if <paramref name="value" /> is less than <paramref name="min" />;
            and <paramref name="max" />, if <paramref name="value" /> is greater than <paramref name="max" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.Map(System.SByte,System.SByte,System.SByte)">
            <summary>
            Returns a <see cref="T:System.SByte" /> value that represents <paramref name="value" /> and is limited by the specified inclusive boundaries. The result is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="max" />.
            </summary>
            <param name="value">The <see cref="T:System.SByte" /> value to be mapped by the specified boundaries.</param>
            <param name="min">The <see cref="T:System.SByte" /> value representing the minimum of the result value.</param>
            <param name="max">The <see cref="T:System.SByte" /> value representing the maximum of the result value.</param>
            <returns>
            The original value, if <paramref name="value" /> is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="min" />;
            <paramref name="min" />, if <paramref name="value" /> is less than <paramref name="min" />;
            and <paramref name="max" />, if <paramref name="value" /> is greater than <paramref name="max" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.Map(System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Returns a <see cref="T:System.Decimal" /> value that represents <paramref name="value" /> and is limited by the specified inclusive boundaries. The result is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="max" />.
            </summary>
            <param name="value">The <see cref="T:System.Decimal" /> value to be mapped by the specified boundaries.</param>
            <param name="min">The <see cref="T:System.Decimal" /> value representing the minimum of the result value.</param>
            <param name="max">The <see cref="T:System.Decimal" /> value representing the maximum of the result value.</param>
            <returns>
            The original value, if <paramref name="value" /> is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="min" />;
            <paramref name="min" />, if <paramref name="value" /> is less than <paramref name="min" />;
            and <paramref name="max" />, if <paramref name="value" /> is greater than <paramref name="max" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.Map(System.Double,System.Double,System.Double)">
            <summary>
            Returns a <see cref="T:System.Double" /> value that represents <paramref name="value" /> and is limited by the specified inclusive boundaries. The result is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="max" />.
            </summary>
            <param name="value">The <see cref="T:System.Double" /> value to be mapped by the specified boundaries.</param>
            <param name="min">The <see cref="T:System.Double" /> value representing the minimum of the result value.</param>
            <param name="max">The <see cref="T:System.Double" /> value representing the maximum of the result value.</param>
            <returns>
            The original value, if <paramref name="value" /> is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="min" />;
            <paramref name="min" />, if <paramref name="value" /> is less than <paramref name="min" />;
            and <paramref name="max" />, if <paramref name="value" /> is greater than <paramref name="max" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.Map(System.Single,System.Single,System.Single)">
            <summary>
            Returns a <see cref="T:System.Single" /> value that represents <paramref name="value" /> and is limited by the specified inclusive boundaries. The result is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="max" />.
            </summary>
            <param name="value">The <see cref="T:System.Single" /> value to be mapped by the specified boundaries.</param>
            <param name="min">The <see cref="T:System.Single" /> value representing the minimum of the result value.</param>
            <param name="max">The <see cref="T:System.Single" /> value representing the maximum of the result value.</param>
            <returns>
            The original value, if <paramref name="value" /> is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="min" />;
            <paramref name="min" />, if <paramref name="value" /> is less than <paramref name="min" />;
            and <paramref name="max" />, if <paramref name="value" /> is greater than <paramref name="max" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.Map(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns a <see cref="T:System.Int32" /> value that represents <paramref name="value" /> and is limited by the specified inclusive boundaries. The result is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="max" />.
            </summary>
            <param name="value">The <see cref="T:System.Int32" /> value to be mapped by the specified boundaries.</param>
            <param name="min">The <see cref="T:System.Int32" /> value representing the minimum of the result value.</param>
            <param name="max">The <see cref="T:System.Int32" /> value representing the maximum of the result value.</param>
            <returns>
            The original value, if <paramref name="value" /> is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="min" />;
            <paramref name="min" />, if <paramref name="value" /> is less than <paramref name="min" />;
            and <paramref name="max" />, if <paramref name="value" /> is greater than <paramref name="max" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.Map(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Returns a <see cref="T:System.UInt32" /> value that represents <paramref name="value" /> and is limited by the specified inclusive boundaries. The result is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="max" />.
            </summary>
            <param name="value">The <see cref="T:System.UInt32" /> value to be mapped by the specified boundaries.</param>
            <param name="min">The <see cref="T:System.UInt32" /> value representing the minimum of the result value.</param>
            <param name="max">The <see cref="T:System.UInt32" /> value representing the maximum of the result value.</param>
            <returns>
            The original value, if <paramref name="value" /> is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="min" />;
            <paramref name="min" />, if <paramref name="value" /> is less than <paramref name="min" />;
            and <paramref name="max" />, if <paramref name="value" /> is greater than <paramref name="max" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.Map(System.Int64,System.Int64,System.Int64)">
            <summary>
            Returns a <see cref="T:System.Int64" /> value that represents <paramref name="value" /> and is limited by the specified inclusive boundaries. The result is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="max" />.
            </summary>
            <param name="value">The <see cref="T:System.Int64" /> value to be mapped by the specified boundaries.</param>
            <param name="min">The <see cref="T:System.Int64" /> value representing the minimum of the result value.</param>
            <param name="max">The <see cref="T:System.Int64" /> value representing the maximum of the result value.</param>
            <returns>
            The original value, if <paramref name="value" /> is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="min" />;
            <paramref name="min" />, if <paramref name="value" /> is less than <paramref name="min" />;
            and <paramref name="max" />, if <paramref name="value" /> is greater than <paramref name="max" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.Map(System.UInt64,System.UInt64,System.UInt64)">
            <summary>
            Returns a <see cref="T:System.UInt64" /> value that represents <paramref name="value" /> and is limited by the specified inclusive boundaries. The result is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="max" />.
            </summary>
            <param name="value">The <see cref="T:System.UInt64" /> value to be mapped by the specified boundaries.</param>
            <param name="min">The <see cref="T:System.UInt64" /> value representing the minimum of the result value.</param>
            <param name="max">The <see cref="T:System.UInt64" /> value representing the maximum of the result value.</param>
            <returns>
            The original value, if <paramref name="value" /> is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="min" />;
            <paramref name="min" />, if <paramref name="value" /> is less than <paramref name="min" />;
            and <paramref name="max" />, if <paramref name="value" /> is greater than <paramref name="max" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.Map(System.Int16,System.Int16,System.Int16)">
            <summary>
            Returns a <see cref="T:System.Int16" /> value that represents <paramref name="value" /> and is limited by the specified inclusive boundaries. The result is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="max" />.
            </summary>
            <param name="value">The <see cref="T:System.Int16" /> value to be mapped by the specified boundaries.</param>
            <param name="min">The <see cref="T:System.Int16" /> value representing the minimum of the result value.</param>
            <param name="max">The <see cref="T:System.Int16" /> value representing the maximum of the result value.</param>
            <returns>
            The original value, if <paramref name="value" /> is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="min" />;
            <paramref name="min" />, if <paramref name="value" /> is less than <paramref name="min" />;
            and <paramref name="max" />, if <paramref name="value" /> is greater than <paramref name="max" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.Map(System.UInt16,System.UInt16,System.UInt16)">
            <summary>
            Returns a <see cref="T:System.UInt16" /> value that represents <paramref name="value" /> and is limited by the specified inclusive boundaries. The result is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="max" />.
            </summary>
            <param name="value">The <see cref="T:System.UInt16" /> value to be mapped by the specified boundaries.</param>
            <param name="min">The <see cref="T:System.UInt16" /> value representing the minimum of the result value.</param>
            <param name="max">The <see cref="T:System.UInt16" /> value representing the maximum of the result value.</param>
            <returns>
            The original value, if <paramref name="value" /> is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="min" />;
            <paramref name="min" />, if <paramref name="value" /> is less than <paramref name="min" />;
            and <paramref name="max" />, if <paramref name="value" /> is greater than <paramref name="max" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.Map(System.DateTime,System.DateTime,System.DateTime)">
            <summary>
            Returns a <see cref="T:System.DateTime" /> value that represents <paramref name="value" /> and is limited by the specified inclusive boundaries. The result is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="max" />.
            </summary>
            <param name="value">The <see cref="T:System.DateTime" /> value to be mapped by the specified boundaries.</param>
            <param name="min">The <see cref="T:System.DateTime" /> value representing the minimum of the result value.</param>
            <param name="max">The <see cref="T:System.DateTime" /> value representing the maximum of the result value.</param>
            <returns>
            The original value, if <paramref name="value" /> is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="min" />;
            <paramref name="min" />, if <paramref name="value" /> is less than <paramref name="min" />;
            and <paramref name="max" />, if <paramref name="value" /> is greater than <paramref name="max" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.Map(System.TimeSpan,System.TimeSpan,System.TimeSpan)">
            <summary>
            Returns a <see cref="T:System.TimeSpan" /> value that represents <paramref name="value" /> and is limited by the specified inclusive boundaries. The result is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="max" />.
            </summary>
            <param name="value">The <see cref="T:System.TimeSpan" /> value to be mapped by the specified boundaries.</param>
            <param name="min">The <see cref="T:System.TimeSpan" /> value representing the minimum of the result value.</param>
            <param name="max">The <see cref="T:System.TimeSpan" /> value representing the maximum of the result value.</param>
            <returns>
            The original value, if <paramref name="value" /> is greater than or equal to <paramref name="min" /> and less than or equal to <paramref name="min" />;
            <paramref name="min" />, if <paramref name="value" /> is less than <paramref name="min" />;
            and <paramref name="max" />, if <paramref name="value" /> is greater than <paramref name="max" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.Interpolate(System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Interpolates the specified <see cref="T:System.Decimal" /> value by scaling its expected range to another. The result is not clipped.
            </summary>
            <param name="value">The <see cref="T:System.Decimal" /> value representing the initial value.</param>
            <param name="valueMin">A <see cref="T:System.Decimal" /> value indicating the expected minimum of <paramref name="value" />.</param>
            <param name="valueMax">A <see cref="T:System.Decimal" /> value indicating the expected maximum of <paramref name="value" />.</param>
            <param name="returnMin">A <see cref="T:System.Decimal" /> value indicating the resulting minimum of the new value range.</param>
            <param name="returnMax">A <see cref="T:System.Decimal" /> value indicating the resulting maximum of the new value range.</param>
            <returns>
            A <see cref="T:System.Decimal" /> value, where the range of <paramref name="valueMin" /> through <paramref name="valueMax" /> has been scaled to <paramref name="returnMin" /> through <paramref name="returnMax" />. The result is not clipped.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.Interpolate(System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Boolean)">
            <summary>
            Interpolates the specified <see cref="T:System.Decimal" /> value by scaling its expected range to another. If <paramref name="mapToValueRange" /> is <see langword="true" />, the result clipped and therefore greater than or equal to <paramref name="returnMin" /> or less than or equal to <paramref name="valueMax" />.
            </summary>
            <param name="value">The <see cref="T:System.Decimal" /> value representing the initial value.</param>
            <param name="valueMin">A <see cref="T:System.Decimal" /> value indicating the expected minimum of <paramref name="value" />.</param>
            <param name="valueMax">A <see cref="T:System.Decimal" /> value indicating the expected maximum of <paramref name="value" />.</param>
            <param name="returnMin">A <see cref="T:System.Decimal" /> value indicating the resulting minimum of the new value range.</param>
            <param name="returnMax">A <see cref="T:System.Decimal" /> value indicating the resulting maximum of the new value range.</param>
            <param name="mapToValueRange"><see langword="true" /> to clip the result to the new value range.</param>
            <returns>
            A <see cref="T:System.Decimal" /> value, where the range of <paramref name="valueMin" /> through <paramref name="valueMax" /> has been scaled to <paramref name="returnMin" /> through <paramref name="returnMax" />.
            If <paramref name="mapToValueRange" /> is <see langword="true" />, the result clipped and therefore greater than or equal to <paramref name="returnMin" /> or less than or equal to <paramref name="valueMax" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.Interpolate(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Interpolates the specified <see cref="T:System.Double" /> value by scaling its expected range to another. The result is not clipped.
            </summary>
            <param name="value">The <see cref="T:System.Double" /> value representing the initial value.</param>
            <param name="valueMin">A <see cref="T:System.Double" /> value indicating the expected minimum of <paramref name="value" />.</param>
            <param name="valueMax">A <see cref="T:System.Double" /> value indicating the expected maximum of <paramref name="value" />.</param>
            <param name="returnMin">A <see cref="T:System.Double" /> value indicating the resulting minimum of the new value range.</param>
            <param name="returnMax">A <see cref="T:System.Double" /> value indicating the resulting maximum of the new value range.</param>
            <returns>
            A <see cref="T:System.Double" /> value, where the range of <paramref name="valueMin" /> through <paramref name="valueMax" /> has been scaled to <paramref name="returnMin" /> through <paramref name="returnMax" />. The result is not clipped.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.Interpolate(System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Interpolates the specified <see cref="T:System.Double" /> value by scaling its expected range to another. If <paramref name="mapToValueRange" /> is <see langword="true" />, the result clipped and therefore greater than or equal to <paramref name="returnMin" /> or less than or equal to <paramref name="valueMax" />.
            </summary>
            <param name="value">The <see cref="T:System.Double" /> value representing the initial value.</param>
            <param name="valueMin">A <see cref="T:System.Double" /> value indicating the expected minimum of <paramref name="value" />.</param>
            <param name="valueMax">A <see cref="T:System.Double" /> value indicating the expected maximum of <paramref name="value" />.</param>
            <param name="returnMin">A <see cref="T:System.Double" /> value indicating the resulting minimum of the new value range.</param>
            <param name="returnMax">A <see cref="T:System.Double" /> value indicating the resulting maximum of the new value range.</param>
            <param name="mapToValueRange"><see langword="true" /> to clip the result to the new value range.</param>
            <returns>
            A <see cref="T:System.Double" /> value, where the range of <paramref name="valueMin" /> through <paramref name="valueMax" /> has been scaled to <paramref name="returnMin" /> through <paramref name="returnMax" />.
            If <paramref name="mapToValueRange" /> is <see langword="true" />, the result clipped and therefore greater than or equal to <paramref name="returnMin" /> or less than or equal to <paramref name="valueMax" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.Interpolate(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Interpolates the specified <see cref="T:System.Single" /> value by scaling its expected range to another. The result is not clipped.
            </summary>
            <param name="value">The <see cref="T:System.Single" /> value representing the initial value.</param>
            <param name="valueMin">A <see cref="T:System.Single" /> value indicating the expected minimum of <paramref name="value" />.</param>
            <param name="valueMax">A <see cref="T:System.Single" /> value indicating the expected maximum of <paramref name="value" />.</param>
            <param name="returnMin">A <see cref="T:System.Single" /> value indicating the resulting minimum of the new value range.</param>
            <param name="returnMax">A <see cref="T:System.Single" /> value indicating the resulting maximum of the new value range.</param>
            <returns>
            A <see cref="T:System.Single" /> value, where the range of <paramref name="valueMin" /> through <paramref name="valueMax" /> has been scaled to <paramref name="returnMin" /> through <paramref name="returnMax" />. The result is not clipped.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.Interpolate(System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Interpolates the specified <see cref="T:System.Single" /> value by scaling its expected range to another. If <paramref name="mapToValueRange" /> is <see langword="true" />, the result clipped and therefore greater than or equal to <paramref name="returnMin" /> or less than or equal to <paramref name="valueMax" />.
            </summary>
            <param name="value">The <see cref="T:System.Single" /> value representing the initial value.</param>
            <param name="valueMin">A <see cref="T:System.Single" /> value indicating the expected minimum of <paramref name="value" />.</param>
            <param name="valueMax">A <see cref="T:System.Single" /> value indicating the expected maximum of <paramref name="value" />.</param>
            <param name="returnMin">A <see cref="T:System.Single" /> value indicating the resulting minimum of the new value range.</param>
            <param name="returnMax">A <see cref="T:System.Single" /> value indicating the resulting maximum of the new value range.</param>
            <param name="mapToValueRange"><see langword="true" /> to clip the result to the new value range.</param>
            <returns>
            A <see cref="T:System.Single" /> value, where the range of <paramref name="valueMin" /> through <paramref name="valueMax" /> has been scaled to <paramref name="returnMin" /> through <paramref name="returnMax" />.
            If <paramref name="mapToValueRange" /> is <see langword="true" />, the result clipped and therefore greater than or equal to <paramref name="returnMin" /> or less than or equal to <paramref name="valueMax" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.Interpolate(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Interpolates the specified <see cref="T:System.Int32" /> value by scaling its expected range to another. The result is not clipped.
            </summary>
            <param name="value">The <see cref="T:System.Int32" /> value representing the initial value.</param>
            <param name="valueMin">A <see cref="T:System.Int32" /> value indicating the expected minimum of <paramref name="value" />.</param>
            <param name="valueMax">A <see cref="T:System.Int32" /> value indicating the expected maximum of <paramref name="value" />.</param>
            <param name="returnMin">A <see cref="T:System.Int32" /> value indicating the resulting minimum of the new value range.</param>
            <param name="returnMax">A <see cref="T:System.Int32" /> value indicating the resulting maximum of the new value range.</param>
            <returns>
            A <see cref="T:System.Int32" /> value, where the range of <paramref name="valueMin" /> through <paramref name="valueMax" /> has been scaled to <paramref name="returnMin" /> through <paramref name="returnMax" />. The result is not clipped.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.Interpolate(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Interpolates the specified <see cref="T:System.Int32" /> value by scaling its expected range to another. If <paramref name="mapToValueRange" /> is <see langword="true" />, the result clipped and therefore greater than or equal to <paramref name="returnMin" /> or less than or equal to <paramref name="valueMax" />.
            </summary>
            <param name="value">The <see cref="T:System.Int32" /> value representing the initial value.</param>
            <param name="valueMin">A <see cref="T:System.Int32" /> value indicating the expected minimum of <paramref name="value" />.</param>
            <param name="valueMax">A <see cref="T:System.Int32" /> value indicating the expected maximum of <paramref name="value" />.</param>
            <param name="returnMin">A <see cref="T:System.Int32" /> value indicating the resulting minimum of the new value range.</param>
            <param name="returnMax">A <see cref="T:System.Int32" /> value indicating the resulting maximum of the new value range.</param>
            <param name="mapToValueRange"><see langword="true" /> to clip the result to the new value range.</param>
            <returns>
            A <see cref="T:System.Int32" /> value, where the range of <paramref name="valueMin" /> through <paramref name="valueMax" /> has been scaled to <paramref name="returnMin" /> through <paramref name="returnMax" />.
            If <paramref name="mapToValueRange" /> is <see langword="true" />, the result clipped and therefore greater than or equal to <paramref name="returnMin" /> or less than or equal to <paramref name="valueMax" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.GreatestCommonDivisor(System.Int32,System.Int32)">
            <summary>
            Computes the greatest common divisor of two <see cref="T:System.Int32" /> values.
            </summary>
            <param name="a">The first <see cref="T:System.Int32" /> value.</param>
            <param name="b">The second <see cref="T:System.Int32" /> value.</param>
            <returns>
            The greatest common divisor of <paramref name="a" /> and <paramref name="b" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.GreatestCommonDivisor(System.Int32[])">
            <summary>
            Computes the greatest common divisor of a collection of <see cref="T:System.Int32" /> values.
            </summary>
            <param name="values">The collection of <see cref="T:System.Int32" /> values.</param>
            <returns>
            The greatest common divisor of the values in the <paramref name="values" /> parameter.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.GreatestCommonDivisor(System.Int64,System.Int64)">
            <summary>
            Computes the greatest common divisor of two <see cref="T:System.Int64" /> values.
            </summary>
            <param name="a">The first <see cref="T:System.Int64" /> value.</param>
            <param name="b">The second <see cref="T:System.Int64" /> value.</param>
            <returns>
            The greatest common divisor of <paramref name="a" /> and <paramref name="b" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.GreatestCommonDivisor(System.Int64[])">
            <summary>
            Computes the greatest common divisor of a collection of <see cref="T:System.Int64" /> values.
            </summary>
            <param name="values">The collection of <see cref="T:System.Int64" /> values.</param>
            <returns>
            The greatest common divisor of the values in the <paramref name="values" /> parameter.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.LeastCommonMultiple(System.Int32,System.Int32)">
            <summary>
            Computes the least common multiple of two <see cref="T:System.Int32" /> values.
            </summary>
            <param name="a">The first <see cref="T:System.Int32" /> value.</param>
            <param name="b">The second <see cref="T:System.Int32" /> value.</param>
            <returns>
            The least common multiple of <paramref name="a" /> and <paramref name="b" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.LeastCommonMultiple(System.Int32[])">
            <summary>
            Computes the least common multiple of an array of <see cref="T:System.Int32" /> values.
            </summary>
            <param name="values">The array of <see cref="T:System.Int32" /> values to compute the least common multiple from.</param>
            <returns>
            The least common multiple of all <see cref="T:System.Int32" /> values.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.LeastCommonMultiple(System.Int64,System.Int64)">
            <summary>
            Computes the least common multiple of two <see cref="T:System.Int64" /> values.
            </summary>
            <param name="a">The first <see cref="T:System.Int64" /> value.</param>
            <param name="b">The second <see cref="T:System.Int64" /> value.</param>
            <returns>
            The least common multiple of <paramref name="a" /> and <paramref name="b" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.LeastCommonMultiple(System.Int64[])">
            <summary>
            Computes the least common multiple of an array of <see cref="T:System.Int64" /> values.
            </summary>
            <param name="values">The array of <see cref="T:System.Int64" /> values to compute the least common multiple from.</param>
            <returns>
            The least common multiple of all <see cref="T:System.Int64" /> values.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.Fibonacci(System.Int32)">
            <summary>
            Computes the Fibonacci value at position <paramref name="n" />.
            </summary>
            <param name="n">A <see cref="T:System.Int32" /> value specifying the position of the Fibonacci value.</param>
            <returns>
            The Fibonacci value at position <paramref name="n" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.EnumerateFibonacci(System.Int32)">
            <summary>
            Returns an enumerable of Fibonacci values that yields <paramref name="n" /> elements.
            </summary>
            <param name="n">A <see cref="T:System.Int32" /> value specifying the number of Fibonacci values to compute.</param>
            <returns>
            An enumerable of Fibonacci values that yields <paramref name="n" /> elements.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.IsPrimeNumber(System.Int32)">
            <summary>
            Determines whether <paramref name="n" /> is a prime number.
            </summary>
            <param name="n">A <see cref="T:System.Int32" /> value specifying the number to test.</param>
            <returns>
            <see langword="true" />, if <paramref name="n" /> is a prime number;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.IsPrimeNumber(System.Int64)">
            <summary>
            Determines whether <paramref name="n" /> is a prime number.
            </summary>
            <param name="n">A <see cref="T:System.Int64" /> value specifying the number to test.</param>
            <returns>
            <see langword="true" />, if <paramref name="n" /> is a prime number;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.ComputePrimeNumbers(System.Int32)">
            <summary>
            Computes the prime numbers between 0 and <paramref name="n" />. A <see cref="T:System.Collections.BitArray" /> with <paramref name="n" /> elements is returned, where a <see cref="T:System.Boolean" /> value at any given index indicates whether the number is a prime number.
            </summary>
            <param name="n">A <see cref="T:System.Int32" /> value specifying the range of numbers to check, where computation of numbers applies to values between 0 and <paramref name="n" />-1.</param>
            <returns>
            A <see cref="T:System.Collections.BitArray" /> with <paramref name="n" /> elements, where a <see cref="T:System.Boolean" /> value at any given index indicates whether the number is a prime number.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.ComputePrimeFactors(System.Int32)">
            <summary>
            Computes all prime factors of the specified <see cref="T:System.Int32" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Int32" /> to compute its prime factors from.</param>
            <returns>
            A <see cref="T:System.Int32" />[] containing all prime factors of <paramref name="value" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.ComputePrimeFactors(System.Int64)">
            <summary>
            Computes all prime factors of the specified <see cref="T:System.Int64" /> value.
            </summary>
            <param name="value">The <see cref="T:System.Int64" /> to compute its prime factors from.</param>
            <returns>
            A <see cref="T:System.Int64" />[] containing all prime factors of <paramref name="value" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.CalculateAgeFromBirthday(System.DateTime)">
            <summary>
            Calculates the age from a birthday.
            </summary>
            <param name="birthday">A <see cref="T:System.DateTime" /> value representing the birhtday to calculate the age from.</param>
            <returns>
            An equivalent <see cref="T:System.Int32" /> value representing an age, calculated from <paramref name="birthday" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.MathEx.CalculateAgeFromBirthday(System.DateTime,System.DateTime)">
            <summary>
            Calculates the age from a birthday at a specified point in time.
            </summary>
            <param name="birthday">A <see cref="T:System.DateTime" /> value representing the birhtday to calculate the age from.</param>
            <param name="now">A <see cref="T:System.DateTime" /> value representing the current time stamp. This is usually <see cref="P:System.DateTime.Now" />.</param>
            <returns>
            An equivalent <see cref="T:System.Int32" /> value representing an age, calculated from <paramref name="birthday" /> and <paramref name="now" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.ProgressCalculator">
            <summary>
            Represents a performance counter for progress calculations, typically binary transfers (file transferring, downloads, ...)
            </summary>
        </member>
        <member name="P:BytecodeApi.ProgressCalculator.Value">
            <summary>
            Gets or sets the value indicating the total progress. This is typically the amount of transferred bytes in a binary transfer operation.
            </summary>
        </member>
        <member name="P:BytecodeApi.ProgressCalculator.MaxValue">
            <summary>
            Gets or sets the expected maximum value. This is typically the total size in bytes in a binary transfer operation. If <see cref="P:BytecodeApi.ProgressCalculator.MaxValue" /> is <see langword="null" />, values calculated based on it will also be <see langword="null" />. This is useful for display of an indeterminate status of progress bars.
            </summary>
        </member>
        <member name="P:BytecodeApi.ProgressCalculator.MeasureTimeSpan">
            <summary>
            Gets or sets the interval in which <see cref="P:BytecodeApi.ProgressCalculator.Value" /> is measured. The <see cref="E:BytecodeApi.ProgressCalculator.Measured" /> event is raised in the approximate interval of this value, however only after <see cref="P:BytecodeApi.ProgressCalculator.Value" /> has changed.
            </summary>
        </member>
        <member name="P:BytecodeApi.ProgressCalculator.Progress">
            <summary>
            Gets a <see cref="T:System.Double" />? value indicating the progress. This value is between 0.0 and 1.0, if <see cref="P:BytecodeApi.ProgressCalculator.Value" /> is in bounds of 0.0 and <see cref="P:BytecodeApi.ProgressCalculator.MaxValue" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.ProgressCalculator.ProgressPercentage">
            <summary>
            Gets a <see cref="T:System.Double" />? value indicating the progress in percent. This value is between 0.0 and 100.0, if <see cref="P:BytecodeApi.ProgressCalculator.Value" /> is in bounds of 0.0 and <see cref="P:BytecodeApi.ProgressCalculator.MaxValue" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.ProgressCalculator.Difference">
            <summary>
            Gets the difference of the <see cref="P:BytecodeApi.ProgressCalculator.Value" /> property between the last two measurements.
            </summary>
        </member>
        <member name="P:BytecodeApi.ProgressCalculator.DifferencePerSecond">
            <summary>
            Gets the difference of the <see cref="P:BytecodeApi.ProgressCalculator.Value" /> property between the last two measurements, interpolated to one second based on <see cref="P:BytecodeApi.ProgressCalculator.MeasureTimeSpan" />.
            </summary>
        </member>
        <member name="E:BytecodeApi.ProgressCalculator.ValueChanged">
            <summary>
            Occurs when the <see cref="P:BytecodeApi.ProgressCalculator.Value" /> property changed.
            </summary>
        </member>
        <member name="E:BytecodeApi.ProgressCalculator.Measured">
            <summary>
            Occurs when the <see cref="P:BytecodeApi.ProgressCalculator.Value" /> property changed and the interval specified in <see cref="P:BytecodeApi.ProgressCalculator.MeasureTimeSpan" /> has been reached.
            </summary>
        </member>
        <member name="M:BytecodeApi.ProgressCalculator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.ProgressCalculator" /> class with no maximum value and a measurement interval of 1 second.
            </summary>
        </member>
        <member name="M:BytecodeApi.ProgressCalculator.#ctor(System.Nullable{System.Double})">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.ProgressCalculator" /> class with the specified maximum value and a measurement interval of 1 second.
            </summary>
            <param name="maxValue">A <see cref="T:System.Double" /> value indicating the maximum expected value for <see cref="P:BytecodeApi.ProgressCalculator.Value" />.</param>
        </member>
        <member name="M:BytecodeApi.ProgressCalculator.#ctor(System.Nullable{System.Double},System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.ProgressCalculator" /> class with the specified maximum value and the specified measurement interval.
            </summary>
            <param name="maxValue">A <see cref="T:System.Double" /> value indicating the maximum expected value for <see cref="P:BytecodeApi.ProgressCalculator.Value" />.</param>
            <param name="measureTimeSpan">A <see cref="T:System.TimeSpan" /> value indicating the interval in which to measure the progress.</param>
        </member>
        <member name="M:BytecodeApi.ProgressCalculator.OnValueChanged">
            <summary>
            Raises the <see cref="E:BytecodeApi.ProgressCalculator.ValueChanged" /> event.
            </summary>
        </member>
        <member name="M:BytecodeApi.ProgressCalculator.OnMeasured">
            <summary>
            Raises the <see cref="E:BytecodeApi.ProgressCalculator.Measured" /> event.
            </summary>
        </member>
        <member name="T:BytecodeApi.Range`1">
            <summary>
            Represents a generic range of two numeric values that implement <see cref="T:System.IComparable" />.
            </summary>
            <typeparam name="T">The type of the two numeric values.</typeparam>
        </member>
        <member name="P:BytecodeApi.Range`1.Min">
            <summary>
            Gets or sets the minimum value of this <see cref="T:BytecodeApi.Range`1" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.Range`1.Max">
            <summary>
            Gets or sets the maximum value of this <see cref="T:BytecodeApi.Range`1" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.Range`1.#ctor(`0,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.Range`1" /> class to the values indicated by <paramref name="min" /> and <paramref name="max" />.
            </summary>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
        </member>
        <member name="M:BytecodeApi.Range`1.IntersectsWith(BytecodeApi.Range{`0})">
            <summary>
            Determines if this <see cref="T:BytecodeApi.Range`1" /> intersects with <paramref name="range" />.
            </summary>
            <param name="range">A <see cref="T:BytecodeApi.Range`1" /> to intersect.</param>
            <returns>
            <see langword="true" />, if there is any intersection;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.FileIcon">
            <summary>
            Helper class to retrieve file icons from the resources of BytecodeApi.dll. The file icons are pre-defined images and limited to a fixed amount of known file extensions.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileIcon.AllIcons">
            <summary>
            Gets all <see cref="T:BytecodeApi.FileIcon" /> objects from the resources of BytecodeApi.dll. The resources are loaded the first time this property is accessed, or once an icon file is retrieved using the methods of this class.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileIcon.Extension">
            <summary>
            Gets the extension, without a dot, that identifies this icon.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileIcon.Icon">
            <summary>
            Gets the combined icon containing all sizes (16, 32 and 48).
            </summary>
        </member>
        <member name="P:BytecodeApi.FileIcon.Icon16">
            <summary>
            Gets the 16x16 pixel frame from <see cref="P:BytecodeApi.FileIcon.Icon" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileIcon.Icon32">
            <summary>
            Gets the 32x32 pixel frame from <see cref="P:BytecodeApi.FileIcon.Icon" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileIcon.Icon48">
            <summary>
            Gets the 48x48 pixel frame from <see cref="P:BytecodeApi.FileIcon.Icon" />.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileIcon.Icon16ImageSource">
            <summary>
            Gets a managed <see cref="T:System.Windows.Media.Imaging.BitmapSource" />, based on the <see cref="P:BytecodeApi.FileIcon.Icon16" /> property.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileIcon.Icon32ImageSource">
            <summary>
            Gets a managed <see cref="T:System.Windows.Media.Imaging.BitmapSource" />, based on the <see cref="P:BytecodeApi.FileIcon.Icon32" /> property.
            </summary>
        </member>
        <member name="P:BytecodeApi.FileIcon.Icon48ImageSource">
            <summary>
            Gets a managed <see cref="T:System.Windows.Media.Imaging.BitmapSource" />, based on the <see cref="P:BytecodeApi.FileIcon.Icon48" /> property.
            </summary>
        </member>
        <member name="M:BytecodeApi.FileIcon.FromExtension(System.String)">
            <summary>
            Gets a <see cref="T:BytecodeApi.FileIcon" /> from the resources of BytecodeApi.dll, if the specified extension is known.
            </summary>
            <param name="extension">A <see cref="T:System.String" /> value specifying the file extension, which is case insensitive and does not require a leading dot character.</param>
            <returns>
            A <see cref="T:BytecodeApi.FileIcon" /> object containing image objects for the specified extension.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileIcon.Exists(System.String)">
            <summary>
            Checks whether the specified extension is known and exists in the resources of BytecodeApi.dll.
            </summary>
            <param name="extension">A <see cref="T:System.String" /> value specifying the file extension, which is case insensitive and does not require a leading dot character.</param>
            <returns>
            A <see cref="T:System.Boolean" /> value indicating whether the specified extension is known and exists in the resources of BytecodeApi.dll.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileIcon.GetIcon(System.Int32)">
            <summary>
            Gets a specific frame from <see cref="P:BytecodeApi.FileIcon.Icon" />. The <paramref name="size" /> parameter must be 16, 32 or 48.
            </summary>
            <param name="size">A <see cref="T:System.Int32" /> value representing the size of the frame to retrieve. The value must be 16, 32 or 48.</param>
            <returns>
            The frame from <see cref="P:BytecodeApi.FileIcon.Icon" />, specified by <paramref name="size" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.FileIcon.GetIconImageSource(System.Int32)">
            <summary>
            Gets a managed <see cref="T:System.Windows.Media.Imaging.BitmapSource" />, based on the specific frame from <see cref="P:BytecodeApi.FileIcon.Icon" />. The <paramref name="size" /> parameter must be 16, 32 or 48.
            </summary>
            <param name="size">A <see cref="T:System.Int32" /> value representing the size of the frame to retrieve. The value must be 16, 32 or 48.</param>
            <returns>
            A managed <see cref="T:System.Windows.Media.Imaging.BitmapSource" />, based on the frame from <see cref="P:BytecodeApi.FileIcon.Icon" />, specified by <paramref name="size" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.Properties.IconResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources._directory">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources._directory_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources._directory_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources._directory_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources._unknown">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources._unknown_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources._unknown_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources._unknown_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.accdb">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.accdb_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.accdb_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.accdb_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.asm">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.asm_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.asm_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.asm_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.aspx">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.aspx_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.aspx_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.aspx_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.avi">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.avi_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.avi_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.avi_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.bat">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.bat_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.bat_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.bat_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.bmp">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.bmp_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.bmp_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.bmp_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.c">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.c_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.c_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.c_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.cer">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.cer_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.cer_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.cer_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.chm">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.chm_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.chm_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.chm_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.com">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.com_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.com_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.com_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.config">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.config_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.config_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.config_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.contact">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.contact_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.contact_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.contact_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.cpp">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.cpp_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.cpp_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.cpp_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.cs">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.cs_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.cs_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.cs_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.csproj">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.csproj_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.csproj_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.csproj_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.css">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.css_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.css_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.css_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.csv">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.csv_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.csv_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.csv_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.db">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.db_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.db_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.db_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.dll">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.dll_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.dll_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.dll_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.doc">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.doc_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.doc_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.doc_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.docx">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.docx_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.docx_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.docx_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.dotx">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.dotx_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.dotx_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.dotx_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.dtd">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.dtd_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.dtd_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.dtd_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.exe">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.exe_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.exe_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.exe_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.filters">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.filters_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.filters_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.filters_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.gif">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.gif_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.gif_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.gif_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.h">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.h_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.h_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.h_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.hlp">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.hlp_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.hlp_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.hlp_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.hpp">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.hpp_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.hpp_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.hpp_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.htm">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.htm_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.htm_161">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.htm_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.htm_321">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.htm_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.htm_481">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.html">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.html_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.html_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.html_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.inf">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.inf_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.inf_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.inf_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.ini">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.ini_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.ini_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.ini_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.ino">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.ino_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.ino_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.ino_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.iso">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.iso_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.iso_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.iso_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.jpeg">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.jpeg_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.jpeg_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.jpeg_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.jpg">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.jpg_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.jpg_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.jpg_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.js">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.js_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.js_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.js_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.json">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.json_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.json_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.json_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.lib">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.lib_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.lib_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.lib_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.lnk">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.lnk_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.lnk_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.lnk_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.log">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.log_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.log_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.log_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.m4a">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.m4a_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.m4a_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.m4a_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.m4v">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.m4v_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.m4v_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.m4v_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.mak">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.mak_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.mak_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.mak_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.manifest">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.manifest_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.manifest_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.manifest_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.md">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.md_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.md_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.md_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.mdb">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.mdb_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.mdb_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.mdb_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.mid">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.mid_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.mid_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.mid_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.midi">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.midi_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.midi_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.midi_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.mp3">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.mp3_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.mp3_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.mp3_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.mp4">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.mp4_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.mp4_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.mp4_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.mp4v">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.mp4v_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.mp4v_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.mp4v_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.mpeg">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.mpeg_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.mpeg_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.mpeg_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.mpg">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.mpg_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.mpg_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.mpg_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.msc">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.msc_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.msc_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.msc_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.msi">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.msi_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.msi_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.msi_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.pdb">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.pdb_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.pdb_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.pdb_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.pdf">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.pdf_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.pdf_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.pdf_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.pdn">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.pdn_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.pdn_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.pdn_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.php">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.php_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.php_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.php_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.phpproj">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.phpproj_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.phpproj_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.phpproj_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.png">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.png_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.png_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.png_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.potx">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.potx_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.potx_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.potx_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.ppt">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.ppt_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.ppt_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.ppt_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.pptx">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.pptx_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.pptx_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.pptx_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.rar">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.rar_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.rar_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.rar_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.rdp">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.rdp_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.rdp_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.rdp_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.reg">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.reg_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.reg_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.reg_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.res">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.res_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.res_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.res_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.resx">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.resx_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.resx_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.resx_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.rll">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.rll_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.rll_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.rll_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.rtf">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.rtf_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.rtf_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.rtf_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.scr">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.scr_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.scr_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.scr_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.sdf">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.sdf_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.sdf_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.sdf_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.settings">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.settings_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.settings_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.settings_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.sh">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.sh_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.sh_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.sh_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.sln">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.sln_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.sln_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.sln_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.txt">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.txt_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.txt_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.txt_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.user">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.user_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.user_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.user_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.vb">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.vb_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.vb_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.vb_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.vbproj">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.vbproj_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.vbproj_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.vbproj_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.vbs">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.vbs_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.vbs_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.vbs_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.vcf">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.vcf_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.vcf_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.vcf_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.vcxproj">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.vcxproj_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.vcxproj_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.vcxproj_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.vsix">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.vsix_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.vsix_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.vsix_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.wav">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.wav_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.wav_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.wav_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.wma">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.wma_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.wma_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.wma_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.wmv">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.wmv_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.wmv_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.wmv_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.wpl">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.wpl_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.wpl_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.wpl_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.wsf">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.wsf_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.wsf_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.wsf_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.xaml">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.xaml_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.xaml_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.xaml_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.xls">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.xls_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.xls_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.xls_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.xlsx">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.xlsx_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.xlsx_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.xlsx_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.xltx">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.xltx_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.xltx_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.xltx_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.xml">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.xml_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.xml_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.xml_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.xsd">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.xsd_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.xsd_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.xsd_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.zip">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.zip_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.zip_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.IconResources.zip_48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="T:BytecodeApi.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.Resources.FileGrayscaleEffect">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:BytecodeApi.Properties.Resources.FileGrayscaleEffectCompiled">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="T:BytecodeApi.ILanguageStringGenerator">
            <summary>
            Defines base methods that are implemented in <see cref="T:BytecodeApi.WordGenerator" />, <see cref="T:BytecodeApi.SentenceGenerator" /> and <see cref="T:BytecodeApi.TextGenerator" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.ILanguageStringGenerator.Generate">
            <summary>
            Generates a string of einther a <see cref="T:BytecodeApi.WordGenerator" />, <see cref="T:BytecodeApi.SentenceGenerator" /> or <see cref="T:BytecodeApi.TextGenerator" />.
            </summary>
            <returns>
            The <see cref="T:System.String" /> generated by this instance.
            </returns>
        </member>
        <member name="T:BytecodeApi.TextGenerator">
            <summary>
            Class that generates a random text sequence that match the pattern of real language.
            A <see cref="T:BytecodeApi.SentenceGenerator" /> is used to generate the sentences that generated text are composed of.
            </summary>
        </member>
        <member name="P:BytecodeApi.TextGenerator.SentenceGenerator">
            <summary>
            Gets or sets the <see cref="P:BytecodeApi.TextGenerator.SentenceGenerator" /> that is used to generate sentences.
            </summary>
        </member>
        <member name="P:BytecodeApi.TextGenerator.MinSentenceCount">
            <summary>
            Gets or sets the minimum number sentences used to build text.
            <para />The default value is 10
            </summary>
        </member>
        <member name="P:BytecodeApi.TextGenerator.MaxSentenceCount">
            <summary>
            Gets or sets the maximum number sentences used to build text.
            <para />The default value is 20
            </summary>
        </member>
        <member name="P:BytecodeApi.TextGenerator.LineBreakChance">
            <summary>
            Gets or sets a <see cref="T:System.Single" /> value that specifies the chance of a linebreak being inserted after a sentence, where 0.0f means no linebreaks and 1.0f means a linebreak between every sentence.
            <para />The default value is 0.0f
            </summary>
        </member>
        <member name="P:BytecodeApi.TextGenerator.ParagraphChance">
            <summary>
            Gets or sets a <see cref="T:System.Single" /> value that specifies the chance of a paragraph being inserted after a sentence, where 0.0f means no paragraphs and 1.0f means a paragraph between every sentence. Randomly picked paragraphs have precedence over linebreaks and do not occur consecutively.
            <para />The default value is 0.1f
            </summary>
        </member>
        <member name="M:BytecodeApi.TextGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.TextGenerator" /> class with default values (<see cref="P:BytecodeApi.TextGenerator.MinSentenceCount" /> = 10, <see cref="P:BytecodeApi.TextGenerator.MaxSentenceCount" /> = 20, <see cref="P:BytecodeApi.TextGenerator.LineBreakChance" /> = 0.0f, <see cref="P:BytecodeApi.TextGenerator.ParagraphChance" /> = 0.1f) and creates a new <see cref="P:BytecodeApi.TextGenerator.SentenceGenerator" /> with default values.
            </summary>
        </member>
        <member name="M:BytecodeApi.TextGenerator.#ctor(BytecodeApi.SentenceGenerator)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.TextGenerator" /> class with the specified <see cref="P:BytecodeApi.TextGenerator.SentenceGenerator" /> and with default values (<see cref="P:BytecodeApi.TextGenerator.MinSentenceCount" /> = 10, <see cref="P:BytecodeApi.TextGenerator.MaxSentenceCount" /> = 20, <see cref="P:BytecodeApi.TextGenerator.LineBreakChance" /> = 0.0f, <see cref="P:BytecodeApi.TextGenerator.ParagraphChance" /> = 0.1f).
            </summary>
            <param name="sentenceGenerator">The <see cref="P:BytecodeApi.TextGenerator.SentenceGenerator" /> to use for sentence generation.</param>
        </member>
        <member name="M:BytecodeApi.TextGenerator.Generate">
            <summary>
            Generates a random sequence of sentences using the specified parameters of this <see cref="T:BytecodeApi.TextGenerator" /> instance.
            </summary>
            <returns>
            A new <see cref="T:System.String" /> with dynamically generated text.
            </returns>
        </member>
        <member name="T:BytecodeApi.SentenceGenerator">
            <summary>
            Class that generates random sentences that match the pattern of real language.
            A <see cref="T:BytecodeApi.WordGenerator" /> is used to generate the words that generated sentences are composed of.
            </summary>
        </member>
        <member name="P:BytecodeApi.SentenceGenerator.WordGenerator">
            <summary>
            Gets or sets the <see cref="P:BytecodeApi.SentenceGenerator.WordGenerator" /> that is used to generate words.
            </summary>
        </member>
        <member name="P:BytecodeApi.SentenceGenerator.MinWords">
            <summary>
            Gets or sets the minimum number words used to build sentences.
            <para />The default value is 3
            </summary>
        </member>
        <member name="P:BytecodeApi.SentenceGenerator.MaxWords">
            <summary>
            Gets or sets the maximum number words used to build sentences.
            <para />The default value is 10
            </summary>
        </member>
        <member name="P:BytecodeApi.SentenceGenerator.CommaChance">
            <summary>
            Gets or sets a <see cref="T:System.Single" /> value that specifies the chance of a comma being inserted after a word, where 0.0f means no commas and 1.0f means a comma between every word.
            <para />The default value is 0.2f
            </summary>
        </member>
        <member name="P:BytecodeApi.SentenceGenerator.FinishPunctuation">
            <summary>
            Gets or sets the characters that are used for punctuation after a sentence. Including a character multiple times increases the chance for this character. For example, this can be used to increase the likelihood of a period over a question mark or exclamation mark. Character order is not relevant.
            <para />The default value is "...?!"
            </summary>
        </member>
        <member name="M:BytecodeApi.SentenceGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.SentenceGenerator" /> class with default values (<see cref="P:BytecodeApi.SentenceGenerator.MinWords" /> = 3, <see cref="P:BytecodeApi.SentenceGenerator.MaxWords" /> = 10, <see cref="P:BytecodeApi.SentenceGenerator.CommaChance" /> = 0.2f, <see cref="P:BytecodeApi.SentenceGenerator.FinishPunctuation" /> = "...?!") and creates a new <see cref="P:BytecodeApi.SentenceGenerator.WordGenerator" /> with default values.
            </summary>
        </member>
        <member name="M:BytecodeApi.SentenceGenerator.#ctor(BytecodeApi.WordGenerator)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.SentenceGenerator" /> class with the specified <see cref="P:BytecodeApi.SentenceGenerator.WordGenerator" /> and with default values (<see cref="P:BytecodeApi.SentenceGenerator.MinWords" /> = 3, <see cref="P:BytecodeApi.SentenceGenerator.MaxWords" /> = 10, <see cref="P:BytecodeApi.SentenceGenerator.CommaChance" /> = 0.2f, <see cref="P:BytecodeApi.SentenceGenerator.FinishPunctuation" /> = "...?!").
            </summary>
            <param name="wordGenerator">The <see cref="P:BytecodeApi.SentenceGenerator.WordGenerator" /> to use for word generation.</param>
        </member>
        <member name="M:BytecodeApi.SentenceGenerator.Generate">
            <summary>
            Generates a random sentence using the specified parameters of this <see cref="T:BytecodeApi.SentenceGenerator" /> instance.
            </summary>
            <returns>
            A new <see cref="T:System.String" /> with a dynamically generated sentence.
            </returns>
        </member>
        <member name="T:BytecodeApi.WordGenerator">
            <summary>
            Class that generates random words that match the pattern of real language.
            Word generation is typically used to create arbitrary text that looks like language.
            </summary>
        </member>
        <member name="P:BytecodeApi.WordGenerator.MinLength">
            <summary>
            Gets or sets the minimum length of a generated word.
            <para />The default value is 3
            </summary>
        </member>
        <member name="P:BytecodeApi.WordGenerator.MaxLength">
            <summary>
            Gets or sets the maximum length of a generated word.
            <para />The default value is 10
            </summary>
        </member>
        <member name="P:BytecodeApi.WordGenerator.DoubleConsonantChance">
            <summary>
            Gets or sets a <see cref="T:System.Single" /> value that specifies the chance of a consonant being inserted twice, where 0.0f means no double consonants and 1.0f means consonants are always inserted twice.
            <para />The default value is 0.1f
            </summary>
        </member>
        <member name="P:BytecodeApi.WordGenerator.DoubleVovelChance">
            <summary>
            Gets or sets a <see cref="T:System.Single" /> value that specifies the chance of a vovel being inserted twice, where 0.0f means no double vovels and 1.0f means vovels are always inserted twice.
            <para />The default value is 0.1f
            </summary>
        </member>
        <member name="M:BytecodeApi.WordGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.WordGenerator" /> class with default values (<see cref="P:BytecodeApi.WordGenerator.MinLength" /> = 3, <see cref="P:BytecodeApi.WordGenerator.MaxLength" /> = 10, <see cref="P:BytecodeApi.WordGenerator.DoubleConsonantChance" /> = 0.1f, <see cref="P:BytecodeApi.WordGenerator.DoubleVovelChance" /> = 0.1f).
            </summary>
        </member>
        <member name="M:BytecodeApi.WordGenerator.Generate">
            <summary>
            Generates a random word in CamelCase character casing using the specified parameters of this <see cref="T:BytecodeApi.WordGenerator" /> instance.
            </summary>
            <returns>
            A new <see cref="T:System.String" /> with a dynamically generated word in CamelCase character casing.
            </returns>
        </member>
        <member name="M:BytecodeApi.WordGenerator.Generate(BytecodeApi.StringCasing)">
            <summary>
            Generates a random word in the specified <see cref="T:BytecodeApi.StringCasing" /> using the specified parameters of this <see cref="T:BytecodeApi.WordGenerator" /> instance.
            </summary>
            <param name="casing">The <see cref="T:BytecodeApi.StringCasing" /> to be used for characters in the generated word.</param>
            <returns>
            A new <see cref="T:System.String" /> with a dynamically generated word in the specified <see cref="T:BytecodeApi.StringCasing" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.Wording">
            <summary>
            Helper class that performs string manipulation on <see cref="T:System.String" /> objects containing text.
            </summary>
        </member>
        <member name="M:BytecodeApi.Wording.TrimText(System.String,System.Int32)">
            <summary>
            Trims the specified <see cref="T:System.String" /> by the specified length. If the <see cref="T:System.String" /> is longer than the value of <paramref name="length" />, it will be truncated by a leading "..." to match the <paramref name="length" /> parameter, including the length of the "..." appendix (3 characters).
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be trimmed.</param>
            <param name="length">A <see cref="T:System.Int32" /> value specifying the maximum length of the returned string.</param>
            <returns>
            The original value of <paramref name="str" />, if the length of the <see cref="T:System.String" /> is less than or equal to the <paramref name="length" /> parameter;
            otherwise, the truncated <see cref="T:System.String" /> and a leading "..." that matches the <paramref name="length" /> parameter, including the length of the "..." appendix (3 characters).
            </returns>
        </member>
        <member name="M:BytecodeApi.Wording.TrimText(System.String,System.Int32,System.String)">
            <summary>
            Trims the specified <see cref="T:System.String" /> by the specified length. If the <see cref="T:System.String" /> is longer than the value of <paramref name="length" />, it will be truncated and the value of <paramref name="trailingText" /> will be appended to match the <paramref name="length" /> parameter, including the length of the <paramref name="trailingText" /> paramter.
            </summary>
            <param name="str">The <see cref="T:System.String" /> to be trimmed.</param>
            <param name="length">A <see cref="T:System.Int32" /> value specifying the maximum length of the returned string.</param>
            <param name="trailingText">The trailing text.</param>
            <returns>
            The original value of <paramref name="str" />, if the length of the <see cref="T:System.String" /> is less than or equal to the <paramref name="length" /> parameter and the length of the <paramref name="trailingText" /> parameter;
            otherwise, the truncated <see cref="T:System.String" /> and the value of <paramref name="trailingText" /> that matches the <paramref name="length" /> parameter, including the length of the <paramref name="trailingText" /> paramter.
            </returns>
        </member>
        <member name="M:BytecodeApi.Wording.JoinStrings(System.String,System.String,System.String[])">
            <summary>
            Concatenates all values in the specified <see cref="T:System.String" /> collection, where <paramref name="lastSeparator" /> is used for the last separator.
            <para />Example with 1 value: A
            <para />Example with 2 values: A and B
            <para />Example with 3 values: A, B and C
            <para />Example with 4 values: A, B, C and D
            </summary>
            <param name="separator">A <see cref="T:System.String" /> value specifying the separator between each <see cref="T:System.String" /> value.</param>
            <param name="lastSeparator">A <see cref="T:System.String" /> value specifying the separator between the last two <see cref="T:System.String" /> values.</param>
            <param name="strings">The <see cref="T:System.String" />[] that is concatenated.</param>
            <returns>
            A <see cref="T:System.String" />, where the values of <paramref name="strings" /> is concatenated by the specified separators, or <see cref="F:System.String.Empty" />, if the collection is empty.
            </returns>
        </member>
        <member name="M:BytecodeApi.Wording.PluralizeString(System.String,System.Int32)">
            <summary>
            Pluralizes the specified <see cref="T:System.String" /> by appending "s", if <paramref name="count" /> is not equal to 1.
            </summary>
            <param name="str">The <see cref="T:System.String" /> value to be pluralized.</param>
            <param name="count">A <see cref="T:System.Int32" /> value representing a count number. If this value is not equal to 1, <paramref name="str" /> is pluralized.</param>
            <returns>
            The pluralized representation of the specified <see cref="T:System.String" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Wording.FormatByteSizeString(System.Int64)">
            <summary>
            Formats a <see cref="T:System.Int64" /> value representing a byte size in the <see cref="F:BytecodeApi.ByteSizeFormat.ByteSizeTwoDigits" /> format.
            <para />Example: 12345 is converted to "12,06 KB"
            </summary>
            <param name="size">A <see cref="T:System.Int64" /> value representing a byte size.</param>
            <returns>
            An equivalent <see cref="T:System.String" /> value representing the byte size value in the <see cref="F:BytecodeApi.ByteSizeFormat.ByteSizeTwoDigits" /> format.
            </returns>
        </member>
        <member name="M:BytecodeApi.Wording.FormatByteSizeString(System.Int64,System.Int32)">
            <summary>
            Formats a <see cref="T:System.Int64" /> value representing a byte size with the specified number of decimal places.
            <para />Example: 12345 is converted to "12,06 KB" (given, that <paramref name="decimalPlaces" /> = 2)
            </summary>
            <param name="size">A <see cref="T:System.Int64" /> value representing a byte size.</param>
            <param name="decimalPlaces">The number of decimal places to round the result to.</param>
            <returns>
            An equivalent <see cref="T:System.String" /> value representing the formatted byte size value.
            </returns>
        </member>
        <member name="M:BytecodeApi.Wording.FormatByteSizeString(System.Int64,BytecodeApi.ByteSizeFormat)">
            <summary>
            Formats a <see cref="T:System.Int64" /> value representing a byte size in the specified <see cref="T:BytecodeApi.ByteSizeFormat" /> and returns its equivalent <see cref="T:System.String" /> representation.
            </summary>
            <param name="size">A <see cref="T:System.Int64" /> value representing a byte size.</param>
            <param name="format">The <see cref="T:BytecodeApi.ByteSizeFormat" /> to use to format <paramref name="size" />.</param>
            <returns>
            An equivalent <see cref="T:System.String" /> value representing the byte size value in the specified <see cref="T:BytecodeApi.ByteSizeFormat" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.Wording.FormatTimeSpanString(System.TimeSpan)">
            <summary>
            Converts the value of the specified <see cref="T:System.TimeSpan" /> to a human readable <see cref="T:System.String" /> representation by displaying the two most significant elements of either days, hours, minutes or seconds that are greater than zero, separated by a comma.
            <para />Example: "12:00:03" is converted to "12h, 3s"
            </summary>
            <param name="timeSpan">The <see cref="T:System.TimeSpan" /> value to convert.</param>
            <returns>
            The value of the specified <see cref="T:System.TimeSpan" /> as a human readable <see cref="T:System.String" /> representation.
            </returns>
        </member>
        <member name="M:BytecodeApi.Wording.FormatTimeSpanString(System.TimeSpan,System.Int32)">
            <summary>
            Converts the value of the specified <see cref="T:System.TimeSpan" /> to a human readable <see cref="T:System.String" /> representation by displaying a specified number of most significant elements of either days, hours, minutes or seconds that are greater than zero, separated by a comma.
            <para />Example: "5.03:30:15" is converted to "5d, 3h", if <paramref name="maxElements" /> is 2 and "5d, 3h, 30m",  if <paramref name="maxElements" /> is 3.
            </summary>
            <param name="timeSpan">The <see cref="T:System.TimeSpan" /> value to convert.</param>
            <param name="maxElements">A <see cref="T:System.Int32" /> value specifying the number of elements of either days, hours, minutes or seconds to display.</param>
            <returns>
            The value of the specified <see cref="T:System.TimeSpan" /> as a human readable <see cref="T:System.String" /> representation.
            </returns>
        </member>
        <member name="M:BytecodeApi.Wording.FormatTimeSpanString(System.TimeSpan,System.Int32,System.String)">
            <summary>
            Converts the value of the specified <see cref="T:System.TimeSpan" /> to a human readable <see cref="T:System.String" /> representation by displaying a specified number of most significant elements of either days, hours, minutes or seconds that are greater than zero, separated by the specified separator.
            <para />Example: "5.03:30:15" is converted to "5d, 3h", if <paramref name="maxElements" /> is 2 and "5d, 3h, 30m",  if <paramref name="maxElements" /> is 3.
            </summary>
            <param name="timeSpan">The <see cref="T:System.TimeSpan" /> value to convert.</param>
            <param name="maxElements">A <see cref="T:System.Int32" /> value specifying the number of elements of either days, hours, minutes or seconds to display.</param>
            <param name="separator">A <see cref="T:System.String" /> specifying the separator to use between each element, including whitespaces, if needed.</param>
            <returns>
            The value of the specified <see cref="T:System.TimeSpan" /> as a human readable <see cref="T:System.String" /> representation.
            </returns>
        </member>
        <member name="T:BytecodeApi.ConverterBase`1">
            <summary>
            Represents the base class that wraps the <see cref="T:System.Windows.Data.IValueConverter" /> and provides a simplified wrapper method for Convert. ConvertBack always returns <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.ConverterBase`1.Convert(`0)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <returns>
            A converted value. If the method returns <see langword="null" />, the valid null value is used.
            </returns>
        </member>
        <member name="T:BytecodeApi.ConverterBase`2">
            <summary>
            Represents the base class that wraps the <see cref="T:System.Windows.Data.IValueConverter" /> and provides a simplified wrapper method for Convert. ConvertBack always returns <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.ConverterBase`2.Convert(`0,`1)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="parameter">The converter parameter to use.</param>
            <returns>
            A converted value. If the method returns <see langword="null" />, the valid null value is used.
            </returns>
        </member>
        <member name="T:BytecodeApi.ConverterBaseExtended`2">
            <summary>
            Represents the base class that wraps the <see cref="T:System.Windows.Data.IValueConverter" /> and provides simplified wrapper methods for Convert and ConvertBack.
            </summary>
        </member>
        <member name="M:BytecodeApi.ConverterBaseExtended`2.ConvertBack(`1)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <returns>
            A converted value. If the method returns <see langword="null" />, the valid null value is used.
            </returns>
        </member>
        <member name="T:BytecodeApi.ConverterBaseExtended`3">
            <summary>
            Represents the base class that wraps the <see cref="T:System.Windows.Data.IValueConverter" /> and provides simplified wrapper methods for Convert and ConvertBack.
            </summary>
        </member>
        <member name="M:BytecodeApi.ConverterBaseExtended`3.ConvertBack(`1,`2)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="parameter">The converter parameter to use.</param>
            <returns>
            A converted value. If the method returns <see langword="null" />, the valid null value is used.
            </returns>
        </member>
        <member name="T:BytecodeApi.BooleanToGridLengthConverter">
            <summary>
            Represents the converter that converts <see cref="T:System.Boolean" /> values to a <see cref="T:System.Windows.GridLength" /> value, where <see langword="true" /> is converted to <see cref="P:System.Windows.GridLength.Auto" /> and <see langword="false" /> is concverted to <see langword="new" /> <see cref="T:System.Windows.GridLength" />(0). If the given <see cref="T:System.Boolean" /> parameter is <see langword="true" />, the result is inverted.
            </summary>
        </member>
        <member name="T:BytecodeApi.BooleanToInverseConverter">
            <summary>
            Represents the converter that converts <see cref="T:System.Boolean" /> values to their inverted <see cref="T:System.Boolean" /> representation.
            </summary>
        </member>
        <member name="T:BytecodeApi.BooleanToVisibilityConverter">
            <summary>
            Represents the converter that converts <see cref="T:System.Boolean" /> values to <see cref="T:System.Windows.Visibility" /> enumeration values. If the given <see cref="T:System.Boolean" /> parameter is <see langword="true" />, the result is inverted.
            </summary>
        </member>
        <member name="T:BytecodeApi.DateTimeToStringConverter">
            <summary>
            Represents the converter that converts <see cref="T:System.DateTime" /> values to their equivalent <see cref="T:System.String" /> representation using the <see cref="M:BytecodeApi.DateTimeExtensions.ToStringInvariant(System.DateTime,System.String)" /> method and the specified format in the parameter.
            </summary>
        </member>
        <member name="T:BytecodeApi.IComparableGreaterEqualToBooleanConverter">
            <summary>
            Represents the converter that converts <see cref="T:System.IComparable" /> objects, such as integer values, to a <see cref="T:System.Boolean" /> value indicating whether the value is greater than or equal to the given parameter.
            </summary>
        </member>
        <member name="T:BytecodeApi.IComparableGreaterEqualToVisibilityConverter">
            <summary>
            Represents the converter that converts <see cref="T:System.IComparable" /> objects, such as integer values, to a <see cref="T:System.Windows.Visibility" /> value indicating whether the value is greater than or equal to the given parameter.
            </summary>
        </member>
        <member name="T:BytecodeApi.IComparableGreaterToBooleanConverter">
            <summary>
            Represents the converter that converts <see cref="T:System.IComparable" /> objects, such as integer values, to a <see cref="T:System.Boolean" /> value indicating whether the value is greater than the given parameter.
            </summary>
        </member>
        <member name="T:BytecodeApi.IComparableGreaterToVisibilityConverter">
            <summary>
            Represents the converter that converts <see cref="T:System.IComparable" /> objects, such as integer values, to a <see cref="T:System.Windows.Visibility" /> value indicating whether the value is greater than the given parameter.
            </summary>
        </member>
        <member name="T:BytecodeApi.IComparableLessEqualToBooleanConverter">
            <summary>
            Represents the converter that converts <see cref="T:System.IComparable" /> objects, such as integer values, to a <see cref="T:System.Boolean" /> value indicating whether the value is less than or equal to the given parameter.
            </summary>
        </member>
        <member name="T:BytecodeApi.IComparableLessEqualToVisibilityConverter">
            <summary>
            Represents the converter that converts <see cref="T:System.IComparable" /> objects, such as integer values, to a <see cref="T:System.Windows.Visibility" /> value indicating whether the value is less than or equal to the given parameter.
            </summary>
        </member>
        <member name="T:BytecodeApi.IComparableLessToBooleanConverter">
            <summary>
            Represents the converter that converts <see cref="T:System.IComparable" /> objects, such as integer values, to a <see cref="T:System.Boolean" /> value indicating whether the value is less than the given parameter.
            </summary>
        </member>
        <member name="T:BytecodeApi.IComparableLessToVisibilityConverter">
            <summary>
            Represents the converter that converts <see cref="T:System.IComparable" /> objects, such as integer values, to a <see cref="T:System.Windows.Visibility" /> value indicating whether the value is less than the given parameter.
            </summary>
        </member>
        <member name="T:BytecodeApi.ObjectEqualsNotToBooleanConverter">
            <summary>
            Represents the converter that compares an <see cref="T:System.Object" /> with the <see cref="T:System.Object" /> in the given parameter and returns <see langword="true" />, if the objects are not equal.
            </summary>
        </member>
        <member name="T:BytecodeApi.ObjectEqualsNotToVisibilityConverter">
            <summary>
            Represents the converter that compares an <see cref="T:System.Object" /> with the <see cref="T:System.Object" /> in the given parameter and returns a <see cref="T:System.Windows.Visibility" /> value indicating wheter the objects are not equal.
            </summary>
        </member>
        <member name="T:BytecodeApi.ObjectEqualsToBooleanConverter">
            <summary>
            Represents the converter that compares an <see cref="T:System.Object" /> with the <see cref="T:System.Object" /> in the given parameter and returns <see langword="true" />, if the objects are equal.
            </summary>
        </member>
        <member name="T:BytecodeApi.ObjectEqualsToVisibilityConverter">
            <summary>
            Represents the converter that compares an <see cref="T:System.Object" /> with the <see cref="T:System.Object" /> in the given parameter and returns a <see cref="T:System.Windows.Visibility" /> value indicating wheter the objects are equal.
            </summary>
        </member>
        <member name="T:BytecodeApi.ObjectIsNullToBooleanConverter">
            <summary>
            Represents the converter that converts objects to a <see cref="T:System.Boolean" /> value indicating wheter the <see cref="T:System.Object" /> is <see langword="null" />.
            </summary>
        </member>
        <member name="T:BytecodeApi.ObjectIsNullToGridLengthConverter">
            <summary>
            Represents the converter that converts objects to a <see cref="T:System.Windows.GridLength" /> value, where <see langword="null" /> is converted to <see langword="new" /> <see cref="T:System.Windows.GridLength" />(0) and <see langword="false" /> is concverted to <see cref="P:System.Windows.GridLength.Auto" />. If the given <see cref="T:System.Boolean" /> parameter is <see langword="true" />, the result is inverted.
            </summary>
        </member>
        <member name="T:BytecodeApi.ObjectIsNullToVisibilityConverter">
            <summary>
            Represents the converter that converts objects to a <see cref="T:System.Windows.Visibility" /> value indicating wheter the <see cref="T:System.Object" /> is <see langword="null" />.
            </summary>
        </member>
        <member name="T:BytecodeApi.ObjectToHashConverter">
            <summary>
            Represents the converter that converts objects of various types to their equivalent hash representation using the specified <see cref="T:BytecodeApi.HashType" /> in the given parameter. The hash is returned as a hexadecimal <see cref="T:System.String" />. Accepted value types are: <see cref="T:System.Byte" />[], <see cref="T:System.String" /> and <see cref="T:System.IO.FileInfo" /> (computes the hash from a file).
            </summary>
        </member>
        <member name="T:BytecodeApi.ObjectToImageSourceConverter">
            <summary>
            Represents the converter that converts objects of various types to their equivalent <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> representation. Accepted value types are: <see cref="T:System.Drawing.Image" /> and <see cref="T:System.Drawing.Icon" />.
            </summary>
        </member>
        <member name="T:BytecodeApi.PathStringToFileNameStringConverter">
            <summary>
            Represents the converter that converts paths represented as a <see cref="T:System.String" /> to the filename part. If the given <see cref="T:System.Boolean" /> parameter is <see langword="true" />, the filename part without the extension is returned.
            </summary>
        </member>
        <member name="T:BytecodeApi.StringIsNullOrEmptyToBooleanConverter">
            <summary>
            Represents the converter that converts <see cref="T:System.String" /> values to a <see cref="T:System.Boolean" /> value indicating wheter the <see cref="T:System.String" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />. If the given <see cref="T:System.Boolean" /> parameter is <see langword="true" />, the result is inverted.
            </summary>
        </member>
        <member name="T:BytecodeApi.StringConcatConverter">
            <summary>
            Represents the converter that concatenates two <see cref="T:System.String" /> values. Both values can be provided using any data type. <see langword="null" /> values are treated as <see cref="F:System.String.Empty" />.
            </summary>
        </member>
        <member name="T:BytecodeApi.StringIsNullOrEmptyToVisibilityConverter">
            <summary>
            Represents the converter that converts <see cref="T:System.String" /> values to a <see cref="T:System.Windows.Visibility" /> value indicating wheter the <see cref="T:System.String" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />. If the given <see cref="T:System.Boolean" /> parameter is <see langword="true" />, the result is inverted.
            </summary>
        </member>
        <member name="T:BytecodeApi.TimeSpanToHumanReadableStringConverter">
            <summary>
            Represents the converter that converts <see cref="T:System.TimeSpan" /> values to their equivalent <see cref="T:System.String" /> representation in human readable form using the <see cref="M:BytecodeApi.Wording.FormatTimeSpanString(System.TimeSpan)" /> method. The parameter specifies the maxElement parameter in the <see cref="M:BytecodeApi.Wording.FormatTimeSpanString(System.TimeSpan,System.Int32)" /> method.
            </summary>
        </member>
        <member name="T:BytecodeApi.TimeSpanToStringConverter">
            <summary>
            Represents the converter that converts <see cref="T:System.TimeSpan" /> values to their equivalent <see cref="T:System.String" /> representation using the <see cref="M:BytecodeApi.TimeSpanExtensions.ToStringInvariant(System.TimeSpan,System.String)" /> method and the specified format in the parameter.
            </summary>
        </member>
        <member name="T:BytecodeApi.Dialogs">
            <summary>
            Helper class for UI dialogs, such as Open and Save for files and directories.
            </summary>
        </member>
        <member name="M:BytecodeApi.Dialogs.Open">
            <summary>
            Displays an open file dialog with a filter that allows any file to be opened. Returns a <see cref="T:System.String" /> representing the full path to the selected file and <see langword="null" />, if selection has been canceled by the user.
            </summary>
            <returns>
            A <see cref="T:System.String" /> representing the full path to the selected file and <see langword="null" />, if selection has been canceled by the user.
            </returns>
        </member>
        <member name="M:BytecodeApi.Dialogs.Open(System.String[])">
            <summary>
            Displays an open file dialog with a filter that allows any file with one of the specified extensions to be opened. The extension description is retrieved using the <see cref="T:BytecodeApi.FileExtensionInfo" /> class. Returns a <see cref="T:System.String" /> representing the full path to the selected file and <see langword="null" />, if selection has been canceled by the user.
            </summary>
            <param name="extensions">The collection of extensions that are allowed to be opened. The extension description is retrieved using the <see cref="T:BytecodeApi.FileExtensionInfo" /> class.</param>
            <returns>
            A <see cref="T:System.String" /> representing the full path to the selected file and <see langword="null" />, if selection has been canceled by the user.
            </returns>
        </member>
        <member name="M:BytecodeApi.Dialogs.Open(System.String[],System.String)">
            <summary>
            Displays an open file dialog with a filter that allows any file with one of the specified extensions to be opened. Returns a <see cref="T:System.String" /> representing the full path to the selected file and <see langword="null" />, if selection has been canceled by the user.
            </summary>
            <param name="extensions">The collection of extensions that are allowed to be opened.</param>
            <param name="extensionsDescription">The description to be used. If <see langword="null" />, the <see cref="T:BytecodeApi.FileExtensionInfo" /> class is used to retrieve the description.</param>
            <returns>
            A <see cref="T:System.String" /> representing the full path to the selected file and <see langword="null" />, if selection has been canceled by the user.
            </returns>
        </member>
        <member name="M:BytecodeApi.Dialogs.OpenMultiple">
            <summary>
            Displays an open file dialog with a filter that allows any file to be opened. Returns a <see cref="T:System.String" />[] representing the full path to all selected files and <see langword="null" />, if selection has been canceled by the user.
            </summary>
            <returns>
            A <see cref="T:System.String" />[] representing the full path to all selected files and <see langword="null" />, if selection has been canceled by the user.
            </returns>
        </member>
        <member name="M:BytecodeApi.Dialogs.OpenMultiple(System.String[])">
            <summary>
            Displays an open file dialog with a filter that allows any file with one of the specified extensions to be opened. The extension description is retrieved using the <see cref="T:BytecodeApi.FileExtensionInfo" /> class. Returns a <see cref="T:System.String" />[] representing the full path to all selected files and <see langword="null" />, if selection has been canceled by the user.
            </summary>
            <param name="extensions">The collection of extensions that are allowed to be opened. The extension description is retrieved using the <see cref="T:BytecodeApi.FileExtensionInfo" /> class.</param>
            <returns>
            A <see cref="T:System.String" />[] representing the full path to all selected files and <see langword="null" />, if selection has been canceled by the user.
            </returns>
        </member>
        <member name="M:BytecodeApi.Dialogs.OpenFolder">
            <summary>
            Displays a folder browser dialog and returns a <see cref="T:System.String" /> representing the full path to the selected directory and <see langword="null" />, if selection has been canceled by the user.
            </summary>
            <returns>
            A <see cref="T:System.String" /> representing the full path to the selected directory and <see langword="null" />, if selection has been canceled by the user.
            </returns>
        </member>
        <member name="M:BytecodeApi.Dialogs.OpenFolder(System.String)">
            <summary>
            Displays a folder browser dialog, starting from the specified root folder, and returns a <see cref="T:System.String" /> representing the full path to the selected directory and <see langword="null" />, if selection has been canceled by the user.
            </summary>
            <param name="rootFolder">A <see cref="T:System.String" /> specifying the root folder to start browsing from.</param>
            <returns>
            A <see cref="T:System.String" /> representing the full path to the selected directory and <see langword="null" />, if selection has been canceled by the user.
            </returns>
        </member>
        <member name="M:BytecodeApi.Dialogs.SelectIcon(System.Int32@)">
            <summary>
            Displays an <see cref="T:BytecodeApi.IconPickerDialog" /> that allows an icon from a resource file to be selected. Returns a <see cref="T:System.String" /> representing the full path to the selected file and <see langword="null" />, if selection has been canceled by the user. The selected icon index is written to the <paramref name="index" /> parameter.
            </summary>
            <param name="index">When this method returns a <see cref="T:System.String" />, contains the index of the selected icon; otherwise, -1.</param>
            <returns>
            Returns a <see cref="T:System.String" /> representing the full path to the selected file and <see langword="null" />, if selection has been canceled by the user. The selected icon index is written to the <paramref name="index" /> parameter.
            </returns>
        </member>
        <member name="M:BytecodeApi.Dialogs.Save(System.String)">
            <summary>
            Displays a save file dialog and automatically adds an extension to the filename, if the user omits an extension. The extension is taken from the <paramref name="fileName" /> parameter.
            </summary>
            <param name="fileName">A <see cref="T:System.String" /> specifying the initial filename that can be changed by the user.</param>
            <returns>
            A <see cref="T:System.String" /> representing the full path to the saved file and <see langword="null" />, if selection has been canceled by the user.
            </returns>
        </member>
        <member name="M:BytecodeApi.Dialogs.Save(System.String,System.String)">
            <summary>
            Displays a save file dialog and automatically adds an extension to the filename, if the user omits an extension.
            </summary>
            <param name="fileName">A <see cref="T:System.String" /> specifying the initial filename that can be changed by the user.</param>
            <param name="extension">A <see cref="T:System.String" /> specifying the extension to be added.</param>
            <returns>
            A <see cref="T:System.String" /> representing the full path to the saved file and <see langword="null" />, if selection has been canceled by the user.
            </returns>
        </member>
        <member name="T:BytecodeApi.GrayscaleEffect">
            <summary>
            Provides a grayscale bitmap effect. This shader is typically used on WPF images.
            </summary>
        </member>
        <member name="F:BytecodeApi.GrayscaleEffect.InputProperty">
            <summary>
            Identifies the <see cref="P:BytecodeApi.GrayscaleEffect.Input" /> dependency property.
            </summary>
        </member>
        <member name="P:BytecodeApi.GrayscaleEffect.Input">
            <summary>
            Gets or sets a <see cref="T:System.Windows.Media.Brush" /> that applies a grayscale effect on the bitmap.
            </summary>
        </member>
        <member name="M:BytecodeApi.GrayscaleEffect.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.GrayscaleEffect" /> class.
            </summary>
        </member>
        <member name="T:BytecodeApi.IconPickerDialog">
            <summary>
            Represents a common dialog box that allows a user to pick an icon from a resource file.
            </summary>
        </member>
        <member name="P:BytecodeApi.IconPickerDialog.FileName">
            <summary>
            Gets or sets a <see cref="T:System.String" /> containing the full path of the selected file.
            </summary>
        </member>
        <member name="P:BytecodeApi.IconPickerDialog.IconIndex">
            <summary>
            Gets or sets a <see cref="T:System.Int32" /> value specifying the selected icon index.
            </summary>
        </member>
        <member name="M:BytecodeApi.IconPickerDialog.RunDialog(System.IntPtr)">
            <summary>
            Is called to display the icon picker dialog.
            </summary>
            <param name="hwndOwner">Handle to the window that owns the dialog box.</param>
            <returns>
            If the user clicks the OK button of the dialog that is displayed, <see langword="true" /> is returned;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.IconPickerDialog.Reset">
            <summary>
            Resets the properties of a common dialog to their default values.
            </summary>
        </member>
        <member name="T:BytecodeApi.CharExtension">
            <summary>
            Implements <see cref="T:System.Char" /> support for .NET Framework XAML Services.
            </summary>
        </member>
        <member name="P:BytecodeApi.CharExtension.Value">
            <summary>
            Gets or sets the <see cref="T:System.Char" /> value for this extension.
            </summary>
        </member>
        <member name="M:BytecodeApi.CharExtension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.CharExtension" /> class and sets <see cref="P:BytecodeApi.CharExtension.Value" /> to '\0'.
            </summary>
        </member>
        <member name="M:BytecodeApi.CharExtension.#ctor(System.Char)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.CharExtension" /> class, initializing <see cref="P:BytecodeApi.CharExtension.Value" /> based on the provided <see cref="T:System.Char" /> value.
            </summary>
            <param name="value">A <see cref="T:System.Char" /> value that is assigned to <see cref="P:BytecodeApi.CharExtension.Value" />.</param>
        </member>
        <member name="M:BytecodeApi.CharExtension.ProvideValue(System.IServiceProvider)">
            <summary>
            Returns a <see cref="T:System.Char" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.CharExtension" />.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            A <see cref="T:System.Char" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.CharExtension" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.UInt16Extension">
            <summary>
            Implements <see cref="T:System.UInt16" /> support for .NET Framework XAML Services.
            </summary>
        </member>
        <member name="P:BytecodeApi.UInt16Extension.Value">
            <summary>
            Gets or sets the <see cref="T:System.UInt16" /> value for this extension.
            </summary>
        </member>
        <member name="M:BytecodeApi.UInt16Extension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UInt16Extension" /> class and sets <see cref="P:BytecodeApi.UInt16Extension.Value" /> to 0.
            </summary>
        </member>
        <member name="M:BytecodeApi.UInt16Extension.#ctor(System.UInt16)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UInt16Extension" /> class, initializing <see cref="P:BytecodeApi.UInt16Extension.Value" /> based on the provided <see cref="T:System.UInt16" /> value.
            </summary>
            <param name="value">A <see cref="T:System.UInt16" /> value that is assigned to <see cref="P:BytecodeApi.UInt16Extension.Value" />.</param>
        </member>
        <member name="M:BytecodeApi.UInt16Extension.ProvideValue(System.IServiceProvider)">
            <summary>
            Returns a <see cref="T:System.UInt16" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.UInt16Extension" />.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            A <see cref="T:System.UInt16" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.UInt16Extension" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.Int16Extension">
            <summary>
            Implements <see cref="T:System.Int16" /> support for .NET Framework XAML Services.
            </summary>
        </member>
        <member name="P:BytecodeApi.Int16Extension.Value">
            <summary>
            Gets or sets the <see cref="T:System.Int16" /> value for this extension.
            </summary>
        </member>
        <member name="M:BytecodeApi.Int16Extension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.Int16Extension" /> class and sets <see cref="P:BytecodeApi.Int16Extension.Value" /> to 0.
            </summary>
        </member>
        <member name="M:BytecodeApi.Int16Extension.#ctor(System.Int16)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.Int16Extension" /> class, initializing <see cref="P:BytecodeApi.Int16Extension.Value" /> based on the provided <see cref="T:System.Int16" /> value.
            </summary>
            <param name="value">A <see cref="T:System.Int16" /> value that is assigned to <see cref="P:BytecodeApi.Int16Extension.Value" />.</param>
        </member>
        <member name="M:BytecodeApi.Int16Extension.ProvideValue(System.IServiceProvider)">
            <summary>
            Returns a <see cref="T:System.Int16" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.Int16Extension" />.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            A <see cref="T:System.Int16" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.Int16Extension" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.UInt64Extension">
            <summary>
            Implements <see cref="T:System.UInt64" /> support for .NET Framework XAML Services.
            </summary>
        </member>
        <member name="P:BytecodeApi.UInt64Extension.Value">
            <summary>
            Gets or sets the <see cref="T:System.UInt64" /> value for this extension.
            </summary>
        </member>
        <member name="M:BytecodeApi.UInt64Extension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UInt64Extension" /> class and sets <see cref="P:BytecodeApi.UInt64Extension.Value" /> to 0UL.
            </summary>
        </member>
        <member name="M:BytecodeApi.UInt64Extension.#ctor(System.UInt64)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UInt64Extension" /> class, initializing <see cref="P:BytecodeApi.UInt64Extension.Value" /> based on the provided <see cref="T:System.UInt64" /> value.
            </summary>
            <param name="value">A <see cref="T:System.UInt64" /> value that is assigned to <see cref="P:BytecodeApi.UInt64Extension.Value" />.</param>
        </member>
        <member name="M:BytecodeApi.UInt64Extension.ProvideValue(System.IServiceProvider)">
            <summary>
            Returns a <see cref="T:System.UInt64" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.UInt64Extension" />.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            A <see cref="T:System.UInt64" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.UInt64Extension" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.UInt32Extension">
            <summary>
            Implements <see cref="T:System.UInt32" /> support for .NET Framework XAML Services.
            </summary>
        </member>
        <member name="P:BytecodeApi.UInt32Extension.Value">
            <summary>
            Gets or sets the <see cref="T:System.UInt32" /> value for this extension.
            </summary>
        </member>
        <member name="M:BytecodeApi.UInt32Extension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UInt32Extension" /> class and sets <see cref="P:BytecodeApi.UInt32Extension.Value" /> to 0.
            </summary>
        </member>
        <member name="M:BytecodeApi.UInt32Extension.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.UInt32Extension" /> class, initializing <see cref="P:BytecodeApi.UInt32Extension.Value" /> based on the provided <see cref="T:System.UInt32" /> value.
            </summary>
            <param name="value">A <see cref="T:System.UInt32" /> value that is assigned to <see cref="P:BytecodeApi.UInt32Extension.Value" />.</param>
        </member>
        <member name="M:BytecodeApi.UInt32Extension.ProvideValue(System.IServiceProvider)">
            <summary>
            Returns a <see cref="T:System.UInt32" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.UInt32Extension" />.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            A <see cref="T:System.UInt32" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.UInt32Extension" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.SByteExtension">
            <summary>
            Implements <see cref="T:System.SByte" /> support for .NET Framework XAML Services.
            </summary>
        </member>
        <member name="P:BytecodeApi.SByteExtension.Value">
            <summary>
            Gets or sets the <see cref="T:System.SByte" /> value for this extension.
            </summary>
        </member>
        <member name="M:BytecodeApi.SByteExtension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.SByteExtension" /> class and sets <see cref="P:BytecodeApi.SByteExtension.Value" /> to 0.
            </summary>
        </member>
        <member name="M:BytecodeApi.SByteExtension.#ctor(System.SByte)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.SByteExtension" /> class, initializing <see cref="P:BytecodeApi.SByteExtension.Value" /> based on the provided <see cref="T:System.SByte" /> value.
            </summary>
            <param name="value">A <see cref="T:System.SByte" /> value that is assigned to <see cref="P:BytecodeApi.SByteExtension.Value" />.</param>
        </member>
        <member name="M:BytecodeApi.SByteExtension.ProvideValue(System.IServiceProvider)">
            <summary>
            Returns a <see cref="T:System.SByte" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.SByteExtension" />.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            A <see cref="T:System.SByte" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.SByteExtension" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.ByteExtension">
            <summary>
            Implements <see cref="T:System.Byte" /> support for .NET Framework XAML Services.
            </summary>
        </member>
        <member name="P:BytecodeApi.ByteExtension.Value">
            <summary>
            Gets or sets the <see cref="T:System.Byte" /> value for this extension.
            </summary>
        </member>
        <member name="M:BytecodeApi.ByteExtension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.ByteExtension" /> class and sets <see cref="P:BytecodeApi.ByteExtension.Value" /> to 0.
            </summary>
        </member>
        <member name="M:BytecodeApi.ByteExtension.#ctor(System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.ByteExtension" /> class, initializing <see cref="P:BytecodeApi.ByteExtension.Value" /> based on the provided <see cref="T:System.Byte" /> value.
            </summary>
            <param name="value">A <see cref="T:System.Byte" /> value that is assigned to <see cref="P:BytecodeApi.ByteExtension.Value" />.</param>
        </member>
        <member name="M:BytecodeApi.ByteExtension.ProvideValue(System.IServiceProvider)">
            <summary>
            Returns a <see cref="T:System.Byte" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.ByteExtension" />.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            A <see cref="T:System.Byte" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.ByteExtension" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.BooleanExtension">
            <summary>
            Implements <see cref="T:System.Boolean" /> support for .NET Framework XAML Services.
            </summary>
        </member>
        <member name="P:BytecodeApi.BooleanExtension.Value">
            <summary>
            Gets or sets the <see cref="T:System.Boolean" /> value for this extension.
            </summary>
        </member>
        <member name="M:BytecodeApi.BooleanExtension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.BooleanExtension" /> class and sets <see cref="P:BytecodeApi.BooleanExtension.Value" /> to false.
            </summary>
        </member>
        <member name="M:BytecodeApi.BooleanExtension.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.BooleanExtension" /> class, initializing <see cref="P:BytecodeApi.BooleanExtension.Value" /> based on the provided <see cref="T:System.Boolean" /> value.
            </summary>
            <param name="value">A <see cref="T:System.Boolean" /> value that is assigned to <see cref="P:BytecodeApi.BooleanExtension.Value" />.</param>
        </member>
        <member name="M:BytecodeApi.BooleanExtension.ProvideValue(System.IServiceProvider)">
            <summary>
            Returns a <see cref="T:System.Boolean" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.BooleanExtension" />.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            A <see cref="T:System.Boolean" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.BooleanExtension" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.DateTimeExtension">
            <summary>
            Implements <see cref="T:System.DateTime" /> support for .NET Framework XAML Services.
            </summary>
        </member>
        <member name="P:BytecodeApi.DateTimeExtension.Value">
            <summary>
            Gets or sets the <see cref="T:System.DateTime" /> value for this extension.
            </summary>
        </member>
        <member name="M:BytecodeApi.DateTimeExtension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.DateTimeExtension" /> class and sets <see cref="P:BytecodeApi.DateTimeExtension.Value" /> to <see cref="F:System.DateTime.MinValue" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.DateTimeExtension.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.DateTimeExtension" /> class, initializing <see cref="P:BytecodeApi.DateTimeExtension.Value" /> based on the provided <see cref="T:System.DateTime" /> value.
            </summary>
            <param name="value">A <see cref="T:System.DateTime" /> value that is assigned to <see cref="P:BytecodeApi.DateTimeExtension.Value" />.</param>
        </member>
        <member name="M:BytecodeApi.DateTimeExtension.ProvideValue(System.IServiceProvider)">
            <summary>
            Returns a <see cref="T:System.DateTime" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.DateTimeExtension" />.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            A <see cref="T:System.DateTime" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.DateTimeExtension" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.DecimalExtension">
            <summary>
            Implements <see cref="T:System.Decimal" /> support for .NET Framework XAML Services.
            </summary>
        </member>
        <member name="P:BytecodeApi.DecimalExtension.Value">
            <summary>
            Gets or sets the <see cref="T:System.Decimal" /> value for this extension.
            </summary>
        </member>
        <member name="M:BytecodeApi.DecimalExtension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.DecimalExtension" /> class and sets <see cref="P:BytecodeApi.DecimalExtension.Value" /> to 0.0m.
            </summary>
        </member>
        <member name="M:BytecodeApi.DecimalExtension.#ctor(System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.DecimalExtension" /> class, initializing <see cref="P:BytecodeApi.DecimalExtension.Value" /> based on the provided <see cref="T:System.Decimal" /> value.
            </summary>
            <param name="value">A <see cref="T:System.Decimal" /> value that is assigned to <see cref="P:BytecodeApi.DecimalExtension.Value" />.</param>
        </member>
        <member name="M:BytecodeApi.DecimalExtension.ProvideValue(System.IServiceProvider)">
            <summary>
            Returns a <see cref="T:System.Decimal" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.DecimalExtension" />.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            A <see cref="T:System.Decimal" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.DecimalExtension" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.DoubleExtension">
            <summary>
            Implements <see cref="T:System.Double" /> support for .NET Framework XAML Services.
            </summary>
        </member>
        <member name="P:BytecodeApi.DoubleExtension.Value">
            <summary>
            Gets or sets the <see cref="T:System.Double" /> value for this extension.
            </summary>
        </member>
        <member name="M:BytecodeApi.DoubleExtension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.DoubleExtension" /> class and sets <see cref="P:BytecodeApi.DoubleExtension.Value" /> to 0.0.
            </summary>
        </member>
        <member name="M:BytecodeApi.DoubleExtension.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.DoubleExtension" /> class, initializing <see cref="P:BytecodeApi.DoubleExtension.Value" /> based on the provided <see cref="T:System.Double" /> value.
            </summary>
            <param name="value">A <see cref="T:System.Double" /> value that is assigned to <see cref="P:BytecodeApi.DoubleExtension.Value" />.</param>
        </member>
        <member name="M:BytecodeApi.DoubleExtension.ProvideValue(System.IServiceProvider)">
            <summary>
            Returns a <see cref="T:System.Double" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.DoubleExtension" />.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            A <see cref="T:System.Double" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.DoubleExtension" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.IconExtension">
            <summary>
            Implements icon support for .NET Framework XAML Services.
            </summary>
        </member>
        <member name="P:BytecodeApi.IconExtension.Source">
            <summary>
            Gets or sets the source of the icon.
            </summary>
        </member>
        <member name="P:BytecodeApi.IconExtension.Size">
            <summary>
            Gets or sets the size (the width) of the icon.
            </summary>
        </member>
        <member name="M:BytecodeApi.IconExtension.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.IconExtension" /> class, initializing <paramref name="source" /> and <paramref name="size" /> based on the provided values.
            </summary>
            <param name="source">A <see cref="T:System.String" /> value that is assigned to <see cref="P:BytecodeApi.IconExtension.Source" />.</param>
            <param name="size">A <see cref="T:System.Int32" /> value that is assigned to <see cref="P:BytecodeApi.IconExtension.Size" />.</param>
        </member>
        <member name="M:BytecodeApi.IconExtension.ProvideValue(System.IServiceProvider)">
            <summary>
            Returns a <see cref="T:System.Windows.Media.Imaging.BitmapFrame" /> value that is computed from the parameters supplied in the constructor of <see cref="T:BytecodeApi.IconExtension" />.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            A <see cref="T:System.Windows.Media.Imaging.BitmapFrame" /> value that is computed from the parameters supplied in the constructor of <see cref="T:BytecodeApi.IconExtension" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.Int32Extension">
            <summary>
            Implements <see cref="T:System.Int32" /> support for .NET Framework XAML Services.
            </summary>
        </member>
        <member name="P:BytecodeApi.Int32Extension.Value">
            <summary>
            Gets or sets the <see cref="T:System.Int32" /> value for this extension.
            </summary>
        </member>
        <member name="M:BytecodeApi.Int32Extension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.Int32Extension" /> class and sets <see cref="P:BytecodeApi.Int32Extension.Value" /> to 0.
            </summary>
        </member>
        <member name="M:BytecodeApi.Int32Extension.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.Int32Extension" /> class, initializing <see cref="P:BytecodeApi.Int32Extension.Value" /> based on the provided <see cref="T:System.Int32" /> value.
            </summary>
            <param name="value">A <see cref="T:System.Int32" /> value that is assigned to <see cref="P:BytecodeApi.Int32Extension.Value" />.</param>
        </member>
        <member name="M:BytecodeApi.Int32Extension.ProvideValue(System.IServiceProvider)">
            <summary>
            Returns a <see cref="T:System.Int32" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.Int32Extension" />.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            A <see cref="T:System.Int32" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.Int32Extension" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.Int64Extension">
            <summary>
            Implements <see cref="T:System.Int64" /> support for .NET Framework XAML Services.
            </summary>
        </member>
        <member name="P:BytecodeApi.Int64Extension.Value">
            <summary>
            Gets or sets the <see cref="T:System.Int64" /> value for this extension.
            </summary>
        </member>
        <member name="M:BytecodeApi.Int64Extension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.Int64Extension" /> class and sets <see cref="P:BytecodeApi.Int64Extension.Value" /> to 0L.
            </summary>
        </member>
        <member name="M:BytecodeApi.Int64Extension.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.Int64Extension" /> class, initializing <see cref="P:BytecodeApi.Int64Extension.Value" /> based on the provided <see cref="T:System.Int64" /> value.
            </summary>
            <param name="value">A <see cref="T:System.Int64" /> value that is assigned to <see cref="P:BytecodeApi.Int64Extension.Value" />.</param>
        </member>
        <member name="M:BytecodeApi.Int64Extension.ProvideValue(System.IServiceProvider)">
            <summary>
            Returns a <see cref="T:System.Int64" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.Int64Extension" />.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            A <see cref="T:System.Int64" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.Int64Extension" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.SingleExtension">
            <summary>
            Implements <see cref="T:System.Single" /> support for .NET Framework XAML Services.
            </summary>
        </member>
        <member name="P:BytecodeApi.SingleExtension.Value">
            <summary>
            Gets or sets the <see cref="T:System.Single" /> value for this extension.
            </summary>
        </member>
        <member name="M:BytecodeApi.SingleExtension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.SingleExtension" /> class and sets <see cref="P:BytecodeApi.SingleExtension.Value" /> to 0.0f.
            </summary>
        </member>
        <member name="M:BytecodeApi.SingleExtension.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.SingleExtension" /> class, initializing <see cref="P:BytecodeApi.SingleExtension.Value" /> based on the provided <see cref="T:System.Single" /> value.
            </summary>
            <param name="value">A <see cref="T:System.Single" /> value that is assigned to <see cref="P:BytecodeApi.SingleExtension.Value" />.</param>
        </member>
        <member name="M:BytecodeApi.SingleExtension.ProvideValue(System.IServiceProvider)">
            <summary>
            Returns a <see cref="P:BytecodeApi.SingleExtension.Value" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.SingleExtension" />.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            A <see cref="P:BytecodeApi.SingleExtension.Value" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.SingleExtension" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.StringExtension">
            <summary>
            Implements <see cref="T:System.String" /> support for .NET Framework XAML Services.
            </summary>
        </member>
        <member name="P:BytecodeApi.StringExtension.Value">
            <summary>
            Gets or sets the <see cref="T:System.String" /> value for this extension.
            </summary>
        </member>
        <member name="M:BytecodeApi.StringExtension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.StringExtension" /> class and sets <see cref="P:BytecodeApi.StringExtension.Value" /> to <see langword="null" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.StringExtension.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.StringExtension" /> class, initializing <see cref="P:BytecodeApi.StringExtension.Value" /> based on the provided <see cref="T:System.String" /> value.
            </summary>
            <param name="value">A <see cref="T:System.String" /> value that is assigned to <see cref="P:BytecodeApi.StringExtension.Value" />.</param>
        </member>
        <member name="M:BytecodeApi.StringExtension.ProvideValue(System.IServiceProvider)">
            <summary>
            Returns a <see cref="T:System.String" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.StringExtension" />.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            A <see cref="T:System.String" /> value that is supplied in the constructor of <see cref="T:BytecodeApi.StringExtension" />.
            </returns>
        </member>
        <member name="T:BytecodeApi.MenuItemService">
            <summary>
            Helper class for the WPF <see cref="T:System.Windows.Controls.MenuItem" /> control that implements an icon that can be defined in XAML.
            </summary>
        </member>
        <member name="F:BytecodeApi.MenuItemService.ImageSourceProperty">
            <summary>
            Identifies the <see cref="T:BytecodeApi.MenuItemService" />.ImageSource dependency property.
            </summary>
        </member>
        <member name="M:BytecodeApi.MenuItemService.GetImageSource(System.Windows.DependencyObject)">
            <summary>
            Gets the image source of this <see cref="P:System.Windows.Controls.MenuItem.Icon" />.
            </summary>
            <param name="dependencyObject">The <see cref="T:System.Windows.Controls.MenuItem" /> to get the image source from.</param>
            <returns>
            The image source of this <see cref="P:System.Windows.Controls.MenuItem.Icon" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.MenuItemService.SetImageSource(System.Windows.DependencyObject,System.Object)">
            <summary>
            Gets the image source of this <see cref="P:System.Windows.Controls.MenuItem.Icon" />.
            </summary>
            <param name="dependencyObject">The <see cref="T:System.Windows.Controls.MenuItem" /> to assign the image source to.</param>
            <param name="value">The image source of this <see cref="P:System.Windows.Controls.MenuItem.Icon" />.</param>
        </member>
        <member name="T:BytecodeApi.MessageBoxes">
            <summary>
            Helper class for dialogs using the <see cref="T:System.Windows.MessageBox" /> class.
            </summary>
        </member>
        <member name="P:BytecodeApi.MessageBoxes.Window">
            <summary>
            Gets or sets the <see cref="P:BytecodeApi.MessageBoxes.Window" /> object that is used as the owner parameter for calls to the <see cref="T:System.Windows.MessageBox" /> class. If <see cref="P:BytecodeApi.MessageBoxes.Window" /> is <see langword="null" />, no owner is specified.
            </summary>
        </member>
        <member name="P:BytecodeApi.MessageBoxes.CaptionForInformation">
            <summary>
            Gets or sets the caption for message boxes shown by the <see cref="M:BytecodeApi.MessageBoxes.Information(System.String)" /> method. The initial value is "Information".
            </summary>
        </member>
        <member name="P:BytecodeApi.MessageBoxes.CaptionForConfirmation">
            <summary>
            Gets or sets the caption for message boxes shown by the <see cref="M:BytecodeApi.MessageBoxes.Confirmation(System.String)" /> method. The initial value is "Confirmation".
            </summary>
        </member>
        <member name="P:BytecodeApi.MessageBoxes.CaptionForWarning">
            <summary>
            Gets or sets the caption for message boxes shown by the <see cref="M:BytecodeApi.MessageBoxes.Warning(System.String)" /> method. The initial value is "Warning".
            </summary>
        </member>
        <member name="P:BytecodeApi.MessageBoxes.CaptionForError">
            <summary>
            Gets or sets the caption for message boxes shown by the <see cref="M:BytecodeApi.MessageBoxes.Error(System.String)" /> method. The initial value is "Error".
            </summary>
        </member>
        <member name="M:BytecodeApi.MessageBoxes.Information(System.String)">
            <summary>
            Shows a <see cref="T:System.Windows.MessageBox" /> dialog with the specified message, using <see cref="P:BytecodeApi.MessageBoxes.CaptionForInformation" /> as title and an "OK" button. The title is a static <see cref="T:System.String" /> value, set to "Information" by default.
            </summary>
            <param name="message">A <see cref="T:System.String" /> specifying the message to be displayed.</param>
        </member>
        <member name="M:BytecodeApi.MessageBoxes.Confirmation(System.String)">
            <summary>
            Shows a <see cref="T:System.Windows.MessageBox" /> dialog with the specified message, using <see cref="P:BytecodeApi.MessageBoxes.CaptionForConfirmation" /> as title and "Yes" and "No" buttons. The title is a static <see cref="T:System.String" /> value, set to "Confirmation" by default.
            </summary>
            <param name="message">A <see cref="T:System.String" /> specifying the message to be displayed.</param>
            <returns>
            <see langword="true" />, if "Yes" has been selected;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.MessageBoxes.Confirmation(System.String,System.Boolean)">
            <summary>
            Shows a <see cref="T:System.Windows.MessageBox" /> dialog with the specified message, using <see cref="P:BytecodeApi.MessageBoxes.CaptionForConfirmation" /> as title and "Yes" and "No" buttons. The title is a static <see cref="T:System.String" /> value, set to "Confirmation" by default.
            </summary>
            <param name="message">A <see cref="T:System.String" /> specifying the message to be displayed.</param>
            <param name="isWarning"><see langword="true" /> to use the warning icon; <see langword="false" /> to use the information icon.</param>
            <returns>
            <see langword="true" />, if "Yes" has been selected;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.MessageBoxes.Confirmation(System.String,System.Boolean,System.Boolean)">
            <summary>
            Shows a <see cref="T:System.Windows.MessageBox" /> dialog with the specified message, using <see cref="P:BytecodeApi.MessageBoxes.CaptionForConfirmation" /> as title and "Yes" and "No" buttons. The title is a static <see cref="T:System.String" /> value, set to "Confirmation" by default.
            </summary>
            <param name="message">A <see cref="T:System.String" /> specifying the message to be displayed.</param>
            <param name="isWarning"><see langword="true" /> to use the warning icon; <see langword="false" /> to use the information icon.</param>
            <param name="useOkCancel"><see langword="true" /> to use "Yes" and "No"; <see langword="false" /> to use "OK" and "Cancel" buttons.</param>
            <returns>
            <see langword="true" />, if "Yes" or "OK" has been selected;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.MessageBoxes.ConfirmationWithCancel(System.String)">
            <summary>
            Shows a <see cref="T:System.Windows.MessageBox" /> dialog with the specified message, using <see cref="P:BytecodeApi.MessageBoxes.CaptionForConfirmation" /> as title and "Yes", "No" and "Cancel" buttons. The title is a static <see cref="T:System.String" /> value, set to "Confirmation" by default.
            </summary>
            <param name="message">A <see cref="T:System.String" /> specifying the message to be displayed.</param>
            <returns>
            <see langword="true" />, if "Yes" has been selected;
            <see langword="false" />, if "No" has been selected;
            <see langword="null" />, if "Cancel" has been selected.
            </returns>
        </member>
        <member name="M:BytecodeApi.MessageBoxes.ConfirmationWithCancel(System.String,System.Boolean)">
            <summary>
            Shows a <see cref="T:System.Windows.MessageBox" /> dialog with the specified message, using <see cref="P:BytecodeApi.MessageBoxes.CaptionForConfirmation" /> as title and "Yes", "No" and "Cancel" buttons. The title is a static <see cref="T:System.String" /> value, set to "Confirmation" by default.
            </summary>
            <param name="message">A <see cref="T:System.String" /> specifying the message to be displayed.</param>
            <param name="isWarning"><see langword="true" /> to use the warning icon; <see langword="false" /> to use the information icon.</param>
            <returns>
            <see langword="true" />, if "Yes" has been selected;
            <see langword="false" />, if "No" has been selected;
            <see langword="null" />, if "Cancel" has been selected.
            </returns>
        </member>
        <member name="M:BytecodeApi.MessageBoxes.Warning(System.String)">
            <summary>
            Shows a <see cref="T:System.Windows.MessageBox" /> dialog with the specified message, using <see cref="P:BytecodeApi.MessageBoxes.CaptionForWarning" /> as title and an "OK" button. The title is a static <see cref="T:System.String" /> value, set to "Warning" by default.
            </summary>
            <param name="message">A <see cref="T:System.String" /> specifying the message to be displayed.</param>
        </member>
        <member name="M:BytecodeApi.MessageBoxes.Error(System.String)">
            <summary>
            Shows a <see cref="T:System.Windows.MessageBox" /> dialog with the specified message, using <see cref="P:BytecodeApi.MessageBoxes.CaptionForError" /> as title and an "OK" button. The title is a static <see cref="T:System.String" /> value, set to "Error" by default.
            </summary>
            <param name="message">A <see cref="T:System.String" /> specifying the message to be displayed.</param>
        </member>
        <member name="T:BytecodeApi.ObservableUserControl">
            <summary>
            Class that wraps a <see cref="T:System.Windows.Controls.UserControl" /> object, implementing the <see cref="T:System.ComponentModel.INotifyPropertyChanged" /> interface. Typically, properties of this class are set as a <see cref="T:System.Windows.DependencyProperty" /> on a <see cref="T:System.Windows.DependencyObject" />.
            </summary>
        </member>
        <member name="E:BytecodeApi.ObservableUserControl.PropertyChanged">
            <summary>
            Occurs when a property value has changed and is typically used by a <see cref="T:System.Windows.DependencyObject" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.ObservableUserControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.ObservableUserControl" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.ObservableUserControl.GetValue``1(System.Windows.DependencyProperty)">
            <summary>
            Returns the current effective value of a <see cref="T:System.Windows.DependencyProperty" /> on this instance of a <see cref="T:System.Windows.Controls.UserControl" />.
            </summary>
            <typeparam name="T">The return type of the <see cref="T:System.Windows.DependencyProperty" />.</typeparam>
            <param name="dependencyProperty">The <see cref="T:System.Windows.DependencyProperty" /> identifier of the property to retrieve the value for.</param>
            <returns>
            The effective value of <paramref name="dependencyProperty" /> on this instance of a <see cref="T:System.Windows.Controls.UserControl" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.ObservableUserControl.Dispatch(System.Action)">
            <summary>
            Executes the specified <see cref="T:System.Action" /> synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.
            </summary>
            <param name="action">The <see cref="T:System.Action" /> to be invoked.</param>
        </member>
        <member name="M:BytecodeApi.ObservableUserControl.Dispatch``1(System.Func{``0})">
            <summary>
            Executes the specified <see cref="T:System.Func`1" /> synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.
            </summary>
            <typeparam name="T">The return type of <paramref name="func" />.</typeparam>
            <param name="func">The <see cref="T:System.Func`1" /> to be invoked.</param>
            <returns>
            The result of <paramref name="func" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.ObservableUserControl.Get``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            Method that can be used by the <see langword="get" /> accessor of a property. Backing fields are automatically generated and stored in a <see langword="private" /> <see cref="T:System.Collections.Generic.Dictionary`2" /> with default values set to <see langword="default" />(<typeparamref name="T" />).
            <para /> Example:
            <para /> public int X { get => Get(() => X); set => Set(() => X, value); }
            </summary>
            <typeparam name="T">The type of the property.</typeparam>
            <param name="property">The strongly typed lambda expression of the property.</param>
            <returns>
            The value of the property backing field. The default value is <see langword="default" />(<typeparamref name="T" />).
            </returns>
        </member>
        <member name="M:BytecodeApi.ObservableUserControl.Set``1(System.Linq.Expressions.Expression{System.Func{``0}},``0)">
            <summary>
            Method that can be used by the <see langword="set" /> accessor of a property. Backing fields are automatically generated and stored in a <see langword="private" /> <see cref="T:System.Collections.Generic.Dictionary`2" /> with default values set to <see langword="default" />(<typeparamref name="T" />). After modification, the <see cref="E:BytecodeApi.ObservableUserControl.PropertyChanged" /> event is raised.
            <para /> Example:
            <para /> public int X { get => Get(() => X); set => Set(() => X, value); }
            </summary>
            <typeparam name="T">The type of the property.</typeparam>
            <param name="property">The strongly typed lambda expression of the property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:BytecodeApi.ObservableUserControl.RaisePropertyChanged``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            Raises the <see cref="E:BytecodeApi.ObservableUserControl.PropertyChanged" /> event on any custom property. <see cref="M:BytecodeApi.ObservableUserControl.Get``1(System.Linq.Expressions.Expression{System.Func{``0}})" /> and <see cref="M:BytecodeApi.ObservableUserControl.Set``1(System.Linq.Expressions.Expression{System.Func{``0}},``0)" /> do not necessarily need to be used in conjunction with this method. Likewise, this method is not required when using <see cref="M:BytecodeApi.ObservableUserControl.Get``1(System.Linq.Expressions.Expression{System.Func{``0}})" /> and <see cref="M:BytecodeApi.ObservableUserControl.Set``1(System.Linq.Expressions.Expression{System.Func{``0}},``0)" />.
            </summary>
            <typeparam name="T">The type of the property.</typeparam>
            <param name="property">The strongly typed lambda expression of the property.</param>
        </member>
        <member name="T:BytecodeApi.ObservableWindow">
            <summary>
            Class that wraps a <see cref="T:System.Windows.Window" /> object, implementing the <see cref="T:System.ComponentModel.INotifyPropertyChanged" /> interface. Typically, properties of this class are set as a <see cref="T:System.Windows.DependencyProperty" /> on a <see cref="T:System.Windows.DependencyObject" />.
            </summary>
        </member>
        <member name="E:BytecodeApi.ObservableWindow.PropertyChanged">
            <summary>
            Occurs when a property value has changed and is typically used by a <see cref="T:System.Windows.DependencyObject" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.ObservableWindow.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.ObservableWindow" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.ObservableWindow.GetValue``1(System.Windows.DependencyProperty)">
            <summary>
            Returns the current effective value of a <see cref="T:System.Windows.DependencyProperty" /> on this instance of a <see cref="T:System.Windows.Window" />.
            </summary>
            <typeparam name="T">The return type of the <see cref="T:System.Windows.DependencyProperty" />.</typeparam>
            <param name="dependencyProperty">The <see cref="T:System.Windows.DependencyProperty" /> identifier of the property to retrieve the value for.</param>
            <returns>
            The effective value of <paramref name="dependencyProperty" /> on this instance of a <see cref="T:System.Windows.Window" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.ObservableWindow.Dispatch(System.Action)">
            <summary>
            Executes the specified <see cref="T:System.Action" /> synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.
            </summary>
            <param name="action">The <see cref="T:System.Action" /> to be invoked.</param>
        </member>
        <member name="M:BytecodeApi.ObservableWindow.Dispatch``1(System.Func{``0})">
            <summary>
            Executes the specified <see cref="T:System.Func`1" /> synchronously on the thread the <see cref="T:System.Windows.Threading.Dispatcher" /> is associated with.
            </summary>
            <typeparam name="T">The return type of <paramref name="func" />.</typeparam>
            <param name="func">The <see cref="T:System.Func`1" /> to be invoked.</param>
            <returns>
            The result of <paramref name="func" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.ObservableWindow.Get``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            Method that can be used by the <see langword="get" /> accessor of a property. Backing fields are automatically generated and stored in a <see langword="private" /> <see cref="T:System.Collections.Generic.Dictionary`2" /> with default values set to <see langword="default" />(<typeparamref name="T" />).
            <para /> Example:
            <para /> public int X { get => Get(() => X); set => Set(() => X, value); }
            </summary>
            <typeparam name="T">The type of the property.</typeparam>
            <param name="property">The strongly typed lambda expression of the property.</param>
            <returns>
            The value of the property backing field. The default value is <see langword="default" />(<typeparamref name="T" />).
            </returns>
        </member>
        <member name="M:BytecodeApi.ObservableWindow.Set``1(System.Linq.Expressions.Expression{System.Func{``0}},``0)">
            <summary>
            Method that can be used by the <see langword="set" /> accessor of a property. Backing fields are automatically generated and stored in a <see langword="private" /> <see cref="T:System.Collections.Generic.Dictionary`2" /> with default values set to <see langword="default" />(<typeparamref name="T" />). After modification, the <see cref="E:BytecodeApi.ObservableWindow.PropertyChanged" /> event is raised.
            <para /> Example:
            <para /> public int X { get => Get(() => X); set => Set(() => X, value); }
            </summary>
            <typeparam name="T">The type of the property.</typeparam>
            <param name="property">The strongly typed lambda expression of the property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:BytecodeApi.ObservableWindow.RaisePropertyChanged``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            Raises the <see cref="E:BytecodeApi.ObservableWindow.PropertyChanged" /> event on any custom property. <see cref="M:BytecodeApi.ObservableWindow.Get``1(System.Linq.Expressions.Expression{System.Func{``0}})" /> and <see cref="M:BytecodeApi.ObservableWindow.Set``1(System.Linq.Expressions.Expression{System.Func{``0}},``0)" /> do not necessarily need to be used in conjunction with this method. Likewise, this method is not required when using <see cref="M:BytecodeApi.ObservableWindow.Get``1(System.Linq.Expressions.Expression{System.Func{``0}})" /> and <see cref="M:BytecodeApi.ObservableWindow.Set``1(System.Linq.Expressions.Expression{System.Func{``0}},``0)" />.
            </summary>
            <typeparam name="T">The type of the property.</typeparam>
            <param name="property">The strongly typed lambda expression of the property.</param>
        </member>
        <member name="T:BytecodeApi.ObservableObject">
            <summary>
            Class that wraps an object, implementing the <see cref="T:System.ComponentModel.INotifyPropertyChanged" /> interface. Typically, this class is set as a <see cref="T:System.Windows.DependencyProperty" /> on a <see cref="T:System.Windows.DependencyObject" />.
            </summary>
        </member>
        <member name="E:BytecodeApi.ObservableObject.PropertyChanged">
            <summary>
            Occurs when a property value has changed and is typically used by a <see cref="T:System.Windows.DependencyObject" />.
            </summary>
        </member>
        <member name="M:BytecodeApi.ObservableObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.ObservableObject" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.ObservableObject.Get``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            Method that can be used by the <see langword="get" /> accessor of a property. Backing fields are automatically generated and stored in a <see langword="private" /> <see cref="T:System.Collections.Generic.Dictionary`2" /> with default values set to <see langword="default" />(<typeparamref name="T" />).
            <para /> Example:
            <para /> public int X { get => Get(() => X); set => Set(() => X, value); }
            </summary>
            <typeparam name="T">The type of the property.</typeparam>
            <param name="property">The strongly typed lambda expression of the property.</param>
            <returns>
            The value of the property backing field. The default value is <see langword="default" />(<typeparamref name="T" />).
            </returns>
        </member>
        <member name="M:BytecodeApi.ObservableObject.Set``1(System.Linq.Expressions.Expression{System.Func{``0}},``0)">
            <summary>
            Method that can be used by the <see langword="set" /> accessor of a property. Backing fields are automatically generated and stored in a <see langword="private" /> <see cref="T:System.Collections.Generic.Dictionary`2" /> with default values set to <see langword="default" />(<typeparamref name="T" />). After modification, the <see cref="E:BytecodeApi.ObservableObject.PropertyChanged" /> event is raised.
            <para /> Example:
            <para /> public int X { get => Get(() => X); set => Set(() => X, value); }
            </summary>
            <typeparam name="T">The type of the property.</typeparam>
            <param name="property">The strongly typed lambda expression of the property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:BytecodeApi.ObservableObject.RaisePropertyChanged``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            Raises the <see cref="E:BytecodeApi.ObservableObject.PropertyChanged" /> event on any custom property. <see cref="M:BytecodeApi.ObservableObject.Get``1(System.Linq.Expressions.Expression{System.Func{``0}})" /> and <see cref="M:BytecodeApi.ObservableObject.Set``1(System.Linq.Expressions.Expression{System.Func{``0}},``0)" /> do not necessarily need to be used in conjunction with this method. Likewise, this method is not required when using <see cref="M:BytecodeApi.ObservableObject.Get``1(System.Linq.Expressions.Expression{System.Func{``0}})" /> and <see cref="M:BytecodeApi.ObservableObject.Set``1(System.Linq.Expressions.Expression{System.Func{``0}},``0)" />.
            </summary>
            <typeparam name="T">The type of the property.</typeparam>
            <param name="property">The strongly typed lambda expression of the property.</param>
        </member>
        <member name="T:BytecodeApi.SingleInstanceManager">
            <summary>
            Helper class for managing single instance UI applications. A second instance can detect an already running instance and optionally trigger the first instance to be notified.
            </summary>
        </member>
        <member name="F:BytecodeApi.SingleInstanceManager.Activated">
            <summary>
            Occurs when <see cref="M:BytecodeApi.SingleInstanceManager.SendActivationMessage" /> is called by another running instance.
            </summary>
        </member>
        <member name="M:BytecodeApi.SingleInstanceManager.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BytecodeApi.SingleInstanceManager" /> class and registers a <see cref="T:System.Threading.Mutex" /> as well as a WindowMessage using the specified identifier.
            </summary>
            <param name="mutexName">A <see cref="T:System.String" /> representing the name of the <see cref="T:System.Threading.Mutex" /> and the WindowMessage.</param>
        </member>
        <member name="M:BytecodeApi.SingleInstanceManager.Dispose">
            <summary>
            Releases all resources used by the current instance of the <see cref="T:BytecodeApi.SingleInstanceManager" /> class.
            </summary>
        </member>
        <member name="M:BytecodeApi.SingleInstanceManager.RegisterMainWindow(System.Windows.Window)">
            <summary>
            Registers a <see cref="T:System.Windows.Window" /> object that identifies as the main application window and creates a WndProc message pump.
            </summary>
            <param name="window">The <see cref="T:System.Windows.Window" /> object identifying as the main application window.</param>
        </member>
        <member name="M:BytecodeApi.SingleInstanceManager.CheckInstanceRunning">
            <summary>
            Checks whether an instance is already running by querying the <see cref="T:System.Threading.Mutex" />.
            </summary>
            <returns>
            <see langword="true" />, if an instance is already running;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:BytecodeApi.SingleInstanceManager.SendActivationMessage">
            <summary>
            Sends a notification to other running instances. The <see cref="F:BytecodeApi.SingleInstanceManager.Activated" /> event will be triggered in all instances, except the current.
            </summary>
        </member>
        <member name="T:BytecodeApi.TreeViewItemHelper">
            <summary>
            Helper class for the WPF <see cref="T:System.Windows.Controls.TreeView" /> control that checks whether a MouseOver event occurrs over an item directly. This is relevant, when MouseOver effects need to be implemented for a <see cref="T:System.Windows.Controls.TreeViewItem" /> excluding its children.
            </summary>
        </member>
        <member name="F:BytecodeApi.TreeViewItemHelper.IsMouseDirectlyOverItemProperty">
            <summary>
            Identifies the <see cref="T:BytecodeApi.TreeViewItemHelper" />.IsMouseDirectlyOverItem dependency property.
            </summary>
        </member>
        <member name="M:BytecodeApi.TreeViewItemHelper.GetIsMouseDirectlyOverItem(System.Windows.DependencyObject)">
            <summary>
            Returns <see langword="true" />, if the mouse is directly hovering a <see cref="T:System.Windows.Controls.TreeViewItem" /> and <see langword="false" /> if it is hovering a child or no <see cref="T:System.Windows.Controls.TreeViewItem" /> at all.
            </summary>
            <param name="obj">The <see cref="T:System.Windows.Controls.TreeViewItem" /> object to check.</param>
            <returns>
            <see langword="true" />, if the mouse is directly hovering a <see cref="T:System.Windows.Controls.TreeViewItem" />;
            <see langword="false" /> if it is hovering a child or no <see cref="T:System.Windows.Controls.TreeViewItem" /> at all.
            </returns>
        </member>
    </members>
</doc>
